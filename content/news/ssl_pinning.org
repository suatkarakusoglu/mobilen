#+title: SSL Pinning
#+date: [2023-07-11 Tue]
#+author: Suat Karakuşoğlu
#+kind: news

[[https://tr.linkedin.com/in/suat-karakusoglu][Suat Karakuşoğlu]] yazdı.

#+CAPTION: [[https://docs.wavemaker.com/learn/blog/2020/12/15/certificate-pinning/][SSL Pinleme]]
#+ATTR_LATEX: :width \textwidth
#+ATTR_HTML: :width 100%
[[file:./resources/mobilen/images/ssl_and_pinning_certificate_topology.jpg]]

Merhabalar, bu yazımızda güvenliğe dokunan bir konudan bahsedeceğiz. Verinin güvenliği akış halinde, işlenirken veya saklanırken farklı yöntemler ile sağlanmakta.

SSL Pinning verinin iki parti arasında iletim esnasındaki güvenliğini korumak için ortaya çıkmıştır. =SSL Pinning= dediğimizde iki kavram var birisi =SSL= diğeri ise =Pinning= işlemi. O nedenle ilk önce SSL hakkında ufak bir bilgi ile başlayalım.

** SSL'in Kısa tarihçesi
Güvenli Geçiş Katmanları diye türkçeleştirebileceğimiz bir tabir olan SSL websitelerinin doğması ile beraber 1990'ların ortasında bağlanılan sitelerin güvenliğini teyit etmek için kullandığı bir güvenlik yöntemidir.

Burada =istemci (client)= =ssl= sayesinde =sunucu (server)= ile arasında olan iletişimi geçerli bir sertifikaya guvenerek yapmaktadir.

Sertifika otoritelerinin (CA Authorities) verdiği sertifikalar ile (chain of certificate) üzerinden bu sağlanmaktadır. Ancak herhangi kötü niyetli birileride geçerli sertifikalara sahip olabilir; o nedenle bu riski düşürebilmek adına ilgili sertifikalar her iki partide (istemci/sunucu) önceden bulunarak, bağlantının gerçekten doğru istemci ve doğru sunucu ile olduğunu garantiler.

** MİTM (Man in the Middle) Atağı
SSL'in eksik kaldığı noktada kötü niyetli birinin de sertifika sahibi olduğunda istemci ve sunucu arasında zaafiyet meydana gelebilir. İletişim'in ortasına kendisini yerleştirip ortamı dinleyerek bilgi elde etmeye çalışan atak türüdür.

** Pinning (Pinlemek) nedir?
Pinlemenin ne olduğunu öğrenmeden önce neyi pinleyeceğimizden biraz bahsedelim.
Pinlenecek olan dosyaya Sertifika (Certificate) diyoruz.

Asimetrik şifrelemedeki Public/Private anahtar çiftleri, sertifika için önemli kavramlar.
=Public Key= sunucuya gönderilecek olan bilgiyi başkaları okumasın diye şifrelemede kullanılıyor.
Bu =public key= sertifikanın içinde bulunuyor ve istemci tarafında kullanılıyor.
Private anahtar ise gönderilen veriyi server'da çözümleyerek kullanıyor.

Zaten =https= üzerinden bu bilgiler güvenli şekilde iletiliyor iken neden pinlemeye ihtiyaç duyuluyor sorusunun cevabını vermek gerekiyor.

Normalde sertifikalar "Certificate of Chain" denilen bir zincir uzerinden iletisimi guvenli hale getiriyor. O nedenle tum zincir =root= sertifikaya kadar onaylandiktan sonra iki parti arasinda iletisim baslayabiliyor. Ama, uygulama sunucunun verdigi sertifikaya guvenirken bu sertifikanin kendi sunucusu mu yoksa bir baskasinin sunucusumu olduguna dair bilgiye sahip degildir. =MITM= saldirisina acik olan tarafi burasidir.

Pinleme yaptiginiz vakit ise direkt olarak bu iletisim garantisini istemci/sunucu arasinda karsilikli guvenli hale getirebiliyorsunuz; herhangi bir baska otoriteye gerek duymuyorsunuz.

Önceden istemciye gömülen sunucunun =public= anahtarı olursa, istemci sunucuyla iletişim kurmadan önce kendisinde olan anahtar ile sunucudaki anahtarı karşılaştırıp, eşleşmemesi durumunda direkt iletişimi kesiyor.

Özellikle güvenliğin daha temelde olduğu uygulamalarda bankacılık ve finansal enstrüman olarak görev yapan uygulamalarda bu güvenlik önlemi tercih edilmektedir. Mobil uygulamalarda da yoğunluklu olarak kullanılan bir güvenlik tedbiridir.

** Mobil Uygulama Entegrasyonları
1. İlk adım olarak sunucunun =public= anahtarini veya SSL sertifikasını çıkarmanız gerekiyor.

2. Bu anahtara sahip sertifikayı veya public anahtarı istemci uygulamaya pinlemek/gömmek gerekiyor. Istemci tarafindaki network katmanında =sunucuya= isteklerinde bu anahtarlarin eslesme kontrolünü yapacak kontrolü eklemek gerekiyor.

3. Dikkat edilmesi gereken en önemli noktalardan bir tanesi sertifikanın süresi bittiğinde yenileme ihtiyacını takip edebilmek.
   - Certificate Pinning :: Tüm sertifikanın =client='a gömüldüğü ve sorguya cevap veren =server='in sertifikası ile karşılaştırıldığı pinleme yöntemi.
     Bu durumda =client='ların eski kalanlarının =force update= ile zorunlu güncellemeye tabii olması gerekiyor.

   - Public Key Pinning :: Sertifika'da yer alan =public key='in veya =public key hash='inin istemciye konulmasi ve karşılaştırma için kullanılması durumunu ifade eder.
     Normalde sertifikalarin belli periyotlarda yenilenmesi gerekmektedir. Bu yenileme herhangi bir private key sizintisi durumlarinin onune gecmeyi amaclar.
     Public anahtari pinledigimiz takdirde istersek eski =public/private= anahtar cifti ile yeni sertifika olusturabiliriz.
     Public Key pinleme ise Bu durumda sunucu tarafında sertifika değişimlerinde yeni sertifika eski public/private key pair ile üretildiği durumda force update gerekmeden devam edilebilir. Ancak böyle devam etmesi sertifikanın yenilenme amacına aykırı olmaktadır.

Özet olarak, =SSL Pinning= dedigimiz olay istemci ile sunucu arasindaki iletisimi onceden belirlenen anahtar cifti ile disariya sizmasini engelleyen yontemdir.
Sistem guvenligi konusunda arastirmalar yapan bagimsiz kurulus [[https://owasp.org/][OWASP]], [[https://tr.wikipedia.org/wiki/Man-in-the-middle_sald%C4%B1r%C4%B1s%C4%B1][MITM]] turu ataklar icin onlem olarak bu yontemi tavsiye etmektedir.
iOS tarafında =NSURLSession= veya =Alamofire= bağımlılıkları üzerinde bu pratikler rahatlikla uygulanabiliyor.
Android tarafinda ise OKHttpClient ve Retrofit gibi populer kutuphanelerde bu pratiklerin nasil yapildigina dair bircok ornek bulubilirsiniz.

** Kaynakça
- [[https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning][OWASP SSL Pinleme]]
- [[https://mas.owasp.org/MASTG/][OWASP Mobil Uygulama Güvenlik Test Kitabı]]
- [[https://docs.wavemaker.com/learn/blog/2020/12/15/certificate-pinning/][Certificate Pinning]]
