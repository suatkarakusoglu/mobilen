<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<author><name>Suat Karakuşoğlu</name></author>
<title>Mobilen Yazılar</title>
<description>Mobilen Dünyasından Bilgiler ...</description>
<generator>Emacs webfeeder.el</generator>
<link>https://mobilen.art</link>
<atom:link href="https://mobilen.art/rss/news.xml" rel="self" type="application/rss+xml"/>
<lastBuildDate>Tue, 31 Oct 2023 14:51:03 +0300</lastBuildDate>
<item>
  <title>Sembol Dünyasının Büyüsü: SF Symbols</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://www.linkedin.com/in/burak-ceylan-828abb181/">Burak Ceylan</a> yazdı.
</p>


 <div id="org9e23182" class="figure">
 <p> <img src="/img/sf-symbols-og-twitter.jpg" class="content-image" width="100%"></img></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org7c7f673">
 <p>
Merhaba Mobilen okurları, bu yazımda sizlere SF Symbols’ün büyüleyici
dünyasına adım atarken nelerin beklediğini elimden geldiğince anlatmaya
çalışacağım.
</p>
</div>

 <h3> <a id="sf-symbols-nedir" class="anchor" href="#sf-symbols-nedir">¶</a>SF Symbols Nedir?</h3> <div class="outline-text-3" id="text-org99f0f95">
 <p>
SF Symbols, Apple’ın geliştiricilere sunmuş olduğu güçlü bir sembol
kitaplığıdır. Kitaplığın sunmuş olduğu bu semboller, ıOS, maçOS veya
ipadOS platformları için geliştirilen uygulamaların kullanıcı arayüzünü
zenginleştirmek ve daha etkileyici hale getirmek için harika bir imkan
sunmaktadır.
</p>
</div>

 <h3> <a id="sf-symbols-ile-neler-yapabiliriz" class="anchor" href="#sf-symbols-ile-neler-yapabiliriz">¶</a>SF Symbols ile Neler Yapabiliriz?</h3> <div class="outline-text-3" id="text-org9443709">
 <p>
SF Symbols kitaplığının yetkinliklerini uyumluluk, oluşturma modları
(rendering modes), değişken renk (multicolor), boyutlar ve ağırlık
(weight and scales), tasarım çeşitleri (designt variants) ve
animasyonlar (animations) konu başlıkları üzerinde durarak anlatmaya
çalışacağım.
</p>
</div>

 <h4> <a id="uyumluluk" class="anchor" href="#uyumluluk">¶</a>Uyumluluk</h4> <div class="outline-text-4" id="text-org682eb14">
 <p>
SF Symbols, San Francisco sistem yazı tipiyle sorunsuz bir şekilde
bütünleşen, tüm ağırlık ve boyutlardaki metinlerle otomatik olarak
hizalanan binlerce tutarlı ve yüksek düzeyde yapılandırılabilir sembol
sağlar.
</p>
</div>

 <h4> <a id="görüntüleme-modları-rendering-modes" class="anchor" href="#görüntüleme-modları-rendering-modes">¶</a>Görüntüleme Modları (Rendering Modes)</h4> <div class="outline-text-4" id="text-org9cdb135">
 <p>
SF Symbols 3 ve sonrası, sembollerin görünüm yönetimi için oluşturma
modları  <code>Rendering Modes</code> adı verilen bir dizi, tek renkli  <code>monochrome</code>,
hiyerarşik  <code>hierarchical</code>, palet  <code>palette</code> ve çok renkli  <code>multicolor</code>,
seçenek sunar. Bu seçeneklerin bize sağlamış olduğu çeşitliliği aşağıda
yazmış olduğum kod bloğu ile örnekleyerek açıklayacağım.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="kd">var</span>  <span class="nv">symbols</span> <span class="p">:</span>  <span class="p">[</span> <span class="nb">String</span> <span class="p">]</span>  <span class="p">=</span>
         <span class="p">[</span>
           <span class="s">"square.and.arrow.up"</span> <span class="p">,</span>
           <span class="s">"folder.badge.plus"</span> <span class="p">,</span>
           <span class="s">"trash.slash"</span> <span class="p">,</span>
           <span class="s">"calendar.day.timeline.right"</span> <span class="p">,</span>
           <span class="s">"list.number"</span> <span class="p">,</span>
           <span class="s">"textformat.abc.dottedunderline"</span> <span class="p">,</span>
           <span class="s">"iphone.gen3.radiowaves.left.and.right"</span> <span class="p">,</span>
           <span class="s">"pc"</span> <span class="p">,</span>
         <span class="p">]</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">HStack</span>  <span class="p">{</span>
               <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
                   <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">)</span>
               <span class="p">}</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Yukarıdaki kod bloğunda SF Symbols kütüphanesindeki isimlere göre
oluşturulmuş sekiz adet sembol ekrana çizdirilmektedir.
</p>

 <p>
 <b>Tek Renkli (Monochrome):</b> Sembolün oluşturulma modunu monochrome (tek
renkli) olarak ayarlamamız sonucunda sembolün tüm katmanlarına
istediğimiz renk uygulanarak oluşturulmaktadır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
       <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">symbolRenderingMode</span> <span class="p">(.</span> <span class="n">monochrome</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">)</span>
   <span class="p">}</span>
</pre></div>


 <div id="orgdc0a753" class="figure">
 <p> <img src="/img/sf-monochrome@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Monochrome</p>
</div>

 <p>
 <b>Hiyerarşik (Hierarchical):</b> Semboldeki tüm katmanlara verilen renk
uygulanmakta ve katmanlardaki rengin opaklığı katmanların hiyerarşi
düzeyine göre otomatik olarak ayarlanarak oluşturulmaktadır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
       <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">symbolRenderingMode</span> <span class="p">(.</span> <span class="n">hierarchical</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">)</span>
   <span class="p">}</span>
</pre></div>


 <div id="org8c9c190" class="figure">
 <p> <img src="/img/sf-hierarchical@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Hiyerarşik</p>
</div>

 <p>
 <b>Palet (Palette):</b> Hiyerarşideki her katman icin bir belirtilen renk
kullanılarak sembolün iki veya daha fazla renkten oluşmasını
sağlamaktadır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
       <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">symbolRenderingMode</span> <span class="p">(.</span> <span class="n">palette</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">,</span>  <span class="p">.</span> <span class="n">gray</span> <span class="p">)</span>
   <span class="p">}</span>
</pre></div>


 <div id="org7297802" class="figure">
 <p> <img src="/img/sf-palette@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Palet</p>
</div>

 <p>
 <b>Çok Renkli (Multicolor):</b> Sembolun taban (base) katmanındaki rengi
belirtilir ve diger katmanlarindaki renkler sistem tarafindan konfigüre
edilir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
       <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">symbolRenderingMode</span> <span class="p">(.</span> <span class="n">multicolor</span> <span class="p">)</span>
         <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">)</span>
   <span class="p">}</span>
</pre></div>


 <div id="org29149ce" class="figure">
 <p> <img src="/img/sf-multicolor@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>Çok Renkli</p>
</div>

 <p>
 <b>BONUS:</b>
</p>

 <div class="highlight"> <pre> <span></span>   <span class="c1">// Yukarıda açıkladığım oluşturma modlarında belirttiğimiz renkler yerine</span>
   <span class="c1">// linear gradient kullanılarak semboller kullanıcılar için</span>
   <span class="c1">// daha ilgi çekici bir hale getirilebilmektedir.</span>

   <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"person.3.sequence.fill"</span> <span class="p">)</span>
     <span class="p">.</span> <span class="n">symbolRenderingMode</span> <span class="p">(.</span> <span class="n">palette</span> <span class="p">)</span>
     <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(</span>
       <span class="p">.</span> <span class="n">linearGradient</span> <span class="p">(</span> <span class="n">colors</span> <span class="p">:</span>  <span class="p">[.</span> <span class="n">red</span> <span class="p">,</span>  <span class="p">.</span> <span class="n">black</span> <span class="p">],</span>  <span class="n">startPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">top</span> <span class="p">,</span>  <span class="n">endPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">bottomTrailing</span> <span class="p">),</span>
       <span class="p">.</span> <span class="n">linearGradient</span> <span class="p">(</span> <span class="n">colors</span> <span class="p">:</span>  <span class="p">[.</span> <span class="n">green</span> <span class="p">,</span>  <span class="p">.</span> <span class="n">black</span> <span class="p">],</span>  <span class="n">startPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">top</span> <span class="p">,</span>  <span class="n">endPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">bottomTrailing</span> <span class="p">),</span>
       <span class="p">.</span> <span class="n">linearGradient</span> <span class="p">(</span> <span class="n">colors</span> <span class="p">:</span>  <span class="p">[.</span> <span class="n">blue</span> <span class="p">,</span>  <span class="p">.</span> <span class="n">black</span> <span class="p">],</span>  <span class="n">startPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">top</span> <span class="p">,</span>  <span class="n">endPoint</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">bottomTrailing</span> <span class="p">)</span>
     <span class="p">)</span>
</pre></div>


 <div id="org739472c" class="figure">
 <p> <img src="/img/how-to-get-custom-colors-and-transparency-with-sf-symbols-5@2x.webp" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 5: </span>Bonus: Gradientli</p>
</div>
</div>

 <h4> <a id="değişken-renk-variable-color" class="anchor" href="#değişken-renk-variable-color">¶</a>Değişken Renk (Variable color)</h4> <div class="outline-text-4" id="text-orgfe3baaa">
 <p>
SF Symbols 4 ile birlikte gelen değişken renk özelliği sayesinde
uygulama içerisindeki sembollerin oluşturma modundan bağımsız olarak
kapasite veya güç gibi zaman içerisinde değişkenlik gösterebilen
özellikleri temsil edilebilir oldu. Sembole verilen yüzde değer ile
sembolün katmanlarının opaklığı ayarlanarak kullanıcıya sunulmaktadır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="p">@</span> <span class="n">State</span>  <span class="kd">var</span>  <span class="nv">progress</span> <span class="p">:</span>  <span class="nb">Double</span>  <span class="p">=</span>  <span class="mi">0</span>

       <span class="kd">var</span>  <span class="nv">formattedProgress</span>  <span class="p">:</span>  <span class="nb">String</span>  <span class="p">{</span>
           <span class="nb">String</span> <span class="p">(</span> <span class="n">format</span> <span class="p">:</span>  <span class="s">"%.0f"</span> <span class="p">,</span>  <span class="n">progress</span> <span class="o">/</span> <span class="mf">0.33</span> <span class="p">)</span>
       <span class="p">}</span>

       <span class="kd">var</span>  <span class="nv">symbols</span> <span class="p">:</span>  <span class="p">[</span> <span class="nb">String</span> <span class="p">]</span>  <span class="p">=</span>
         <span class="p">[</span>
           <span class="s">"speaker.wave.3.fill"</span> <span class="p">,</span>
           <span class="s">"wifi"</span> <span class="p">,</span>
           <span class="s">"chart.bar.fill"</span> <span class="p">,</span>
           <span class="s">"touchid"</span> <span class="p">,</span>
         <span class="p">]</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">VStack</span>  <span class="p">{</span>
               <span class="n">HStack</span>  <span class="p">{</span>
                   <span class="n">ForEach</span> <span class="p">(</span> <span class="n">symbols</span> <span class="p">,</span>  <span class="n">id</span> <span class="p">:</span>  <span class="err">\</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">symbol</span>  <span class="k">in</span>
                       <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="n">symbol</span> <span class="p">,</span>  <span class="n">variableValue</span> <span class="p">:</span>  <span class="n">progress</span> <span class="p">)</span>
                         <span class="p">.</span> <span class="n">imageScale</span> <span class="p">(.</span> <span class="n">large</span> <span class="p">)</span>
                         <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">red</span> <span class="p">)</span>
                   <span class="p">}</span>
               <span class="p">}</span>
                 <span class="p">.</span> <span class="n">padding</span> <span class="p">()</span>

               <span class="n">Text</span> <span class="p">(</span> <span class="s">"Current Progress: </span> <span class="si">\(</span> <span class="n">formattedProgress</span> <span class="si">)</span> <span class="s">"</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">font</span> <span class="p">(.</span> <span class="n">system</span> <span class="p">(</span> <span class="n">size</span> <span class="p">:</span>  <span class="mi">25</span> <span class="p">,</span>  <span class="n">weight</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">bold</span> <span class="p">,</span>  <span class="n">design</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">rounded</span> <span class="p">))</span>

               <span class="n">Slider</span> <span class="p">(</span> <span class="n">value</span> <span class="p">:</span>  <span class="err">$</span> <span class="n">progress</span> <span class="p">,</span>  <span class="k">in</span> <span class="p">:</span>  <span class="mf">0.</span> <span class="p">..</span> <span class="mi">1</span> <span class="p">,</span>  <span class="n">step</span> <span class="p">:</span>  <span class="mf">0.33</span> <span class="p">){</span>
               <span class="p">}</span>  <span class="n">minimumValueLabel</span> <span class="p">:</span>  <span class="p">{</span>
                   <span class="n">Text</span> <span class="p">(</span> <span class="s">"0"</span> <span class="p">).</span> <span class="n">font</span> <span class="p">(.</span> <span class="n">title</span> <span class="p">).</span> <span class="n">fontWeight</span> <span class="p">(.</span> <span class="n">bold</span> <span class="p">)</span>
               <span class="p">}</span>  <span class="n">maximumValueLabel</span> <span class="p">:</span>  <span class="p">{</span>
                   <span class="n">Text</span> <span class="p">(</span> <span class="s">"3"</span> <span class="p">).</span> <span class="n">font</span> <span class="p">(.</span> <span class="n">title</span> <span class="p">).</span> <span class="n">fontWeight</span> <span class="p">(.</span> <span class="n">bold</span> <span class="p">)</span>
               <span class="p">}</span>
                 <span class="p">.</span> <span class="n">padding</span> <span class="p">()</span>

           <span class="p">}</span>
             <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">font</span> <span class="p">(.</span> <span class="n">system</span> <span class="p">(</span> <span class="n">size</span> <span class="p">:</span>  <span class="mi">100</span> <span class="p">))</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>


 <div id="org1ef9a1e" class="figure">
 <p> <img src="/img/variable_color.gif" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 6: </span>Değişken Renk-1</p>
</div>


 <div id="org2522012" class="figure">
 <p> <img src="/img/sf-variable-color@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 7: </span>Değişken Renk-2</p>
</div>
</div>

 <h4> <a id="boyutlar-ve-ağırlık-scales-and-weights" class="anchor" href="#boyutlar-ve-ağırlık-scales-and-weights">¶</a>Boyutlar ve Ağırlık (Scales and Weights)</h4> <div class="outline-text-4" id="text-org5efab17">
 <p>
SF Symbols, barındırdığı semboller için sağladığı üç adet boyut (small,
medium (the default), large) ve dokuz adet ağırlık (ultralight, thin,
light, regular, medium, semibold, bold, heavy, black) çeşitliliği ile
uyarlanabilir (adaptable) tasarımlar oluşturmaya yardımcı olmaktadir.
</p>

 <p>
ImageScale ve fontWeight view modifierları aracılığı ile sembolün boyut
ve yazı tipi ağırlığı ayarlanabilmektedir.
</p>


 <div id="org0e4cb77" class="figure">
 <p> <img src="/img/Scales.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 8: </span>Boyutlar</p>
</div>


 <div id="org884fd65" class="figure">
 <p> <img src="/img/Weights.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 9: </span>Ağırlıklar</p>
</div>

 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"folder.badge.plus"</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">foregroundStyle</span> <span class="p">(.</span> <span class="n">blue</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">imageScale</span> <span class="p">(.</span> <span class="n">large</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">fontWeight</span> <span class="p">(.</span> <span class="n">bold</span> <span class="p">)</span>

       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Aşağıda bulunan sınıflandırma görseli Apple’ın resmi sitesinden
alıntılanmış olup kullanımların sembole etkisini detaylıca
göstermektedir.
</p>


 <div id="org3ee9012" class="figure">
 <p> <img src="/img/sf-scales-weights@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 10: </span>SF Boyut ve Ağırlıklar</p>
</div>

 <blockquote>
 <p>
Boyutlar San Francisco sistem yazı tipinin  başlık yüksekliğine (yazı tipindeki büyük harfin satır taban çizgisi üzerindeki yüksekliği) göre tanımlanmaktadır.
</p>
</blockquote>
</div>

 <h4> <a id="tasarım-çeşitleri-design-variants" class="anchor" href="#tasarım-çeşitleri-design-variants">¶</a>Tasarım çeşitleri (Design variants)</h4> <div class="outline-text-4" id="text-orgb020bea">
 <p>
SF Symbols iOS15 ile birlikte gelen symbolVariant view modifierı
sayesinde barındırdığı sembollerin anlamını çeşitlendirebimektedir. Bu
çeşitler daire (circle), kare (square), dörtgen (rectangle), doldurma
(fill) ve çizgidir (slash).
</p>


 <div id="orgad73c46" class="figure">
 <p> <img src="/img/sf-variants@2x.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 11: </span>Çeşitler</p>
</div>

 <div class="highlight"> <pre> <span></span>   <span class="c1">// Örnekte kullanmış olduğum symbolVariant view modifierları</span>
   <span class="c1">// birbiri ardindan kullanılarak cumulatif bir sonuc elde edilebilmektedir.</span>

   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"heart"</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">imageScale</span> <span class="p">(.</span> <span class="n">large</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">symbolVariant</span> <span class="p">(.</span> <span class="n">circle</span> <span class="p">)</span>
             <span class="p">.</span> <span class="n">symbolVariant</span> <span class="p">(.</span> <span class="n">slash</span> <span class="p">)</span>

       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h4> <a id="animasyonlar-animations" class="anchor" href="#animasyonlar-animations">¶</a>Animasyonlar (Animations)</h4> <div class="outline-text-4" id="text-orgebb7c60">
 <p>
SF Symbols, barındırdığı sembolleri mecazen canlandırmak için
kullanılabilecek ve konfigure edilerek kişiselleştirilebilecek animasyon
dizisi sunmaktadır. SF Symbols 5 ve sonrasında, başlıca  <code>appear</code>
(görünme),  <code>disappear</code> (kaybolma),  <code>bounce</code> (zıplama),  <code>scale</code> (büyüyüp
küçülme),  <code>pulse</code> (nabız),  <code>variable color</code> (değiken renk) ve  <code>replace</code> (yer
değiştirme) animasyonlarını sunmaktadır.
</p>

 <p>
SymbolEffect view modifierı aracılığı animasyon efekti ayarlanabilmektedir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">VStack</span>  <span class="p">{</span>
               <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"folder.badge.plus"</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">symbolEffect</span> <span class="p">(.</span> <span class="n">appear</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">frame</span> <span class="p">(</span> <span class="n">width</span> <span class="p">:</span>   <span class="mi">100</span> <span class="p">,</span>  <span class="n">height</span> <span class="p">:</span>  <span class="mi">100</span> <span class="p">)</span>
           <span class="p">}</span>
             <span class="p">.</span> <span class="n">padding</span> <span class="p">()</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
 <b>Görünme (Appear):</b> Sembolün yavaş bir şekilde ortaya çıkmasını
sağlamaktadır.
 <img src="/img/sf-animation-appear.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Kaybolma (Disappear):</b> Sembolün yavaş bir şekilde görünmez hale gelmesini sağlamaktadır.
 <img src="/img/sf-animation-disappear.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Zıplama (Bounce):</b> Sembolün yukarı aşağı hareketi ile elastik bir zıplama efekti meydana getirilmektedir.
 <img src="/img/sf-animation-bounce.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Boyut (Scale):</b> Sembolün büyütülüp küçültülerek boyut değişikliğini gerçekleştirmektedir.
 <img src="/img/sf-animation-scale.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Nabız (Pulse):</b> Sembolün belirli katmanlarındaki opaklığı periyodik
olarak değiştirerek nabız atımı görünümü sağlar.
 <img src="/img/sf-animation-pulse.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Değişken Renk (Variable color):</b> Sembol içerisindeki katmanların
opaklığını artımlı olarak değiştirmektedir.
 <img src="/img/sf-animation-variable-color.gif" class="content-image" width="100%"></img></p>

 <p>
 <b>Yer Değiştirme (Replace):</b> Bir sembolün diğeri ile yer değiştirmesinin
geçişinin animasyonunu sağlamaktadır.
 <img src="/img/sf-animation-replace.gif" class="content-image" width="100%"></img></p>

 <p>
Artık SF Symbols kitaplığını kullanarak uygulamanızın arayüzünü daha
anlaşılır ve tutarlı hale getirebilirsiniz.
</p>

 <p>
Bir sonraki yazıda tekrar buluşmak dileğiyle.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org1f59593">
 <ul class="org-ul"> <li> <a href="https://www.hackingwithswift.com/quick-start/swiftui/how-to-animate-sf-symbols">Animate SF Symbols</a></li>
 <li> <a href="https://developer.apple.com/design/human-interface-guidelines/sf-symbols">Apple Human Interface Guideline for SF Symbols</a></li>
 <li> <a href="https://www.hackingwithswift.com/quick-start/swiftui/how-to-get-custom-colors-and-transparency-with-sf-symbols">Custom color and Transparency</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/sf_symbols/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/sf_symbols/index.html</guid>
  <pubDate>Tue, 31 Oct 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Okuma Notları: The Art Of Readable Code (3) Son</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/myusufka">Yusuf Kaya</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgf71100c">
 <p>
Merhabalar, bu sayıda  <b>The Art Of Readable Code</b> kitabının okuma
notlarının son bölümünü paylaşacağım.
</p>
</div>

 <h3> <a id="kodu-yeniden-düzenleme" class="anchor" href="#kodu-yeniden-düzenleme">¶</a>Kodu Yeniden Düzenleme</h3> <div class="outline-text-3" id="text-org6c9c30f">
 <p>
Bu bölümde, kodunuzu fonksiyon düzeyinde yeniden düzenleyebileceğimiz
değişiklikleri tartışacağız. Özellikle, kodumuzu yeniden düzenlemenin üç
yolunu ele alacağız:
</p>

 <ol class="org-ol"> <li>Ana hedefinizle ilgisi olmayan “ilgisiz alt sorunları” çıkarın.</li>
 <li>Kodunuzu sadece bir görevi yerine getirecek şekilde yeniden
düzenleyin.</li>
 <li>Önce kodunuzu kelimelerle tanımlayın ve bu tanımı daha temiz bir
çözüme rehberlik etmek için kullanın.</li>
</ol></div>

 <h4> <a id="i̇lgisiz-alt-sorunları-çıkarmak" class="anchor" href="#i̇lgisiz-alt-sorunları-çıkarmak">¶</a>İlgisiz Alt Sorunları Çıkarmak</h4> <div class="outline-text-4" id="text-org6c2b9d6">
 <p>
Mühendislik, büyük sorunları küçük parçalara bölmek ve bu sorunların
çözümlerini bir araya getirmekle ilgilidir. Bu prensibi kodumuza
uygulamak, onu daha sağlam ve okunaklı hale getirir:
</p>

 <ol class="org-ol"> <li>Bir fonksiyonu veya kod bloğunu inceleyin ve kendinize şu soruyu
sorun: “Bu kodun hedefi nedir?”</li>
 <li>Her kod satırı için kendinize şu soruyu sorun: “Bu kod, belirlenen
hedefe doğrudan katkıda bulunuyor mu? Yoksa bu hedefe ulaşmak için
gerekli olan ilgisiz bir alt sorunu mu çözüyor?”</li>
 <li>Eğer yeterli sayıda kod satırı ilgisiz bir alt sorunu çözüyorsa, bu
kodu ayrı bir fonksiyona çıkarın.</li>
</ol> <p>
Şimdi, bu tekniği fark etmek kolaydır ancak birçok programcı bu tekniği
yeterince kullanmaz. İlgisiz alt sorunları aktif olarak aramak önemli
bir yöntemdir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">findClosestLocation</span> <span class="p">(</span> <span class="n">lat</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">,</span>  <span class="n">lng</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">,</span>  <span class="n">array</span> <span class="p">:</span>  <span class="p">[</span> <span class="n">Location</span> <span class="p">])</span>  <span class="p">-></span>  <span class="n">Location</span> <span class="p">?</span>  <span class="p">{</span>
       <span class="kd">var</span>  <span class="nv">closest</span> <span class="p">:</span>  <span class="n">Location</span> <span class="p">?</span>
       <span class="kd">var</span>  <span class="nv">closestDist</span>  <span class="p">=</span>  <span class="nb">Double</span> <span class="p">.</span> <span class="n">greatestFiniteMagnitude</span>
       <span class="k">for</span>  <span class="n">location</span>  <span class="k">in</span>  <span class="n">array</span>  <span class="p">{</span>
           <span class="kd">let</span>  <span class="nv">dist</span>  <span class="p">=</span>  <span class="n">sphericalDistance</span> <span class="p">(</span> <span class="n">lat1</span> <span class="p">:</span>  <span class="n">lat</span> <span class="p">,</span>  <span class="n">lng1</span> <span class="p">:</span>  <span class="n">lng</span> <span class="p">,</span>  <span class="n">lat2</span> <span class="p">:</span>  <span class="n">location</span> <span class="p">.</span> <span class="n">latitude</span> <span class="p">,</span>  <span class="n">lng2</span> <span class="p">:</span>  <span class="n">location</span> <span class="p">.</span> <span class="n">longitude</span> <span class="p">)</span>
           <span class="k">if</span>  <span class="n">dist</span>  <span class="o"><</span>  <span class="n">closestDist</span>  <span class="p">{</span>
               <span class="n">closest</span>  <span class="p">=</span>  <span class="n">location</span>
               <span class="n">closestDist</span>  <span class="p">=</span>  <span class="n">dist</span>
           <span class="p">}</span>
       <span class="p">}</span>
       <span class="k">return</span>  <span class="n">closest</span>
   <span class="p">}</span>

   <span class="kd">func</span>  <span class="nf">sphericalDistance</span> <span class="p">(</span> <span class="n">lat1</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">,</span>  <span class="n">lng1</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">,</span>  <span class="n">lat2</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">,</span>  <span class="n">lng2</span> <span class="p">:</span>  <span class="nb">Double</span> <span class="p">)</span>  <span class="p">-></span>  <span class="nb">Double</span>  <span class="p">{</span>
       <span class="kd">let</span>  <span class="nv">lat1Rad</span>  <span class="p">=</span>  <span class="n">radians</span> <span class="p">(</span> <span class="n">lat1</span> <span class="p">)</span>
       <span class="kd">let</span>  <span class="nv">lng1Rad</span>  <span class="p">=</span>  <span class="n">radians</span> <span class="p">(</span> <span class="n">lng1</span> <span class="p">)</span>
       <span class="kd">let</span>  <span class="nv">lat2Rad</span>  <span class="p">=</span>  <span class="n">radians</span> <span class="p">(</span> <span class="n">lat2</span> <span class="p">)</span>
       <span class="kd">let</span>  <span class="nv">lng2Rad</span>  <span class="p">=</span>  <span class="n">radians</span> <span class="p">(</span> <span class="n">lng2</span> <span class="p">)</span>

       <span class="kd">let</span>  <span class="nv">dist</span>  <span class="p">=</span>  <span class="n">acos</span> <span class="p">(</span> <span class="n">sin</span> <span class="p">(</span> <span class="n">lat1Rad</span> <span class="p">)</span>  <span class="o">*</span>  <span class="n">sin</span> <span class="p">(</span> <span class="n">lat2Rad</span> <span class="p">)</span>  <span class="o">+</span>  <span class="n">cos</span> <span class="p">(</span> <span class="n">lat1Rad</span> <span class="p">)</span>  <span class="o">*</span>  <span class="n">cos</span> <span class="p">(</span> <span class="n">lat2Rad</span> <span class="p">)</span>  <span class="o">*</span>  <span class="n">cos</span> <span class="p">(</span> <span class="n">lng2Rad</span>  <span class="o">-</span>  <span class="n">lng1Rad</span> <span class="p">))</span>

       <span class="k">return</span>  <span class="n">dist</span>
   <span class="p">}</span>
</pre></div>

 <p>
Bu kod içindeki sphericalDistance, iki lat/long noktası arasındaki
küresel mesafeyi hesaplamakla ilgili ilgisiz bir alt sorunu çözmektedir.
Bu nedenle, bu kodu ayrı bir fonksiyona çıkarmak mantıklıdır.
</p>

 <p>
Bunun sonucunda, kod daha okunaklı hale gelir ve hedefe odaklanmak daha
kolaydır. Ayrıca, “sphericalDistance” işlevi izole bir şekilde test
etmek daha kolay olacaktır ve gelecekte yeniden kullanılabilir. Bu
nedenle, bu “ilgisiz” bir alt sorundur.
</p>
</div>

 <h4> <a id="sadece-bir-görev" class="anchor" href="#sadece-bir-görev">¶</a>Sadece Bir Görev</h4> <div class="outline-text-4" id="text-org7ddcd0b">
 <p>
Kod, birden fazla şeyi aynı anda yaparsa anlamak daha zor olur. Tek bir
kod bloğu, yeni nesneleri başlatma, verileri temizleme, girişleri
ayrıştırma ve iş mantığını uygulama gibi çok sayıda işlemi aynı anda
yapabilir. Eğer tüm bu kodlar bir araya gelmişse, her “görev” tek tek
başlatılmadıkça anlamak zor olacaktır.
</p>

 <blockquote>
 <p>
Kod, sadece bir görevi yerine getirecek şekilde düzenlenmelidir.
</p>
</blockquote>

 <p>
Muhtemelen “fonksiyonlar sadece bir şey yapmalıdır” önerisini
duymuşsunuzdur. Önerimiz benzerdir, ancak her zaman fonksiyon
sınırlarıyla ilgili değildir. Elbette büyük bir fonksiyonu birden fazla
küçük fonksiyona bölmek iyi bir yaklaşım olabilir. Ancak bunu yapmasanız
bile, kodunuzu hala bu büyük fonksiyon içinde ayrı mantıklı bölümler
gibi hissettirecek şekilde düzenleyebilirsiniz.
</p>

 <p>
Kodunuzu “bir görev bir kez” yapmasını sağlamak için aşağıdaki adımları
izleyebilirsiniz:
</p>

 <ol class="org-ol"> <li>Kodunuzun yaptığı tüm “görevleri” listeleyin. “Görev” kelimesini
oldukça serbest bir şekilde kullanıyoruz - bu, “bu nesnenin geçerli
olduğundan emin olun” gibi küçük olabilir veya “ağaçtaki her düğümü
yineleyin” gibi belirsiz olabilir.</li>
 <li>Bu görevleri mümkün olduğunca farklı işlevlere veya en azından kodun
farklı bölümlerine ayırmaya çalışın.</li>
</ol> <p>
Şimdi örnekle bunu inceleyelim:
</p>

 <div class="highlight"> <pre> <span></span>   <span class="c1">// Örnek: Bir görevi birden fazla işlevle ayırmak</span>
   <span class="kd">func</span>  <span class="nf">validateObject</span> <span class="p">(</span> <span class="kc">_</span>  <span class="n">object</span> <span class="p">:</span>  <span class="n">SomeObject</span> <span class="p">)</span>  <span class="p">-></span>  <span class="nb">Bool</span>  <span class="p">{</span>
       <span class="c1">// İlgili nesnenin geçerli olup olmadığını kontrol edin</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>

   <span class="kd">func</span>  <span class="nf">parseInput</span> <span class="p">(</span> <span class="kc">_</span>  <span class="n">input</span> <span class="p">:</span>  <span class="nb">String</span> <span class="p">)</span>  <span class="p">-></span>  <span class="n">ParsedData</span>  <span class="p">{</span>
       <span class="c1">// Girişi ayrıştırın ve işleyin</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>

   <span class="kd">func</span>  <span class="nf">applyBusinessLogic</span> <span class="p">(</span> <span class="kc">_</span>  <span class="n">data</span> <span class="p">:</span>  <span class="n">ParsedData</span> <span class="p">)</span>  <span class="p">-></span>  <span class="n">Result</span>  <span class="p">{</span>
       <span class="c1">// İş mantığını uygulayın</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>
</pre></div>

 <p>
Bu şekilde, kodunuzun karmaşıklığını azaltabilir ve her bir görevi daha
açık ve bağımsız hale getirebilirsiniz. Temel olarak, genel işlevleri
ayırarak projenizin temel kısmına odaklanabilirsiniz.
</p>
</div>

 <h4> <a id="düşünceleri-koda-dönüştürmek" class="anchor" href="#düşünceleri-koda-dönüştürmek">¶</a>Düşünceleri Koda Dönüştürmek</h4> <div class="outline-text-4" id="text-org8b1839d">
 <p>
Bu bölümde, kodu daha açık ve anlaşılır bir şekilde yazmamıza yardımcı
olabilecek basit bir teknik olan düşüncelerinizi açık bir şekilde ifade
etme konusu ele alınmıştır. Açık bir dille bir düşünceyi ifade edebilme
yeteneği, başkalarına karmaşık fikirleri anlatma becerisini içerir. Bu,
bir fikri en önemli kavramlara yoğurmak anlamına gelir. Bu sadece
başkasının anlamasına yardımcı olmakla kalmaz, aynı zamanda kendi
fikirlerinizi daha net bir şekilde düşünmenize de yardımcı olur.
</p>

 <p>
Kodu daha açık bir şekilde yazmamıza yardımcı olabilecek basit süreç şu
şekildedir:
</p>

 <ol class="org-ol"> <li>Kodun ne yapması gerektiğini, meslektaşınıza anlattığınız gibi, açık
bir İngilizce olarak açıklayın.</li>
 <li>Bu açıklamada kullanılan anahtar kelimelere ve ifadelere dikkat edin.</li>
 <li>Kodunuzu bu açıklamayla eşleştirmek üzere yazın.</li>
</ol> <p>
3 bölümlük bu seride  <b>The Art Of Readable Code</b> kitabının okuma
notlarını beraber inceledik. Umarım bu seri okuyucularımız için faydalı
olmuştur. Başka okuma notları serilerinde görüşmek dileğiyle.
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/the_art_of_readable_code_3_final/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/the_art_of_readable_code_3_final/index.html</guid>
  <pubDate>Mon, 30 Oct 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Soru Sormak</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>


 <div id="orgda6abf9" class="figure">
 <p> <img src="/img/wisdom_how_to_ask.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Fotoğraf  <a href="https://unsplash.com/@derobi">Dominik</a></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org72f8081">
 <p>
Merhaba, ufak bir kızım var biraz büyüyüp ayaklanmaya başladı ve hemen  <b>bu ne?</b> soruları ile muhattap olmaya başladık :).
</p>

 <p>
Merak ve öğrenme ihtiyacı ne kadar da erkenden başlıyor.
</p>

 <p>
Hayatımızda bu kadar erken başlayan bir ihtiyacı nasıl verimli ve etkin bir şekilde beslemeliyiz diyince bocalayabiliyoruz.
</p>

 <p>
İşte soru sormanın en saf hali olan  <b>bu ne?</b> den, karmaşıklaşan ilişkilerimizi yönetmeye başladığımız yetişkinliğe geçişte hepimiz farklı bir dönüşüm geçişiyoruz; bunun arkasında elbette tecrübelerimiz ve türlü psikolojiler büyük rol oynuyor.
</p>

 <p>
Bir de yazılım gibi bir dünyada iseniz sorunuzun cevabına hangi kaynaklardan, nasıl faydalanarak erişebileceğimiz gibi konular çok çatallı bir yola gidebiliyor.
</p>
</div>

 <h3> <a id="neyi-sormak" class="anchor" href="#neyi-sormak">¶</a>Neyi sormak?</h3> <div class="outline-text-3" id="text-org75cdc3f">
 <p>
Sormak çok ucuz ve basit bir eylem. Efor alan ise cevaba erişebilmek.
</p>

 <p>
Tek taraflı bir eylem kesinlikle değil, muhattabından efor isteyen bir eylem.
</p>

 <p>
O nedenle bu çabayı neden sizin için göstermeli? Sorumuzu sorarken nasıl karşımızdakine yardımcı olabiliriz?
</p>
</div>

 <h3> <a id="kendimize-sormak--deli-misin" class="anchor" href="#kendimize-sormak--deli-misin">¶</a>Kendimize sormak != Deli misin?</h3> <div class="outline-text-3" id="text-org32f3e09">
 <p>
Kişinin kendisi ile konuşma ihtiyacı kafasındaki fikirleri ve soruları netleştirmesine yardımcı olan çok faydalı bir yol.
</p>

 <p>
O nedenle sorunun muhatabı ilk önce kendimiziz.
</p>

 <p>
Bu durumda düşüncelerimizi daha berrak hale getirebilmek için onu kendimize anlatmaya çalışabiliriz.
</p>

 <p>
Literatürde  <a href="https://en.wikipedia.org/wiki/The_Pragmatic_Programmer">The Pragmatic Programmer</a> kitabında da ele alınan  <a href="https://rubberduckdebugging.com/">rubber duck debugging/talking</a> olarak geçen bu sohbet bizim kültürümüze nedense  <b>deli misin</b> olarak evrilmiş.
</p>
</div>

 <h4> <a id="deliyiz" class="anchor" href="#deliyiz">¶</a>Deliyiz.</h4> <div class="outline-text-4" id="text-org88a54de">
 <p>
Karşılaştığımız bir sorunu karşımıza bir oyuncak ördek alıp ona anlatmaya çalışarak sorunla ilgili daha güzel bir zemin oluşturabiliriz.
</p>

 <p>
Ya da kafamıza bir huni takip ayna karşısına geçip sorunla ilgili sesli bir şekilde kendimizle konuşabiliriz.
</p>

 <p>
Bu alışkanlığı normalleştirene kadar dillendireceğim sanırım.
</p>
</div>

 <h3> <a id="sormadan-önce-nelere-dikkat-etmeliyiz" class="anchor" href="#sormadan-önce-nelere-dikkat-etmeliyiz">¶</a>Sormadan önce nelere dikkat etmeliyiz?</h3> <div class="outline-text-3" id="text-orga3cd976">
 <p>
Kendimizle olan sohbetimiz bir yerde tat vermemeye başladığında başka bir muhattap arayabiliriz.
</p>

 <p>
Ancak araştırmamızı netleştirip, hazırlıklı sorduğumuz sorular kişilerin vaktine saygı duyduğumuzu ve aklımıza gelen her soruyu öyle gelişigüzel sormadığımızı hissettirmemiz önemli.
</p>

 <p>
En yakınımızdan uzağa doğru araştırmaya başlamalıyız.
</p>

 <p>
Bunun için önce netleştirdiğimiz sorunun bağlamına dokunan dokümanlara erişip, kurcalamalıyız.
</p>

 <p>
Örnek kullanımlarını görebileceğin, aynı sorunla karşılaşmış veya ihtiyacı olması muhtemel, takım içinde veya cross takımlardaki diğer projeleri inceleyebiliriz. Bu sayede diğer takımlara erişerek çözümü nasıl tatbik ettikleri konusunda yardım alma ihtimalinizde yüksek olacaktır.
</p>

 <p>
Elimizin altındaki hızlıca sistemin manuel/kitapçığında tarama yapabiliriz; bu çağırdığımız bir fonksiyonun dokümantasyonuna bakmak ve hatta kaynak koduna erişip nasıl çalıştığını yorumlayabilmek olabilir.
</p>

 <p>
Sonrasında ise açık kaynak repolarda araştırma yaparak oralardaki çözümleri görebilmek bakış açımızı genişletecektir.
En çok çıkan bilgi kaynaklarından ’Large Language Model’ler de danışılabilecek birer kaynak olarak hayatımıza girdi. Bu araçları günlük çalışma hayatımıza entegre etmenin yollarını bulmalıyız.
</p>

 <p>
İnternet üzerinden bulduğunuz ve sizin probleminize çözüm olabilecek seçeneklerinizi not alarak belki hangisini seçmenin sizin projenizin/şirketin stratejinize uyup uymadığını değerlendirebileceksiniz.
Sorduğunuz sorunun zihinleri tetikleyecek tatta olması, çözümü daha keyifli kılacaktır.
</p>
</div>

 <h3> <a id="araştırmaları-paylaşmak" class="anchor" href="#araştırmaları-paylaşmak">¶</a>Araştırmaları paylaşmak</h3> <div class="outline-text-3" id="text-org6929bf7">
 <p>
Soruna dair araştırmalarımızı tamamladıktan sonra bunları paylaşmamız gerekiyor.
</p>

 <p>
Dikkat etmemiz gereken noktalardan bir tanesi yakın hissettiğimiz çözümü savunarak konuya başlamamak.
</p>

 <blockquote>
 <p>
Kendi aklımızdaki çözüme yönelik şekilde soruyu aktarmamalıyız.
</p>
</blockquote>

 <p>
Soru en yalın şekliyle aktarılmaz ise istemedende olsa çözüm havuzunu daraltmaya sebep olabilir.
</p>

 <p>
Sorun ile ilgili mümkün mertebe ekran görüntüleri yerine kopyalanabilir metinler paylaşmalıyız.
</p>

 <p>
Soru ve cevapların sonradan tekrar dönülüp bakılabilmesi ve referans olarak arşivlenebilmesi için yazılı mecrada olması daha uygundur.
</p>
</div>

 <h3> <a id="nerede-sormak" class="anchor" href="#nerede-sormak">¶</a>Nerede sormak?</h3> <div class="outline-text-3" id="text-orga291a15">
 <p>
Sorunun tartışılacağı ortamı doğru bulabilme için ise bir dua ile başlıyoruz:
</p>

 <blockquote>
 <p>
Sorumun  <b>gürültüye sebep vermeyecek</b> şekilde tartışılacağı kadar  <code>dar</code> çevreyi bulmak için güç;
</p>

 <p>
 <b>Cevaba en yakın zamanda erişebilmeyi</b> sağlayabilecek kadar  <code>geniş</code> çevreyi bulmak için sabır;
</p>

 <p>
İkisini yapabilmek için akıl ver.
</p>
</blockquote>
</div>

 <h4> <a id="ne-kadar-dargeniş-çerçevede-soruyu-tartışabiliriz" class="anchor" href="#ne-kadar-dargeniş-çerçevede-soruyu-tartışabiliriz">¶</a>Ne kadar dar/geniş çerçevede soruyu tartışabiliriz?</h4> <div class="outline-text-4" id="text-orgd0452c3">
 <p>
Uzaktan çalışma ile bu konu biraz daha önemli hale geldi. Çünkü toplantı mecraları ve zamanları çok daha dinamik hale geldi.
Bu kadar dinamiklik daha iyi yönetilmeyi gerektiriyor. Bir anda 100 kişinin içinde bulunduğu bir toplantıda kendimizi bulurken, aynı dakika içerisinde 2 kişinin sorusunada muhattap olabiliyoruz.
</p>

 <blockquote>
 <p>
Hızlı ve ücretsiz iletişim’in gerçek maliyeti, iletişim yükü biriktiren kişilerin ortaya çıkmasına sebep olmasıdır.
</p>
</blockquote>

 <p>
Cevabı tüm ekibi ilgilendiren veya muhtemel bir başkasının da yakın zamanda karşılabileceği sorunlar için ilgili kişilerin bulunduğu bir gruptan soru iletilebilir.
</p>

 <p>
Gruba sorulan sorularda cevaplar hem başkaları tarafından takip edilebilir hem de geleceğe referans olması açısından sonradan arama yapılabilecek bir alanda bilgi dolaylı yoldan arşivlenmiş olur.
</p>
</div>


 <h3> <a id="dil-kurallarına-uymak" class="anchor" href="#dil-kurallarına-uymak">¶</a>Dil kurallarına uymak</h3> <div class="outline-text-3" id="text-org73f77c3">
 <p>
Soru sormak iletişimin en iyi olması gereken zeminlerinden bir tanesi. O nedenle dilin etkin kullanılması konusunda özen göstermek gerekiyor. Muğlak ifadelerden kaçınmak, edilgen kullanmamak, kısaltmaları dikkatlice kullanmak gibi konulardan bahsedebiliriz.
</p>

 <p>
William Strunk’ın  <a href="https://gutenberg.org/ebooks/37134">The elements of style</a> adlı kitabı yazım dili konusunda detaylı örnekleriyle bana çok faydalı olmuş bir kaynak.
</p>
</div>

 <h3> <a id="eşzamanlı-ve-eşzamansız-iletişimde-soru-sormak" class="anchor" href="#eşzamanlı-ve-eşzamansız-iletişimde-soru-sormak">¶</a>Eşzamanlı ve Eşzamansız iletişimde soru sormak</h3> <div class="outline-text-3" id="text-org2f2b517">
 <p>
Eşzamanlı iletişim ile karşınızdakine anlık olarak soru yöneltip fikirlerini alabilirsiniz. Bu hızlı cevap almanızı sağlayabilir. Soru sorduğunuz kişi ve kişilerin o an müsait olmasını gerektirir. Acil durumlarda veya cevabının net olabileceği sorularda, hemen cevap almaya çalışırken bu eşzamanlı soru/cevap yolu uygundur.
</p>

 <p>
Ancak, üzerine düşünülmesi gereken sorularda, eşzamanlı iletişim cevapları bulmak için karşı tarafın konu hakkında araştırma yapmasına imkan vermez, müsait zaman aralığını ayıramadığı bir takvimi var ise aklındakini tam olarak o sürede anlatamayabilir.
</p>
</div>

 <h3> <a id="bno-hellob-politikası" class="anchor" href="#bno-hellob-politikası">¶</a> <b>No Hello</b> Politikası.</h3> <div class="outline-text-3" id="text-org8b8e73d">
 <p>
Yazı iletişimdeki diğer bir problem ise soruyu sormadan önce duyulan endişedir.
</p>

 <p>
ChitChat denilen bir konuya girebilmek için rahat ortam sağlamaya çalışmak yazılı soru sormada bir bariyere sebep oluyor.
</p>

 <p>
Bu bariyeri en iyi anlatan örnekler  <a href="https://nohello.net/en/">No Hello</a> politikasını anlatırken izah edilmiş.
Yazılı iletişimin en güzel yanlarından biri, konuya dair cevap verebilecek kişilerin de hazırlanabilmesine imkan vermesidir.
</p>

 <p>
Soru sormayı rahat hale getirmek için gereken ChitChat ortamları takım toplantılarında ve başka denkleşmelerde yapılabilir.
O nedenle yazışmalarımızda ’Merhaba, nasılsın dedikten sonra direkt olarak sorumuzu yalın bir şekilde yazmalıyız’.
</p>
</div>

 <h3> <a id="nezaket" class="anchor" href="#nezaket">¶</a>Nezaket</h3> <div class="outline-text-3" id="text-org6cd6484">
 <p>
Sizin için birisi vakit ayırıp cevap vermeye çabaladığı noktada teşekkürü eksik etmemek gerekir.
</p>

 <p>
Soru/cevap sonrası, konu hakkında bilgilendirme mesajlarını paylaşmak eğer çözümlendiyse çözüme giden yolda başka nelerle karşılaştığınızı ve nihayetinde nasıl bir çözüme kavuştuğunuzu belirtmek soruyu askıda bırakmamak adına önemlidir.
</p>

 <p>
Marifet ve iltifat birbirine tabidir. Bunları yaparken size yol göstermiş kişileri takdir ederseniz o kişilerin de faydalı olmanın verdiği keyfi çıkarmasını sağlayabilirsiniz.
</p>
</div>

 <h3> <a id="özetle" class="anchor" href="#özetle">¶</a>Özetle</h3> <div class="outline-text-3" id="text-org324c45d">
 <p>
Burada bahsi geçen tüm yöntemler soru sormayı daha akışkan hale getirme çabası. Umarım size faydalı bir bakış açısı sağlamıştır.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org0d8956f">
 <p>
Eric Steven Raymond’in bloğundaki  <a href="http://www.catb.org/~esr/faqs/smart-questions.html">Smart questions</a> yazısı biraz eski kalmış olsa da bana ilham olmuştur.
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/how_to_ask/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/how_to_ask/index.html</guid>
  <pubDate>Fri, 27 Oct 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Apple Wonderlust Eylül 2023 Etkinliği</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/alper-cem-%C3%B6zt%C3%BCrk-a625671a8">Alper Cem Öztürk</a> yazdı.
</p>


 <div id="org9de4843" class="figure">
 <p> <img src="/img/wonderlust_cover.png" class="content-image" width="100%"></img></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgc47a592">
 <p>
Merhaba sevgili Mobilen okuyucuları,
</p>

 <p>
Büyük gün nihayet geldi ve Apple Wonderlust etkinliği düzenlendi. Üzerinden biraz zaman geçse de etkinliği takip edemeyen okurlarımız için kısa bir özet geçmenin kimseye bir zararı olmaz diye düşündüm. İşte kaçırmamanız gereken tüm detaylar:
</p>
</div>

 <h3> <a id="apple-watch-series-9" class="anchor" href="#apple-watch-series-9">¶</a>Apple Watch Series 9</h3> <div class="outline-text-3" id="text-org4c6971a">

 <div id="orgd6e8003" class="figure">
 <p> <img src="/img/watch_series_9.png" class="content-image" width="100%"></img></p>
</div>

 <p>
Apple, tasarımıyla bir önceki modeli aratmayan yeni nesil Apple Watch’u, yani Apple Watch Series 9’u duyurdu. Yeni nesil işlemci olan S9’a sahip olan Apple Watch Series 9’un, önceki birkaç nesle kıyasla performansını önemli ölçüde arttırdığı söyleniyor. S9’un, iPhone 13’te tanıtılan Apple’ın A15 Bionic çipiyle aynı teknoloji üzerine inşa edildiği söyleniyor ve 18 saatlik pil ömrü sunuyor. S9’da, S8’e göre özellikle iki kat daha hızlı makine öğrenimi görevlerini işleyen dört çekirdekli bir sinir motoru bulunuyor. Bu, Siri isteklerinin cihazda işlenmesini sağlıyor. Örneğin, bu sayede Siri’ye dün gece ne kadar uyku aldığınızı veya kan oksijen seviyenizi sorabilirsiniz.
</p>

 <p>
Teknik detaylardan bahsettiğimize göre, şimdi biraz da yeni özelliklerden bahsedelim. Bu yılki WWDC etkinliğinde duyurulan iOS 17’nin göze çarpan özelliklerinden biri olan NameDrop, Apple Watch’lara da gelmiş. Artık NameDrop özelliği sayesinde Apple Watch kullanıcıları bilgilerini kolay bir şekilde paylaşabilecekler.
</p>

 <p>
Apple’ın watchOS 9’daki erişilebilirlik özelliği olan Assistive Touch, artık Apple Watch uyarılarına el hareketleriyle yanıt vermenizi sağlayan Quick Actions ile yeni bir seviyeye ulaşıyor. Yeni Quick Actions özelliği sayesinde, üst vücut uzuv farklılıkları olan kullanıcılar, Apple Watch’larındaki uyarılara yanıt vermek için çift dokunma hareketiyle daha fazla işlem yapabilirler. Örnek olarak, telefon çağrısını yanıtlama veya sonlandırma, vizör ve deklanşör düğmesi görünürken fotoğraf çekme gibi işlemler yapabilirler. Ayrıca, bir alarmı ertelemek veya zamanlayıcıyı durdurmak için Quick Actions kullanılabilir. Aslında, Quick Actions hemen hemen herkes için yararlı olabilir. Örneğin, diğer elinizde bir şey tutuyorsanız ve Apple Watch’un ekranına dokunamıyorsanız, saat elinizle çift dokunma hareketi yaparak bir telefon görüşmesini yanıtlayabilir veya sonlandırabilirsiniz. Apple’a göre Apple Watch Series 9, Apple Watch Ultra 2 ve Apple Watch SE’nin belirli kasa ve kordon kombinasyonları  <b>karbon nötr</b> olacak. Apple, kısmen daha fazla tedarikçisinin temiz enerjiye geçmesini sağlayarak saatlerin üretiminde malzeme, elektrik ve ulaşımdan kaynaklanan emisyonları azaltabildiğini söylüyor. Geriye kalan kirlilik, ormanların daha fazla CO2 tutabilmesi için yenilenmesi gibi doğa temelli projelerle dengelenmiş. Apple ayrıca, karbon nötr Apple Watch modellerini şarj etmek için müşterilerin beklenen elektrik kullanımını yenilenebilir enerji projelerine yapılan yatırımlarla eşleştireceğini de söylüyor.
</p>

 <p>
Apple, karbon nötr hedefini oldukça önemsemiş olacak ki aksesuarlarında kullanılan deri seçeneğini dahi raflardan kaldırmış. En çok eleştirilen yönü şüphesiz Apple Watch’ların batarya ömrüdür. Eğer iyileştirme olup olmadığını merak ediyorsanız, cevap vereyim, hayır. Yine önceki modellerde olduğu gibi, şarjının tüm gün gideceği iddia ediliyor.
</p>
</div>

 <h3> <a id="apple-watch-ultra-2" class="anchor" href="#apple-watch-ultra-2">¶</a>Apple Watch Ultra 2</h3> <div class="outline-text-3" id="text-orgda976ac">

 <div id="orgbdccb50" class="figure">
 <p> <img src="/img/watch_ultra_2.png" class="content-image" width="100%"></img></p>
</div>

 <p>
Yeni Apple Watch Ultra’ların Series 9 ile getirdiklerinin yanı sıra bir önceki modelden neredeyse hiçbir farkı yok. Cihazın, 3000 nit parlaklık değerine ulaşabiliyor olması ve daha geniş yükseklik seviyelerinde kullanılabiliyor olması dışında göze çarpan büyük bir değişiklik olmadığını üzülerek belirtmek isterim.
</p>

 <p>
Eğer daha önce Apple Watch Ultra kullanmadıysanız ve deneyimlemek istiyorsanız, Ultra 2’nin bir önceki modelle aynı fiyattan satışa çıkması dolayısıyla iyi bir seçim olabileceğini söylemeliyim. Ancak hali hazırda Apple Watch Ultra kullanıcısıysanız, Ultra 2’ye geçmek için neredeyse hiçbir sebebiniz yok.
</p>
</div>

 <h3> <a id="iphone-15-ve-15-plus" class="anchor" href="#iphone-15-ve-15-plus">¶</a>iPhone 15 ve 15 Plus</h3> <div class="outline-text-3" id="text-org51e24a9">

 <div id="orgcc54a38" class="figure">
 <p> <img src="/img/iPhone_15.png" class="content-image" width="100%"></img></p>
</div>

 <p>
Apple, Dinamik Ada’yı bir yıl boyunca yeni iPhone 15 ve iPhone 15 Plus’tan uzak tuttuktan sonra, nihayet Pro olmayan iPhone’larına hak ettikleri değeri verdi. Artık iPhone 15 serisi dinamik adayla beraber geliyor. Gelin bu ve bunun gibi iyileştirmelere adım adım birlikte göz atalım.
</p>
</div>

 <h4> <a id="dinamik-ada" class="anchor" href="#dinamik-ada">¶</a>Dinamik Ada</h4> <div class="outline-text-4" id="text-org8e352ea">
 <p>
Daha önce bahsettiğimiz gibi, bu yıl iPhone 15’ten başlayarak tüm iPhone modelleri dinamik ada’ya sahip olarak sahneye çıkacak. Bu özellik, geliştiriciler için heyecan verici bir haber. Geçtiğimiz yıl sadece Pro ve Pro Max kullanıcılarına sunulan bu özellik, sınırlı bir kullanıcı kitlesine sahipti. Bu nedenle, geliştiriciler tarafından küçük bir kitle için ek geliştirmeler yapmak pek mantıklı değildi. Bu yıl 15 serisinde yapılan bu düzenleme ile daha çok uygulamada dinamik ada kullanımını göreceğiz gibi görünüyor.
</p>
</div>

 <h4> <a id="elveda-lightning-hoşgeldin-usb-c" class="anchor" href="#elveda-lightning-hoşgeldin-usb-c">¶</a>Elveda Lightning Hoşgeldin USB-C</h4> <div class="outline-text-4" id="text-org4e90133">
 <p>
Bir iPhone kullanıcısının hayatını daha da iyi hale getirebilecek şeylerden biri, daha hızlı şarj desteğiydi. Bu yıl iPhone’un USB-C’ye geçmesiyle birlikte, daha iyi bir şarj deneyimi sağlamak için güzel bir fırsat olabilirdi. Ancak böyle bir gelişme olmadı. Ayrıca Apple’ı bu değişikliğe itenin çoğunlukla Avrupa Birliği regülasyonları olduğunu da belirtmek gerek.
</p>

 <p>
Tabii ki, iyileştirmeler yalnızca bunlarla sınırlı değil. Pilin artık %100 geri dönüştürülmüş kobalttan yapılması, güneş ışığında telefonunuzu daha iyi görebilmeniz için 2000 nit parlaklık seviyesinin sunulması ve 48 MP birincil sensöre sahip kamera sistemi gibi birçok yenilik de mevcut.
</p>
</div>

 <h3> <a id="iphone-15-pro-ve-pro-max" class="anchor" href="#iphone-15-pro-ve-pro-max">¶</a>iPhone 15 Pro ve Pro Max</h3> <div class="outline-text-3" id="text-orgcf34d0e">

 <div id="org6c6d317" class="figure">
 <p> <img src="/img/iPhone_15_pro.png" class="content-image" width="100%"></img></p>
</div>

 <p>
Bu yılın Pro ve Pro Max modelleri, iPhone 15’in sunduklarının yanı sıra birçok ilgi çekici özellikle birlikte geliyor. Şimdi gelin, bu özelliklere adım adım birlikte göz atalım.
</p>
</div>

 <h4> <a id="titanium" class="anchor" href="#titanium">¶</a>Titanium</h4> <div class="outline-text-4" id="text-org1c260ca">
 <p>
Yeni Pro ve Pro Max modelleri 5. derece titanyum kaplamayla beraber geliyor. 5. derece titanyum, uzay, havacılık, yarış ve protez üretimi de dahil olmak üzere çok çeşitli endüstrilerde kullanılıyor. Malzemenin hafifliği, sağlamlığı ve sertliği, Apple’ın iPhone 15 Pro ailesi için neden 5. derece titanyum kullanmaya karar verdiğini açıklayabilir. Ancak özellikle mavi titanyum renginin kolaylıkla bükülüp kırılıyor olmasıyla yeni kaplama bir hayli eleştirilere konu oldu. Yine de natürel titanyum renk seçeneğinin mavi renk seçeneğiyle aynı kaderi yaşamadığını söylemekte fayda var. Yeni iPhone’ların zorlu dayanıklılık testlerinden nasıl sonuçlar aldığını merak ediyorsanız  <a href="https://jerryrigeverything.com/videos/">JerryRigEverything’in</a> çok konuşulan videolarına göz atabilirsiniz.
</p>
</div>

 <h4> <a id="aksiyon-butonu" class="anchor" href="#aksiyon-butonu">¶</a>Aksiyon Butonu</h4> <div class="outline-text-4" id="text-org76a1082">
 <p>
Sessize alma (veya susturma) butonu kaldırıldı ve yerini bir aksiyon düğmesi aldı. Cihazın sol tarafındaki sessize ama butonunun yerini alan aksiyon düğmesi, kısayolları çalıştırmak, erişilebilirlik özelliklerini getirmek, kamerayı açmak, el fenerini açmak ve daha fazlasını yapmak için özelleştirebileceğiniz yeni bir buton olarak karşımıza çıkıyor. Varsayılan olarak hala bir sessize alma butonu bulunuyor; ancak bunun yanı sıra el fenerini açacak, sesli not kaydedecek ve kamerayı açacak şekilde de özelleştirebilirsiniz.
</p>
</div>

 <h4> <a id="oyun-performansı" class="anchor" href="#oyun-performansı">¶</a>Oyun Performansı</h4> <div class="outline-text-4" id="text-org6d13de7">
 <p>
Apple bu lansmanda, alışılagelmişin dışında bir süreyle, yeni cihazların oyun performansından bahsetti. Yeni donanım ve yazılım iyileştirmelerinin oyun performansına etkilerinden söz ederken, Resident Evil 4 remake, Resident Evil Village ve Death Stranding gibi bazı üst düzey oyunların iPhone’lara geleceğini duyduk. Ayrıca uzun zamandır oyun severler tarafından beklenen bir Ubisoft oyunu olan Assassin’s Creed Mirage’ın da iPhone 15 Pro’da piyasaya çıkacağı ve bununla birlikte cihazın donanım hızlandırmalı ışın izleme (bkz:  <a href="https://www.digitaltrends.com/computing/what-is-ray-tracing/">Ray Tracing</a>) teknolojisini destekleyeceği söylendi. Özellikle bu oyun severleri oldukça etkiledi.
</p>

 <p>
Bu gelişmelerin etkisiyle iPhone’un nihayet Apple’a büyük bütçeli, büyük stüdyo oyunlarının piyasaya sürülmesi için mutlaka hedeflenmesi gereken bir yer kazanma şansı var gibi gözüküyor. iPhone 15 Pro ve Pro Max’e güç veren A17 Pro, en azından piyasaya çıkan birçok taşınabilir konsol bilgisayarı için kullanılan işlemci türleriyle aynı seviyede görünüyor.
</p>
</div>

 <h4> <a id="video" class="anchor" href="#video">¶</a>Video</h4> <div class="outline-text-4" id="text-org522780f">
 <p>
Video tarafında ise cihazlarda 4K60 ProRes video çekebilecek, hatta USB-C bağlantı noktası üzerinden doğrudan harici bir sürücüye çekim yapabileceksiniz. 15 Pro ailesi, Vision Pro için gördüğümüz 3D içerik türlerini  <b>uzamsal (spatial) video</b> olarak da kaydedebiliyor; ancak bu özellik bu yılın sonlarında gelecek. Bu özellik, özellikle visionPro entegrasyonunda işe yarayacak gibi duruyor. Apple’ın 15 Pro’yu bir tüketici cihazı olmasının yani sıra film yapımcıları için gerçek bir profesyonel araç olarak geliştirdiği de bir hayli ortada.
</p>
</div>

 <h3> <a id="son" class="anchor" href="#son">¶</a>Son</h3> <div class="outline-text-3" id="text-org27e24ed">
 <p>
Cupertino, California’da çok beklenen Wonderlust etkinliğinde Apple, bir dizi yenilikçi cihazı ve yazılım güncellemesini tanıttı. Harika kamera geliştirmeleri ve USB-C bağlantısıyla iPhone 15 serisi kayda değer bir çıkış yaptı. A17 Pro destegiyle beraber oyun performansıyla öne çıkan ve son teknoloji özelliklere sahip iPhone 15 Pro ve Pro Max de oldukça dikkat çekti. Apple Watch Ultra 2, artırılmış pil ömrü ve 3000 nit parlaklık seviyesine ulaşan ekran özelliklerine rağmen bir önceki nesilden pek öne çıkamazken, Apple Watch Series 9 ise performans iyileştirmeleri ve karbon nötr seçenekleriyle öne çıktı.
</p>

 <p>
Ancak, her yıl inovasyonun sınırlarını zorlayan Apple, bu kez izleyenleri sürprizlerle sarsamadı. Dolayısıyla etkinlik, büyük bir kesim tarafından pek beğenilmedi. Yine de, Apple’ın gelecekteki yeniliklerle bizi şaşırtacağına dair umutlarımızı koruyoruz.
</p>

 <p>
Eğer daha derinlemesine bilgi sahibi olmak istiyorsanız,  <a href="https://www.youtube.com/watch?v=ZiP1l7jlIIA">Apple Wonderlust Event Keynote</a> sunumuna göz atabilirsiniz. Bir sonraki sayıda görüşmek üzere. Hoşça kalın :)
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/apple_event_wonderlust_2023/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/apple_event_wonderlust_2023/index.html</guid>
  <pubDate>Mon, 02 Oct 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS: fatalError - Never ve Sistem Tasarımı</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>


 <div id="org1530b10" class="figure">
 <p> <img src="/img/fatalError_ve_sistem.jpg" class="content-image" width="100%"></img></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org543dddd">
 <p>
Merhabalar, geçenlerde sektörün duayenlerinden  <a href="https://tr.wikipedia.org/wiki/Richard_Stallman">Richard Stallman</a>’e birisinin sorduğu soruya nasıl cevap verdiği ilgimi çekmişti.
</p>

 <p>
Bu zamana kadar büyük kurguları ve sistemleri tasarladınız, bir probleme nasıl yaklaşıyorsunuz diye sorulduğunda:
Stallman istenen fonksiyonların ilk tanımlarını yazarım içleri boş bir şekilde sonrada yavaş yavaş gerçeklerim diye bir cevap veriyor.
</p>

 <p>
Bu tabi şu anda bir servis’i tasarlamadan önce interface’i düşünmekle çok paralel bir cevap.
</p>

 <p>
Aslında topdown yaklaşım ile sistemsel uzamları yukarıdan gördükten sonra çözümün örgüsünü implementasyonlar ile bottom-up olarak yazmak. Her iki yaklaşımı tatbik etmek sağlıklı bir çözümün en önemli anahtarları.
</p>

 <p>
Bu yaklaşıma yazılım dillerinde fonksiyon ve class seviyesinde yardımcı olucak bazı yöntemler mevcut.
</p>

 <p>
Python dilinde direkt  <code>pass</code> keyword’u ile dil’i memnun edebiliyorsunuz.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="k">class</span>  <span class="nc">Person</span> <span class="p">:</span>
      <span class="k">def</span>  <span class="nf">work</span> <span class="p">(</span> <span class="bp">self</span> <span class="p">):</span>
         <span class="c1"># Bu anahtar kelime icerisini by-pass gecmenize yardimci oluyor</span>
         <span class="k">pass</span>
</pre></div>

 <p>
Dinamik dillerde bu biraz daha basit olarak bir keyword ile gerçeklenebiliyor.
</p>

 <p>
Swift gibi static dillerde derleme zamanında  <code>compiler</code>’i memnun etmemiz gerekiyor.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">createEmployee</span> <span class="p">(</span> <span class="n">name</span> <span class="p">:</span>  <span class="nb">String</span> <span class="p">,</span>  <span class="n">credentials</span> <span class="p">:</span>  <span class="p">[</span> <span class="n">Credential</span> <span class="p">])</span>  <span class="p">-></span>  <span class="n">Employee</span>  <span class="p">{</span>
       <span class="c1">// İşçi yaratma mantığını şu anda yazmadım bu nedenle compiler projemizi derletmeyecektir.</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h3> <a id="never-tipi-nedir-ve-ne-işimize-yarar-bu-durumda" class="anchor" href="#never-tipi-nedir-ve-ne-işimize-yarar-bu-durumda">¶</a>Never Tipi nedir ve ne işimize yarar bu durumda?</h3> <div class="outline-text-3" id="text-org89f2ad3">
 <p>
 <a href="https://www.avanderlee.com/swift/never-keyword/">Never</a> tipi bir  <a href="https://wiki.c2.com/?BottomType">Bottom</a> tiptir. Bu basit anlamda class hiyerarşisinde her zaman altta olan, dolayısı ile her dönüş değeri yerine kullanabilecek bir veri tipi anlamına gelir.
</p>
</div>

 <h3> <a id="fatalerror-bu-işin-neresinde" class="anchor" href="#fatalerror-bu-işin-neresinde">¶</a>fatalError bu işin neresinde?</h3> <div class="outline-text-3" id="text-org7a643ca">
 <p>
 <a href="https://developer.apple.com/documentation/swift/fatalerror(_:file:line:)">fatalError</a> fonksiyonu ise  <a href="https://www.avanderlee.com/swift/never-keyword/">Never</a> tipi dönen bir fonksiyondur. Dolayısı ile herhangi implementasyonu henüz olmayan bir fonksiyon için çağırılabilecek bir  <code>placeholder</code> fonksiyon görevi görebilir. Bu sayede  <code>compiler</code> memnun bir şekilde hayatına devam eder, çünkü fatalError’un döndüğü  <code>Never</code> bottom tip dönüş değeri için yeterlidir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">createEmployee</span> <span class="p">(</span> <span class="n">name</span> <span class="p">:</span>  <span class="nb">String</span> <span class="p">,</span>  <span class="n">credentials</span> <span class="p">:</span>  <span class="p">[</span> <span class="n">Credential</span> <span class="p">])</span>  <span class="p">-></span>  <span class="n">Employee</span>  <span class="p">{</span>
       <span class="c1">// Burada fırlattığınız hata ile ne yapmadığınızı bilebilirsiniz.</span>
       <span class="c1">// Bu kod artık derlenebilecektir.</span>
       <span class="bp">fatalError</span> <span class="p">(</span> <span class="s">"Create employee first."</span> <span class="p">)</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h3> <a id="nelere-dikkat-etmeliyiz" class="anchor" href="#nelere-dikkat-etmeliyiz">¶</a>Nelere dikkat etmeliyiz?</h3> <div class="outline-text-3" id="text-org05802dc">
 <p>
 <code>fatalError</code> fonksiyonun bu yalnızca bir kullanım durumudur. Normalde uygulamanın hiç girmemesi gereken durumlarda bu fonksiyonu çağırabilmektesiniz.
Ancak bu fonksiyonun direkt olarak uygulamayı  <code>crash</code> ettireceğini bilmelisiniz.
</p>

 <p>
O nedenle production’da elinizin en son gitmesi gereken, çaresiz kaldığınızda kullanmanız gereken bir fonksiyondur.
</p>

 <p>
Ancak geliştirme aşamasında bu bahsettiğimiz kullanımı ile sizin elinizde sisteminizi tasarlarken yardımcı bir araç görevi görecektir.
</p>
</div>

 <h3> <a id="kaynakca" class="anchor" href="#kaynakca">¶</a>Kaynakca</h3> <div class="outline-text-3" id="text-org359d3b8">
 <ul class="org-ul"> <li> <a href="https://www.avanderlee.com/swift/never-keyword/">Never Keyword</a></li>
 <li> <a href="https://developer.apple.com/documentation/swift/fatalerror(_:file:line:)">FatalError</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/fatal_error_ios/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/fatal_error_ios/index.html</guid>
  <pubDate>Sun, 01 Oct 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS Sertifika ve Provisioning Profile İşlemleri</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/alimerttekel">Ali Mert Tekel</a> yazdı.
</p>


 <div id="orga117936" class="figure">
 <p> <img src="/img/certificates-ids-profiles.png" class="content-image" width="100%"></img></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgf809f6f">
 <p>
Herkese merhaba!
</p>

 <p>
iOS dünyasında sertifika, provisioning, signing gibi tabirler karşımıza çıkınca biraz kafamız karışabiliyor, özellikle dağıtımınızı  <code>ad-hoc</code> ile gerçekleştiriyorsanız. Ancak endişelenmeyin, bu konuları her adımıyla birlikte ele alacağız!
</p>

 <p>
Öncelikle, bu terimler tam olarak ne anlama geliyor?
</p>
</div>

 <h3> <a id="sertifika-certificate" class="anchor" href="#sertifika-certificate">¶</a>Sertifika (Certificate)</h3> <div class="outline-text-3" id="text-orgcc0aaa3">
 <p>
Dijital olarak imzalanan bir bilgi kümesidir. Bu bilgiler, bir kişi veya kuruluşun kimliğini doğrulama, elektronik iletişim sırasında güvenlik sağlama veya belirli bir yetki veya hizmete erişim hakkı verme gibi çeşitli amaçlar için kullanılabilir.
</p>
</div>

 <h3> <a id="provisioning-profile" class="anchor" href="#provisioning-profile">¶</a>Provisioning Profile</h3> <div class="outline-text-3" id="text-org0727db2">
 <p>
Apple’ın iOS ve macOS uygulamaları için kullanılan bir güvenlik mekanizmasıdır. Bu, belirli bir uygulamanın yalnızca belirli cihazlarda çalışmasına izin veren ve uygulamanın belirli bir sertifika ile imzalandığını doğrulayan bir dosyadır. Genellikle bir uygulamanın geliştirme, test ve dağıtım aşamaları boyunca kullanılır.
</p>
</div>

 <h3> <a id="uygulama-i̇mzalamak-nedir-ne-işe-yarar" class="anchor" href="#uygulama-i̇mzalamak-nedir-ne-işe-yarar">¶</a>Uygulama İmzalamak nedir, ne işe yarar?</h3> <div class="outline-text-3" id="text-org43006e6">
 <p>
Bir iOS uygulamasını  <b>imzalamak</b>, uygulamanızın  <b>kimliğini doğrulamak</b> ve App Store’a yüklemek için  <b>gereklidir</b>. Peki, “Apple bunu neden istiyor?” diye soracak olursanız, cihazın güvenliğini ve gizliliğini korumak için olduğunu söyleyebiliriz.
</p>

 <p>
’iOS cihazlar, Android’lere göre daha güvenli’ şeklinde bir algı bulunmaktadır, bilirsiniz. Bu algının oluşmasının en önemli sebeplerinden biri Apple’ın uygulama imzalama sürecidir. Apple cihazında çalışacak bir uygulamanın imzalanmamış bir IPA’sını oluşturmak mümkün değildir. Mümkün olsa bile App Store dışından IPA kurmayı kısıtlıyor. Bu nedenle, Android cihazlara APK yükleyerek savunmasız kalma riskiniz Apple’a göre daha yüksektir. Ancak burada Android’in güvensiz olduğunu vurgulamıyorum; asıl vurgulamak istediğim,  <b>işletim sistemi güvenliğinden önce kendi kullanımlarımıza dikkat etmemiz gerektiğidir</b>.
</p>

 <p>
 <b>Uygulama İmzalamayı</b> kabaca 3 başlıkta inceleyebiliriz;
</p>

 <ol class="org-ol"> <li> <b>Sertifika Oluşturma:</b> iOS uygulamanızı imzalamak için öncelikle bir geliştirici hesabı oluşturmanız gerekir. Sonrasında ise bu hesapla bir sertifika oluşturabilirsiniz.</li>

 <li> <b>Kimlik Doğrulama Profili Oluşturma (Provisioning Profile):</b> Bu profil, belirli uygulamaların yalnızca belirli cihazlarda çalışmasına izin veren ve uygulamanın Apple sertifikasıyla imzalandığını doğrulayan dosyadır.</li>

 <li> <b>Uygulamanın İmzalanması:</b> Xcode’da oluşturduğunuz sertifika ve kimlik doğrulama profilini kullanarak uygulamanızı imzalayabilirsiniz. Bu, uygulamanızın kim tarafından geliştirildiğini ve Provisioning Profile ile uyumlu olup olmadığını doğrular.</li>
</ol> <p>
Gelin bu süreci daha detaylı bir şekilde adım adım ele alarak inceleyelim;
</p>


 <div id="org2da3dd7" class="figure">
 <p> <img src="/img/create-certificates.png" class="content-image" width="100%"></img></p>
</div>

 <p>
İlk olarak sertifika oluşturmayı ele alalım. Bu yazıda sadece Software Sertifikalarını inceleyeceğiz. Görseldeki ekran, sertifika oluştur dediğinizde karşınıza çıkan çeşitli seçenekleri barındırıyor. Burada mobil geliştirmeye odaklandığımız için gerekli olan seçenekler ilk dördüdür. Son dört seçenek ise bir Mac uygulaması çıkartmak için kullanılan sertifika türleridir.
</p>

 <p>
Burada dikkat etmemiz gereken en önemli nokta sertifika türünüzün development mi yoksa distribution mı olduğu. Farkı ise; Development sertifikası ile imzalanmış bir uygulamayı sadece Mac’inizde development yaparken test cihazınıza build aldığınız zaman kullanabilirsiniz. IPA’yı aldıktan sonra farklı cihazlara dağıtamazsınız. Distribution’da ise Xcode’dan aldığınız IPA’yı hesap türünüze göre belirli cihaz havuzuna dağıtabilirsiniz.
</p>

 <p>
Sertifika türünüzü belirledikten sonra sonraki adımda Apple bir “ <b>CSR (Certificate Signing Request)</b>” dosyası talep ediyor. Adından da anlaşılacağı üzere, bu dosya sertifika isteğinizi, sertifika için gerekli bilgileri ve genel anahtarınızı Apple’a iletmenizi sağlıyor. Kafa karışıklığı yaratabilecek bir konu olduğundan, bunu teknik olarak incelemekte fayda var. Teknik olarak ne yaptığına bakarsak, bu dosyayı üç bölüme ayırabiliriz:
</p>

 <ol class="org-ol"> <li> <b>Genel Anahtar</b>: CSR’nin en önemli bileşeni, anahtar çiftinin genel
kısmıdır. Bu public key, oluşturulacak dijital sertifikada yer alacak
ve bu sertifikayı kullanacak olan sunucu veya istemci tarafından
herkese açık bir şekilde paylaşılacaktır.</li>

 <li> <b>Kimlik Bilgileri</b>: Bu, kim olduğunuzu ve/veya kuruluşunuzu tanımlar
(örneğin, ad, e-posta, organizasyon, ülke vb.).</li>

 <li> <b>İmza</b>: Tüm bu bilgiler, bir “private key” kullanılarak dijital
olarak imzalanır. Bu, CSR’nin bütünlüğünü ve kimlik bilgilerinin
sahipliğini doğrular.</li>
</ol> <p>
CSR oluşturulduğunda, bu dosya bir Sertifika Otoritesi’ne (Certificate Authority - CA) gönderilir. Bizim durumumuzda bu CA, Apple’dır. Apple, CSR’yi değerlendirir ve bilgileri doğru ve güvenilir bulduğunda, CSR içindeki genel anahtarı (public key) içeren bir sertifika oluşturur.
</p>

 <p>
Bu dosyayı yükledikten sonra, Apple bize sertifika dosyasını indirme imkanı sunar. Sertifikamızı indirip Xcode’da veya başka bir platformda kullanabiliriz.
</p>

 <p>
Burada bahsettiğimiz CA, yani Sertifika Otoritesi, dijital sertifikaları yayınlayan ve yöneten bir kuruluştur. Bir sertifika otoritesinin temel görevi, sertifikaları yayınlamaktır, ancak aynı zamanda sertifikaların geçerliliğini kontrol etmek ve gerektiğinde sertifikaları iptal etmek gibi diğer görevleri de vardır. Apple, iOS uygulamaları için kendi sertifika otoritesi görevini üstlenir ve geliştiricilere sertifikalar sağlar. Bu sayede, bir iOS uygulamasının Apple tarafından tanınan bir geliştirici tarafından oluşturulup oluşturulmadığını doğrulayabilir.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [SIRADA]</li>
 <li>Uygulamayı imzaladık [SIRADA]</li>
</ul></div>

 <h3> <a id="provisioning-profile-detayları" class="anchor" href="#provisioning-profile-detayları">¶</a>Provisioning Profile Detayları</h3> <div class="outline-text-3" id="text-orgfd4c01d">
 <p>
Provisioning Profile uygulamanızın hangi cihazlarda çalışabileceğini, hangi servislerle etkileşime girebileceğini ve kimler tarafından kullanılabileceğini belirleyen bir dosyadır. Uygulamanızın özelliklerini, yeteneklerini ve bunlara erişimini tanımlar.
</p>

 <p>
Sertifika oluşturma sürecini ele aldıktan sonra şimdi sıra Provisioning Profile oluşturma adımlarında;
</p>

 <ol class="org-ol"> <li> <b>Provisioning Profile Tipi Seçimi:</b> İlk adımda karar vermeniz gereken şey uygulamanızın hangi aşamada olduğudur. Geliştirme aşamasında mı, beta testinde mi yoksa App Store’da mı yayımlanacak? Bu seçim, profil tipini belirler.

 <ul class="org-ul"> <li> <b>Ad Hoc</b> dağıtımı, beta testleri veya iç dağıtımlar için idealdir. Ancak bu profille uygulamayı sadece belirli cihazlara yükleyebilirsiniz.</li>
 <li> <b>App Store</b> profili ise uygulamanızın Apple App Store’da dağıtılmasını sağlar. -  <b>Enterprise</b> dağıtımı ise büyük kuruluşlar için idealdir; bu profil ile uygulamanızı App Store dışında dağıtabilirsiniz.</li>
</ul></li>

 <li> <b>Uygulama Kimliği (App ID) Seçimi:</b> Her iOS uygulaması için benzersiz bir kimlik yerine geçen App ID’yi belirtmelisiniz. Bu, uygulamanızın hangi servisleri kullanabileceğini ve cihaz özelliklerine nasıl erişebileceğini tanımlar.</li>

 <li> <b>Sertifika ve Cihaz Seçimi:</b> Hangi sertifika ile bu profili kullanacağınıza karar verdikten sonra önceden eklediğiniz test cihazlarından istediklerinizi bu profile dahil ederek profil oluşturma işlemini tamamlayabilirsiniz.</li>
</ol> <p>
Profilinizi oluşturduktan sonra, indirip Xcode’a eklemeniz gerekmektedir ya da XCode üzerinden de indirebilirsiniz.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [SIRADA]</li>
 <li>Uygulamayı imzaladık [SIRADA]</li>
</ul></div>

 <h3> <a id="uygulamayı-imzalama" class="anchor" href="#uygulamayı-imzalama">¶</a>Uygulamayı imzalama</h3> <div class="outline-text-3" id="text-org2973e58">
 <p>
Bu aşamada, uygulamanızın gerçek cihazlarda çalışabilmesi ve App Store’a
yüklenmesi için gereken imzalamayı gerçekleştirirsiniz.
</p>

 <ol class="org-ol"> <li> <b>Xcode Ayarları:</b> Xcode projenizde, ’Signing & Capabilities’ bölümünü açtıktan sonra ’Team’ ve ’Provisioning Profile’ ayarlarını doğru bir şekilde tanımlayın.</li>

 <li> <b>Anahtar ve Sertifikaların Kontrolü:</b> Uygulamanızın imzalanabilmesi için ilgili sertifikaların ve anahtarların Mac’inizde yüklü olması gerekir. Sertifika oluşturma adımında oluşturduğunuz sertifika dosyasını indirip açtıysanız  <b>Keychain Access</b> uygulaması içerisinde bulunmasını bekleriz.</li>

 <li> <b>Uygulamanın Arşivlenmesi:</b> Uygulamanızın tüm özelliklerini ve ayarlarını kontrol ettikten sonra Xcode’daki ’Product’ menüsünden
’Archive’ seçeneğini seçerek uygulamanızı arşivleyebilirsiniz.</li>

 <li> <b>İmzalama ve Gönderme:</b> Archive işlemi bittikten sonra otomatik olarak Xcode’un ’Organizer’ penceresi açılır. Burada arşivlediğiniz uygulamayı görebilirsiniz. Bu adımda, uygulamanızı App Store’a gönderebilir veya IPA formatında dışa aktarabilirsiniz. Seçtiğiniz Provisioning Profile ile uygulamanız imzalanarak, dağıtıma hazır hale gelir.</li>
</ol> <p>
Uygulamanız dağıtıma hazır hale geldikten sonra, App Store’a yükleme veya test dağıtımları için kullanabilirsiniz.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [TAMAM]</li>
 <li>Uygulamayı imzaladık [TAMAM]</li>
</ul> <p>
Sonuç olarak, iOS uygulamalarını geliştirirken sertifika ve provisioning profile oluşturma süreçlerini doğru bir şekilde anlamak ve uygulamalarımızı güvenli bir şekilde dağıtmak için bu adımları izlemek önemlidir.
</p>

 <p>
Bu süreçler, uygulamalarımızın güvenilirliğini ve kullanıcıların gizliliğini korumamıza yardımcı olur. Etkili bir şekilde sertifika ve provisioning profile yönetimi, iOS uygulama geliştirme sürecinin temel bir parçasıdır ve bu yazıda bu süreci daha iyi anlamaya çalıştık.
</p>

 <p>
Umarım bu bilgiler, mobil uygulama geliştirme yolculuğunuzda size yardımcı olur. Sonraki yazılarda görüşmek üzere!
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/ios_sertifika_ve_provisioning_profile_i̇slemleri/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ios_sertifika_ve_provisioning_profile_i̇slemleri/index.html</guid>
  <pubDate>Wed, 20 Sep 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS Sertifika ve Provisioning Profile İşlemleri</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/alimerttekel">Ali Mert Tekel</a> yazdı.
</p>


 <div id="org986341b" class="figure">
 <p> <img src="/img/certificates-ids-profiles.png" class="content-image" width="100%"></img></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org9b55831">
 <p>
Herkese merhaba!
</p>

 <p>
iOS dünyasında sertifika, provisioning, signing gibi tabirler karşımıza çıkınca biraz kafamız karışabiliyor, özellikle dağıtımınızı  <code>ad-hoc</code> ile gerçekleştiriyorsanız. Ancak endişelenmeyin, bu konuları her adımıyla birlikte ele alacağız!
</p>

 <p>
Öncelikle, bu terimler tam olarak ne anlama geliyor?
</p>
</div>

 <h3> <a id="sertifika-certificate" class="anchor" href="#sertifika-certificate">¶</a>Sertifika (Certificate)</h3> <div class="outline-text-3" id="text-org78369aa">
 <p>
Dijital olarak imzalanan bir bilgi kümesidir. Bu bilgiler, bir kişi veya kuruluşun kimliğini doğrulama, elektronik iletişim sırasında güvenlik sağlama veya belirli bir yetki veya hizmete erişim hakkı verme gibi çeşitli amaçlar için kullanılabilir.
</p>
</div>

 <h3> <a id="provisioning-profile" class="anchor" href="#provisioning-profile">¶</a>Provisioning Profile</h3> <div class="outline-text-3" id="text-orgc0b351b">
 <p>
Apple’ın iOS ve macOS uygulamaları için kullanılan bir güvenlik mekanizmasıdır. Bu, belirli bir uygulamanın yalnızca belirli cihazlarda çalışmasına izin veren ve uygulamanın belirli bir sertifika ile imzalandığını doğrulayan bir dosyadır. Genellikle bir uygulamanın geliştirme, test ve dağıtım aşamaları boyunca kullanılır.
</p>
</div>

 <h3> <a id="uygulama-i̇mzalamak-nedir-ne-işe-yarar" class="anchor" href="#uygulama-i̇mzalamak-nedir-ne-işe-yarar">¶</a>Uygulama İmzalamak nedir, ne işe yarar?</h3> <div class="outline-text-3" id="text-org97fbe97">
 <p>
Bir iOS uygulamasını  <b>imzalamak</b>, uygulamanızın  <b>kimliğini doğrulamak</b> ve App Store’a yüklemek için  <b>gereklidir</b>. Peki, “Apple bunu neden istiyor?” diye soracak olursanız, cihazın güvenliğini ve gizliliğini korumak için olduğunu söyleyebiliriz.
</p>

 <p>
’iOS cihazlar, Android’lere göre daha güvenli’ şeklinde bir algı bulunmaktadır, bilirsiniz. Bu algının oluşmasının en önemli sebeplerinden biri Apple’ın uygulama imzalama sürecidir. Apple cihazında çalışacak bir uygulamanın imzalanmamış bir IPA’sını oluşturmak mümkün değildir. Mümkün olsa bile App Store dışından IPA kurmayı kısıtlıyor. Bu nedenle, Android cihazlara APK yükleyerek savunmasız kalma riskiniz Apple’a göre daha yüksektir. Ancak burada Android’in güvensiz olduğunu vurgulamıyorum; asıl vurgulamak istediğim,  <b>işletim sistemi güvenliğinden önce kendi kullanımlarımıza dikkat etmemiz gerektiğidir</b>.
</p>

 <p>
 <b>Uygulama İmzalamayı</b> kabaca 3 başlıkta inceleyebiliriz;
</p>

 <ol class="org-ol"> <li> <b>Sertifika Oluşturma:</b> iOS uygulamanızı imzalamak için öncelikle bir geliştirici hesabı oluşturmanız gerekir. Sonrasında ise bu hesapla bir sertifika oluşturabilirsiniz.</li>

 <li> <b>Kimlik Doğrulama Profili Oluşturma (Provisioning Profile):</b> Bu profil, belirli uygulamaların yalnızca belirli cihazlarda çalışmasına izin veren ve uygulamanın Apple sertifikasıyla imzalandığını doğrulayan dosyadır.</li>

 <li> <b>Uygulamanın İmzalanması:</b> Xcode’da oluşturduğunuz sertifika ve kimlik doğrulama profilini kullanarak uygulamanızı imzalayabilirsiniz. Bu, uygulamanızın kim tarafından geliştirildiğini ve Provisioning Profile ile uyumlu olup olmadığını doğrular.</li>
</ol> <p>
Gelin bu süreci daha detaylı bir şekilde adım adım ele alarak inceleyelim;
</p>


 <div id="org2aa80a3" class="figure">
 <p> <img src="/img/create-certificates.png" class="content-image" width="100%"></img></p>
</div>

 <p>
İlk olarak sertifika oluşturmayı ele alalım. Bu yazıda sadece Software Sertifikalarını inceleyeceğiz. Görseldeki ekran, sertifika oluştur dediğinizde karşınıza çıkan çeşitli seçenekleri barındırıyor. Burada mobil geliştirmeye odaklandığımız için gerekli olan seçenekler ilk dördüdür. Son dört seçenek ise bir Mac uygulaması çıkartmak için kullanılan sertifika türleridir.
</p>

 <p>
Burada dikkat etmemiz gereken en önemli nokta sertifika türünüzün development mi yoksa distribution mı olduğu. Farkı ise; Development sertifikası ile imzalanmış bir uygulamayı sadece Mac’inizde development yaparken test cihazınıza build aldığınız zaman kullanabilirsiniz. IPA’yı aldıktan sonra farklı cihazlara dağıtamazsınız. Distribution’da ise Xcode’dan aldığınız IPA’yı hesap türünüze göre belirli cihaz havuzuna dağıtabilirsiniz.
</p>

 <p>
Sertifika türünüzü belirledikten sonra sonraki adımda Apple bir “ <b>CSR (Certificate Signing Request)</b>” dosyası talep ediyor. Adından da anlaşılacağı üzere, bu dosya sertifika isteğinizi, sertifika için gerekli bilgileri ve genel anahtarınızı Apple’a iletmenizi sağlıyor. Kafa karışıklığı yaratabilecek bir konu olduğundan, bunu teknik olarak incelemekte fayda var. Teknik olarak ne yaptığına bakarsak, bu dosyayı üç bölüme ayırabiliriz:
</p>

 <ol class="org-ol"> <li> <b>Genel Anahtar</b>: CSR’nin en önemli bileşeni, anahtar çiftinin genel
kısmıdır. Bu public key, oluşturulacak dijital sertifikada yer alacak
ve bu sertifikayı kullanacak olan sunucu veya istemci tarafından
herkese açık bir şekilde paylaşılacaktır.</li>

 <li> <b>Kimlik Bilgileri</b>: Bu, kim olduğunuzu ve/veya kuruluşunuzu tanımlar
(örneğin, ad, e-posta, organizasyon, ülke vb.).</li>

 <li> <b>İmza</b>: Tüm bu bilgiler, bir “private key” kullanılarak dijital
olarak imzalanır. Bu, CSR’nin bütünlüğünü ve kimlik bilgilerinin
sahipliğini doğrular.</li>
</ol> <p>
CSR oluşturulduğunda, bu dosya bir Sertifika Otoritesi’ne (Certificate Authority - CA) gönderilir. Bizim durumumuzda bu CA, Apple’dır. Apple, CSR’yi değerlendirir ve bilgileri doğru ve güvenilir bulduğunda, CSR içindeki genel anahtarı (public key) içeren bir sertifika oluşturur.
</p>

 <p>
Bu dosyayı yükledikten sonra, Apple bize sertifika dosyasını indirme imkanı sunar. Sertifikamızı indirip Xcode’da veya başka bir platformda kullanabiliriz.
</p>

 <p>
Burada bahsettiğimiz CA, yani Sertifika Otoritesi, dijital sertifikaları yayınlayan ve yöneten bir kuruluştur. Bir sertifika otoritesinin temel görevi, sertifikaları yayınlamaktır, ancak aynı zamanda sertifikaların geçerliliğini kontrol etmek ve gerektiğinde sertifikaları iptal etmek gibi diğer görevleri de vardır. Apple, iOS uygulamaları için kendi sertifika otoritesi görevini üstlenir ve geliştiricilere sertifikalar sağlar. Bu sayede, bir iOS uygulamasının Apple tarafından tanınan bir geliştirici tarafından oluşturulup oluşturulmadığını doğrulayabilir.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [SIRADA]</li>
 <li>Uygulamayı imzaladık [SIRADA]</li>
</ul></div>

 <h3> <a id="provisioning-profile-detayları" class="anchor" href="#provisioning-profile-detayları">¶</a>Provisioning Profile Detayları</h3> <div class="outline-text-3" id="text-orgc52b576">
 <p>
Provisioning Profile uygulamanızın hangi cihazlarda çalışabileceğini, hangi servislerle etkileşime girebileceğini ve kimler tarafından kullanılabileceğini belirleyen bir dosyadır. Uygulamanızın özelliklerini, yeteneklerini ve bunlara erişimini tanımlar.
</p>

 <p>
Sertifika oluşturma sürecini ele aldıktan sonra şimdi sıra Provisioning Profile oluşturma adımlarında;
</p>

 <ol class="org-ol"> <li> <b>Provisioning Profile Tipi Seçimi:</b> İlk adımda karar vermeniz gereken şey uygulamanızın hangi aşamada olduğudur. Geliştirme aşamasında mı, beta testinde mi yoksa App Store’da mı yayımlanacak? Bu seçim, profil tipini belirler.

 <ul class="org-ul"> <li> <b>Ad Hoc</b> dağıtımı, beta testleri veya iç dağıtımlar için idealdir. Ancak bu profille uygulamayı sadece belirli cihazlara yükleyebilirsiniz.</li>
 <li> <b>App Store</b> profili ise uygulamanızın Apple App Store’da dağıtılmasını sağlar. -  <b>Enterprise</b> dağıtımı ise büyük kuruluşlar için idealdir; bu profil ile uygulamanızı App Store dışında dağıtabilirsiniz.</li>
</ul></li>

 <li> <b>Uygulama Kimliği (App ID) Seçimi:</b> Her iOS uygulaması için benzersiz bir kimlik yerine geçen App ID’yi belirtmelisiniz. Bu, uygulamanızın hangi servisleri kullanabileceğini ve cihaz özelliklerine nasıl erişebileceğini tanımlar.</li>

 <li> <b>Sertifika ve Cihaz Seçimi:</b> Hangi sertifika ile bu profili kullanacağınıza karar verdikten sonra önceden eklediğiniz test cihazlarından istediklerinizi bu profile dahil ederek profil oluşturma işlemini tamamlayabilirsiniz.</li>
</ol> <p>
Profilinizi oluşturduktan sonra, indirip Xcode’a eklemeniz gerekmektedir ya da XCode üzerinden de indirebilirsiniz.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [SIRADA]</li>
 <li>Uygulamayı imzaladık [SIRADA]</li>
</ul></div>

 <h3> <a id="uygulamayı-imzalama" class="anchor" href="#uygulamayı-imzalama">¶</a>Uygulamayı imzalama</h3> <div class="outline-text-3" id="text-orgc920e33">
 <p>
Bu aşamada, uygulamanızın gerçek cihazlarda çalışabilmesi ve App Store’a
yüklenmesi için gereken imzalamayı gerçekleştirirsiniz.
</p>

 <ol class="org-ol"> <li> <b>Xcode Ayarları:</b> Xcode projenizde, ’Signing & Capabilities’ bölümünü açtıktan sonra ’Team’ ve ’Provisioning Profile’ ayarlarını doğru bir şekilde tanımlayın.</li>

 <li> <b>Anahtar ve Sertifikaların Kontrolü:</b> Uygulamanızın imzalanabilmesi için ilgili sertifikaların ve anahtarların Mac’inizde yüklü olması gerekir. Sertifika oluşturma adımında oluşturduğunuz sertifika dosyasını indirip açtıysanız  <b>Keychain Access</b> uygulaması içerisinde bulunmasını bekleriz.</li>

 <li> <b>Uygulamanın Arşivlenmesi:</b> Uygulamanızın tüm özelliklerini ve ayarlarını kontrol ettikten sonra Xcode’daki ’Product’ menüsünden
’Archive’ seçeneğini seçerek uygulamanızı arşivleyebilirsiniz.</li>

 <li> <b>İmzalama ve Gönderme:</b> Archive işlemi bittikten sonra otomatik olarak Xcode’un ’Organizer’ penceresi açılır. Burada arşivlediğiniz uygulamayı görebilirsiniz. Bu adımda, uygulamanızı App Store’a gönderebilir veya IPA formatında dışa aktarabilirsiniz. Seçtiğiniz Provisioning Profile ile uygulamanız imzalanarak, dağıtıma hazır hale gelir.</li>
</ol> <p>
Uygulamanız dağıtıma hazır hale geldikten sonra, App Store’a yükleme veya test dağıtımları için kullanabilirsiniz.
</p>

 <ul class="org-ul"> <li>Sertifikayı oluşturduk [TAMAM]</li>
 <li>Provisioning Profili oluşturduk [TAMAM]</li>
 <li>Uygulamayı imzaladık [TAMAM]</li>
</ul> <p>
Sonuç olarak, iOS uygulamalarını geliştirirken sertifika ve provisioning profile oluşturma süreçlerini doğru bir şekilde anlamak ve uygulamalarımızı güvenli bir şekilde dağıtmak için bu adımları izlemek önemlidir.
</p>

 <p>
Bu süreçler, uygulamalarımızın güvenilirliğini ve kullanıcıların gizliliğini korumamıza yardımcı olur. Etkili bir şekilde sertifika ve provisioning profile yönetimi, iOS uygulama geliştirme sürecinin temel bir parçasıdır ve bu yazıda bu süreci daha iyi anlamaya çalıştık.
</p>

 <p>
Umarım bu bilgiler, mobil uygulama geliştirme yolculuğunuzda size yardımcı olur. Sonraki yazılarda görüşmek üzere!
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/ios_sertifika_ve_provisioning_profile_i̇şlemleri/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ios_sertifika_ve_provisioning_profile_i̇şlemleri/index.html</guid>
  <pubDate>Wed, 20 Sep 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>A Philosophy of Software Design by John Ousterhout</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>


 <div id="orgafce05d" class="figure">
 <p> <img src="/img/A_Philosophy_of_sw_design.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>A Philosophy of Software Design Kitap Kapağı</p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgcb079ed">
 <p>
 <a href="https://www.youtube.com/watch?v=bmSAYlu0NcY&ab_channel=TalksatGoogle">John Ousterhout Google Konuşması</a>’nda kendi yazdığı kitaptan bahsediyordu. Bu kitabı yazmadaki motivasyonunu değerli buldum.
</p>

 <p>
 <a href="https://www.reddit.com/r/programming/comments/lb8zrn/an_alternative_to_clean_code_a_philosophy_of/">Reddit yorumları</a>’nda hem John hem kitap üzerine olan yorumları okuyup inceledikten sonrada kitabı okumaya karar verdim ve gerçekten güzel tavsiyelerle karşılaştım.
</p>

 <p>
Günümüz dünyasında kullanılan araçlara böyle etkin katkılarda bulunmuş kimselerin tavsiyelerini okurken, karşılaştıkları problemlerin sebeplerini nasıl yorumladıklarını ve pratikte çözümlere giderken hangi akıl çerçevesinde hareket ettiklerini görebilmek çok değerli.
</p>

 <p>
 <a href="https://en.wikipedia.org/wiki/John_Ousterhout">John Ousterhout</a> bu kitabında  <code>karmaşıklık</code>’ın temelleri hakkında konuşarak başlıyor.
</p>

 <p>
 <code>Code Amplification</code> yanı değişiklik gerektiğinde çok fazla yerin aynı anda akıl süzgecinden geçirilmesi ve değiştirilmesi ihtiyacından,  <code>Cognitive Load</code> yani ihtiyaç duyulan değişiklik için geliştiricilerin çok fazla zihinsel yük taşımasına, bir de  <code>Unknown unknowns</code> dediği hangi değişikliklerin yapılmasının tespitindeki bilinmezliklerin zorluklardan bahsediyor.
</p>

 <p>
Yaklaşım olarak önerdiği ve ilgimi çeken başlıklarin birkaçından bahsedeceğim, bunlardan birincisi  <code>Deep/Shallow</code> geliştirme yaklaşımı. Burada soyutlanan özelliğin olabildiğince yeteneği yalın bir arayüzle sağlayıp iç derinliğinin fazla olmasından bahsediyor. Çok fazla  <code>layer</code> katmanın olduğu ve yeterince yetkin olmayan birbirine refere ettiği yaklaşımlar yerine,  <code>cohesion</code>’i yüksek anlaşılabilir bir arayüzle sunulmuş gerçekten iş yapan birimlerin tercih edilmesi gerektiğini anlatıyor.
</p>

 <p>
Ayrıca kodun dokümantasyonu ile ilgili olan başlık ilgimi çekti. Soyut düşünme ve sistem  <code>compose</code> edebilmeyi ilk olarak sistem hakkında düşünürken veriyoruz. Herhangi bir  <code>class</code>,  <code>function</code> veya  <code>property</code> yazmadan önce, dokümantasyonunu yazarak aklımızdaki soyutlamanın bir kademe daha olgunlaştığına şahit olabiliriz. Bu nedenle kodunu yazmadan önce dokümantasyonunu koda en yakın yerde keşfedilebilir/görünebilir olarak yazmaya özen göstermenin faydalarından bahsediyor.
</p>

 <p>
Yazılımda karmaşıklığı yönetmeye dair daha bir çok başka önerinin olduğu  <a href="https://literal.club/book/a-philosophy-of-software-design-u58xx">A Philosophy of Software Design</a> kitabını okumanızı öneriyorum, kısa [171 sayfa] ve öz bir anlatımı var.
</p>

 <p>
Görüşmek üzere.
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/a_philosophy_of_software_design_book/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/a_philosophy_of_software_design_book/index.html</guid>
  <pubDate>Mon, 18 Sep 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Makefile’ın Faydaları</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org9a4851e">
 <p>
 <a href="https://makefiletutorial.com/">Makefile</a>, unix tabanlı işletim sistemlerinde program derlemek için kullanılan bir terminal aracıdır.
</p>

 <p>
Genel itibariyle  <code>makefile</code> bir kod derleme aracı olsa bile, içerisinde başka komutları çalıştırmanızı sağlayan bir sentaks’i vardır.
</p>

 <p>
Bu araç sayesinde projelerinizde ortak çalıştırılması gereken bazı terminal komutlarını tek bir dosyada tanımlayıp isimlendirebiliyorsunuz.
</p>

 <p>
Biz kendi projelerimizde ortak olarak kullanılacak komutları hem dökümente etmek hem de hızlıca kullanabilmek amacıyla  <code>Makefile</code> dosyasını aktif bir şekilde kullanıyoruz.
</p>

 <p>
Anadizine koyduğunuz Makefile  <code>ide</code>’ler tarafından otomatik keşfedilebiliyor, ekibinizle bu yaklaşımınızı proje başında konuşursanız herkesin ihtiyaç duyabileceği temel komutların gruplandırıldığı bir dosyaya sahip olursunuz.
</p>

 <div class="highlight"> <pre> <span></span> <span class="nf">release_to_test</span> <span class="o">:</span>
 <span class="c"># Test'e uygulama gönderen muhtemel bir fastlane komutu</span>

 <span class="nf">generate_localization_files</span> <span class="o">:</span>
 <span class="c"># Auto-generate eden bir kod'un çalıştırılması.</span>

 <span class="nf">sync_certificates</span> <span class="o">:</span>
 <span class="c"># Sertifikaların locale indirilip yüklenmesine dair komut.</span>
</pre></div>

 <p>
Örnek bir çağırım, Makefile dosyasının olduğu dizinde iken:
</p>
 <div class="highlight"> <pre> <span></span>make <span class="w"> </span>release_to_test
</pre></div>

 <div class="highlight"> <pre> <span></span>make <span class="w"> </span>sync_certificates
</pre></div>

 <p>
Özetle, kullanım ihtiyacı derlemeye yönelik olsa bile proje içinde ortak kullanılma ihtiyacı olan komutların yerleştirildiği böyle bir dosya çalışmalarımızda çok faydalı olabilir.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org9bc4a68">
 <p>
 <a href="https://makefiletutorial.com/">Makefile Tutorial</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/makefile_nedir/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/makefile_nedir/index.html</guid>
  <pubDate>Fri, 08 Sep 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Apple Design Awards Kazanmanın Sırları</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/alper-cem-%C3%B6zt%C3%BCrk-a625671a8">Alper Cem Öztürk</a> yazdı.
</p>


 <div id="orgff8e4ff" class="figure">
 <p> <img src="/img/apple_design_award_2023.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Apple Design Award 2023</p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org8658c05">
 <p>
Merhaba sevgili Mobilen okurları,
</p>

 <p>
Bildiğiniz gibi, Apple her yıl WWDC zamanı en üstün tasarım ve
yenilikçilik örneklerini  <b>Apple Design Awards (ADA)</b> ile ödüllendiriyor.
Bu sayıda Apple Design Awards özelinde mobil dünyanın sınırlarını
zorlayan, yaratıcılığın, yenilikçi ruhun, kullanıcı deneyiminin ön
planda olduğu bir serüvenin öne çıkanlarını konuşacağız. Sonrasında ise
bu ödülü kazanmanın gerektirdiklerinden derinlemesine bahsedeceğiz.
</p>

 <p>
Öncelikle Apple Design Awards, nam-ı diğer ADA, nedir biraz bundan
bahsedelim. ADA, aslında mobil uygulama ve oyun dünyasının en prestijli
ödüllerinden biridir. Her yıl  <b>WWDC</b> etkinliği sırasında sahiplerini
bulan bu ödüller, üstün tasarım, yenilikçilik ve kullanıcı deneyimine
sahip projelere verilir. ADA, mobil geliştiricilerin yaratıcılıklarını
ve teknolojik yeteneklerini sergileyebilecekleri önemli bir platformdur.
Bu ödülleri kazanmak, sadece bir başarı belgesi değil, aynı zamanda
sektörde öne çıkan bir isim olmanın da bir kanıtı niteliğindedir desek
yanılmış olmayız.
</p>

 <p>
Apple, bu ödülleri toplam altı kategoriye ayırmış: Kapsayıcılık, Keyif
ve Eğlence, Etkileşim, Sosyal Etki, Görseller ve Grafikler ve son olarak
İnovasyon.
</p>

 <p>
Sizi fazla sıkmamak adına her bir kategoriye göz atmayacağız. Amacımız,
bu uygulamaların diğerlerinden farklı olarak neler yaptıklarını anlamak
ve belki de bize ilham olmalarını sağlamak olacak. Üzerine konuşmanın
bize daha çok katkı sağlayacağını düşündüğüm için Keyif ve Eğlence,
Sosyal Etki ve İnovasyon olmak üzere üç kategoriden çıkarımlar yapmaya
çalışacağız. Daha sonrasında uygulama bağımsız, bu ödüllerin
verilmesinde önemli rol aldığını düşündüğüm detaylı bir incelemeyi sizle
paylaşacağım.
</p>

 <p>
Şimdi hep beraber bu üç kategoride göz önünde bulundurulan kriterlere ve
bu kriterler doğrultusunda bu yılın kazananlarına bakalım. Bu yazıda
analizi daha düzgün yapabilmek adına kapsamı küçültüp, yalnızca mobil
uygulamalara göz atacağımızı unutmadan belirteyim.
</p>
</div>

 <h3> <a id="apple-design-awards-kategorileri" class="anchor" href="#apple-design-awards-kategorileri">¶</a>Apple Design Awards Kategorileri</h3> <h4> <a id="keyif-ve-eğlence-kategorisi" class="anchor" href="#keyif-ve-eğlence-kategorisi">¶</a>Keyif ve Eğlence Kategorisi</h4> <div class="outline-text-4" id="text-org68c692a">
 <p>
 <b>Keyif ve Eğlence</b> kategorisi, kullanıcılara keyifli anlar yaşatan ve
eğlenceyi teknolojiyle buluşturan uygulamalara odaklanıyor. Bu kategori,
tasarımın, kullanıcı deneyiminin ve eğlencenin birleşimini sergileyen
uygulamaları öne çıkarırken, finalistler arasında yer alan uygulamalar
da her biri kendi alanında dikkat çekici deneyimler sunuyor. Bu yılın
finalistleri arasında, benzersiz içerikleri ve yaratıcı tasarımlarıyla
öne çıkan  <b>CREME</b>,  <b>Chantlings</b>,  <b>Pocket Card Jockey: Ride On!</b> ve
 <b>Knotwords</b> yer alıyor.
</p>

 <p>
Yine de, bu yılın kazananı tüm bu özellikleri bir adım öteye taşıyarak
dil öğrenimini yeniden tanımlayan  <b>Duolingo</b> oldu.
</p>
</div>

 <h4> <a id="duolingo" class="anchor" href="#duolingo">¶</a>Duolingo</h4> <div class="outline-text-4" id="text-orga2a9749">

 <div id="org7dd9490" class="figure">
 <p> <img src="/img/ada_duolingo.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Duolingo</p>
</div>

 <p>
Hepimiz dil öğrenme adımlarını atarken, ücretsiz uygulamaların en az
birini test etmişizdir. Eğer denedikleriniz arasında  <b>Duolingo</b> varsa,
diğer uygulamalardan deneyim olarak ne kadar sıyrıldığını siz de
farketmişsinizdir.
</p>


 <div id="org78306cd" class="figure">
 <p> <img src="/img/duolingo_in_app_images.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Duolingo in App Images</p>
</div>

 <p>
Duolingo’nun diğer dil öğrenme uygulamalarından farklılaştığı kısım,
şüphesiz öğrenme deneyimini sıkıcı bir rutinden çıkarıp eğlenceli ve
keyifli bir aktiviteye dönüştürmesidir. Uygulama, eğlenceli mini oyunlar
aracılığıyla dil becerilerinizi geliştirme şansı sunarak öğrenme
sürecini motive edici hale getiriyor. Ayrıca, kullanıcılara kulüplere
katılma ve diğer öğrencilerle etkileşim kurma imkanı tanıyarak sosyal
bir boyut ekliyor. Tüm bunlar, kullanıcıların öğrenirken keyif almasını
sağlayarak Duolingo’yu  <b>Keyif ve Eğlence</b> kategorisinde birincilikle
taçlandırmış.
</p>
</div>

 <h4> <a id="sosyal-etki-kategorisi" class="anchor" href="#sosyal-etki-kategorisi">¶</a>Sosyal Etki Kategorisi</h4> <div class="outline-text-4" id="text-org422a051">
 <p>
Günümüz hızla dijitalleşen dünyasında, zihinsel sağlığın korunması ve
geliştirilmesi her zamankinden daha büyük bir önem kazandı. Modern
yaşamın getirdiği yoğun stres ve kaygı, bireyleri içsel dengeyi bulmaya
ve zihinsel refaha daha fazla önem veren bir yaşam tarzı arayışına itti.
Bu yılki  <b>Sosyal Etki</b> finalistleri de bunun üzerinde yoğunlaşarak,
zihinsel sağlık alanında fark yaratan uygulamaların ne denli değerli ve
etkili olduğunu bir kez daha gözler önüne serdi.
</p>

 <p>
Bu yılın  <b>Sosyal Etki</b> finalistleri arasında  <b>Duolingo</b>,  <b>Sago Mini
First Words</b>,  <b>Hindsight</b> ve  <b>Beecarbonize</b> gibi güçlü adaylar yer aldı.
Ancak en parlak yıldız, ödülü evine götüren  <b>Headspace</b> oldu.
</p>
</div>

 <h4> <a id="headspace" class="anchor" href="#headspace">¶</a>Headspace</h4> <div class="outline-text-4" id="text-orgdbe319e">

 <div id="org617f1d9" class="figure">
 <p> <img src="/img/headspace_logo.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>Headspace Logo</p>
</div>

 <p>
Daha önce birkaç meditasyon ve mental sağlık uygulamasını deneyimlemiş
birisi olarak,  <b>Headspace</b>’i kullanmaya başladığımda önceki
deneyimlerimden daha farklı bir deneyim yaşadığımı söyleyebilirim.
Farklılıktan kastımın ne olduğunu soracak olursanız, buna uygulamanın
sunduğu tam rehberlik cevabını verebilirim. En basitinden bir nefes
egzersizinde dahi uygulama sizi yalnız bırakmıyor. Bu gibi konularda
görsel tasarım ve  <code>haptic feedback</code> (bkz:  <a href="https://builtin.com/hardware/haptic-technology">Haptic feedback</a>)
kullanımlarının ustaca yapılması, kullanıcıya tam rehberlik edilmesini
kolaylaştırmış.
</p>


 <div id="orgd0e6001" class="figure">
 <p> <img src="/img/headspace_in_app_images.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 5: </span>Headspace in App Images</p>
</div>

 <p>
Buraya bir parantez açıp,  <b>Headspace</b> gibi mental sağlık uygulamalarının
kronik sorunu olduğunu düşündüğüm bir noktaya değinmek istiyorum. Eğer
kötü bir moddaysanız, asla yüzlerce seçenek arasında boğulup, sonsuza
kadar kaydırmak istemiyorsunuz. Bu çok can sıkıcı ve zaman çalan bir
deneyim. İşte bu nedenle birçok kullanıcı, bununla vakit kaybetmek
yerine uygulamayı kapatmayı tercih ediyor.
</p>

 <p>
Bu temel soruna dikkat çektikten sonra bir adım daha ilerleyelim ve
 <b>Headspace</b>’in neden bu kategorinin önde gelen ismi olduğuna bakalım.
</p>

 <p>
 <b>Headspace</b>’i  <b>Sosyal Etki</b> kategorisinin kazananı yapanın, uygulamanın
farkındalık ve zihinsel sağlık konularında geniş kitlelere ulaşması ve
bu alanlarda gözle görülebilir olumlu etkiler yaratması olduğunu
düşünüyorum. Bunu App Store puanlamaları ve yorumları üzerinden de çok
net bir şekilde gözlemleyebiliyoruz. Uygulama aynı zamanda, meditasyon
ve zihinsel sağlık pratiğini erişilebilir ve anlaşılır bir şekilde
sunarak, insanların stresi azaltmalarına, zihinsel dengeyi bulmalarına
ve daha iyi bir yaşam kalitesi elde etmelerine yardımcı oluyor. Başka
bir deyişle,  <b>Headspace</b> sadece bireysel kullanıcıların değil, toplumun
genel sağlık ve mutluluğu üzerinde de gözle görülebilir olumlu bir etki
yaratıyor diyebiliriz.
</p>
</div>

 <h4> <a id="i̇novasyon-kategorisi" class="anchor" href="#i̇novasyon-kategorisi">¶</a>İnovasyon Kategorisi</h4> <div class="outline-text-4" id="text-org707077c">
 <p>
Kullanıcı deneyimini kökten değiştiren, teknolojinin yeni alanlarında
çığır açan ve beklenmedik yaklaşımlarla öne çıkan uygulamaların
değerlendirildiği bu kategoride, öne çıkan uygulamalar arasında  <b>Camo
Studio</b>,  <b>Rise: Energy & Sleep Tracker</b>,  <b>Resident Evil Village</b> ve
 <b>stitch</b> gibi harika projeler yer aldı.
</p>

 <p>
Öte yandan inovatif yaklaşımıyla en dikkat çeken ve tenis deneyimini
baştan aşağı değiştiren  <b>SwingVision: A.I. Tennis App</b>, ödülün sahibi
oldu.
</p>
</div>

 <h4> <a id="swingvision-ai-tennis-app" class="anchor" href="#swingvision-ai-tennis-app">¶</a>SwingVision: A.I. Tennis App</h4> <div class="outline-text-4" id="text-org922114e">

 <div id="org1abebf0" class="figure">
 <p> <img src="/img/swingvision_logo.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 6: </span>SwingVision Logo</p>
</div>

 <p>
Her ne kadar sıkı bir tenis izleyicisi olsam da, iyi bir oyuncu değilim.
Daha iyi bir oyuncu olabilmek adına kurs alma, özel antrenörlerle
çalışma gibi bir arayış içine hiç girmedim. Bu yıl Apple Design Awards
açıklandığında  <b>SwingVision</b> ile tanıştım ve oldukça etkilendiğimi de
söylemeliyim. Şimdi de sizinle tanıştırmak istiyorum.
</p>

 <p>
 <b>SwingVision</b>, A.I. ve Neural Engine’in gücünü birleştirerek kullanan,
tenis oyunumuza her yönden katkı sağlamayı hedef alan bir tenis koçu
olarak karşımıza çıkıyor. Bu teknolojiler sayesinde her vuruşu, hareketi
ve taktik tercihlerini analiz ederek kullanıcısına rehberlik ediyor.
Tenis oyununu daha akıllı, daha stratejik ve daha keyifli hale getirmek
için kullanılan bu teknolojiler, uygulamayı inovasyonun zirvesine
taşıyor.
</p>


 <div id="orgec7d1a1" class="figure">
 <p> <img src="/img/swingvision_in_app_images.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 7: </span>SwingVision in App Images (1)</p>
</div>

 <p>
Peki bunu nasıl yapıyor? Öncelikle uygulama sizden telefonunuzu kortu
düzgün bir açıyla görebilecek şekilde yerleştirmenizi istiyor. Tripot
yardımıyla telefonunuzu yerleştirip, gerekli adımları tamamladıktan
sonra ise yapmanız gereken tek şey oyununuza odaklanmak. Geriye kalan
işi  <b>SwingVision</b> tamamlayacak.
</p>


 <div id="orgc5471f8" class="figure">
 <p> <img src="/img/swingvision_in_app_images_2.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 8: </span>SwingVision in App Images (2)</p>
</div>

 <p>
Oyun sırasında içerde mi dışarda mı emin olamadığımız durumlarda  <b>Apple
Watch</b> veya başka bir iOS cihazı ile  <b>line call</b> ( <a href="https://www.topendsports.com/sport/tennis/hawkeye.htm">Line call</a>)
yapabiliyoruz. Özellikle bu, çok tatlı bir özellik olmuş. Oyun sonunda
ise bütün oyuna dair tüm istatistikler, görselleştirilerek bir döküm
halinde kullanıcıya sunuluyor. A.I. ve Neural Engine teknolojileri
sayesinde, maçın önemli anları video kaydı olarak tutuluyor. Böylelikle
maçtaki en uzun rallilerimizi veya break point’lerimizi ( <a href="https://thetennisbros.com/tennis-tips/tactics/break-point-in-tennis/">Break point</a>) sonradan izleyebiliyoruz.
</p>


 <div id="org24f1c3a" class="figure">
 <p> <img src="/img/swingvision_in_app_images_3.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 9: </span>SwingVision in App Images (3)</p>
</div>

 <p>
Tenis uzun soluklu ve yorucu bir spor. Dolayısıyla telefonumun şarjı,
ortalama bir kullanım için yeterli olur mu diye düşünüyor olabilirsiniz.
Buna yanıtım kısmen evet olacak. Eğer profesyonel bir oyuncu değilseniz
ve uygulamayı çoğunlukla antrenmanlarınızı analiz etmek amacıyla
kullanıyorsanız, uygulamanın pil tüketimini minimumda tutarak antrenman
sonuna kadar size eşlik edebildiğini söylemek mümkün. Ancak geliştirici
ekip tarafından sonraki sürümlerde uygulama üzerinden tenis maçlarının
canlı yayınının yapılabileceğinin müjdesi verildi. Bunu göz önünde
bulundurduğumuzda, yeni sürümlerde pil konusunun daha endişe verici
olabileceğini söyleyebiliriz.
</p>

 <p>
Ancak tüm bu teknik detaylar,  <b>SwingVision</b>’ın tenis deneyimine nasıl
dokunduğunu görmemizi engellemesin. Geniş bir perspektiften bakacak
olursak,  <b>SwingVision</b>’ın tenis tutkunlarına sunduğu inovasyon ve
teknoloji dolu deneyimin, sadece kullanıcıların oyununu geliştirmekle
kalmadığını, aynı zamanda tenis sporuna yeni bir bakış açısı
kazandırdığını görüyoruz. İşte bu nedenle,  <b>SwingVision</b>’ın Apple Design
Awards’ta inovasyon kategorisinde ödül kazanmasının şaşırtıcı olmadığını
söyleyebilirim.
</p>

 <p>
Ayrıca,  <b>SwingVision</b>’ın hikayesini öğrenmek ilgi çekici geliyorsa,
Apple’ın  <a href="https://nr.apple.com/d2I0Z990m6">Swupnil Sahai ve kurucu ortağı, gücünü yapay zekadan alan SwingVision ile servis kırıyor</a>
yazısını okumanızı tavsiye ederim.
</p>
</div>

 <h3> <a id="son" class="anchor" href="#son">¶</a>Son</h3> <div class="outline-text-3" id="text-orgfb0fcef">
 <p>
Hep beraber bu yılın  <b>Apple Design Awards</b> ödüllerinin öne çıkanlarını
ve bu öne çıkanların neyi farklı yaptıklarını konuştuk. Umarım
yolculuğumuz boyunca yeni fikirler ve bakış açıları bulabilmişsinizdir.
</p>

 <p>
Eğer uygulama bağımsız bir şekilde Apple Design Awards kazanmanın
tasarım dilinden, renk şemasına kadar neleri gerektirdiğinin
derinlemesine analizini görmek istiyorsanız, Joseph Russel’ın bu
muhteşem  <a href="https://dreamwalk.com.au/blog/what-it-takes-to-win-an-apple-design-award">blog yazısına</a> kesinlikle bir göz atın. Bir sonraki sayıda görüşmek üzere.
Hoşça kalın :)
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-orgee31266">
 <ul class="org-ul"> <li> <a href="https://developer.apple.com/design/awards/">Apple Design Awards</a></li>
 <li> <a href="https://www.apple.com/tr/newsroom/2022/05/swupnil-sahai-and-his-co-founder-serve-an-ace-with-ai-powered-swingvision/">AI powered tennis</a></li>
 <li> <a href="https://dreamwalk.com.au/blog/what-it-takes-to-win-an-apple-design-award">What it takes to win an apple design award?</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/apple_design_awards_kazanmanin_sirlari/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/apple_design_awards_kazanmanin_sirlari/index.html</guid>
  <pubDate>Tue, 29 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Okuma Notları: The Art Of Readable Code (2)</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/myusufka">Yusuf Kaya</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgcf43211">
 <p>
Merhabalar, geçtiğimiz sayıda  <b>The Art Of Readable Code</b> kitabının okuma
notlarının ilk bölümünü paylaşmıştım. Bu sayıda da ikinci bölümünü
paylaşacağım.
</p>
</div>

 <h4> <a id="koşullardaki-argüman-sırası" class="anchor" href="#koşullardaki-argüman-sırası">¶</a>Koşullardaki Argüman Sırası</h4> <div class="outline-text-4" id="text-org60b441e">
 <p>
Koşullu ifadelerde ve döngülerde, argüman sırasını mantıklı bir şekilde
düzenlemek okunabilirliği artırır. Örneğin,  <b>length >= 10</b> gibi
değişkenin sol tarafta olması daha okunabilirdir. Ancak iki tarafın da
değişken oladuğu durumlarda ifadelerde daha değişken olanın solda olması
okunabilirliği artırır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">let</span>  <span class="nv">length</span>  <span class="p">=</span>  <span class="mi">10</span>
   <span class="k">if</span>  <span class="n">lengthOfUser</span>  <span class="o">>=</span>  <span class="n">length</span>  <span class="p">{</span>
       <span class="p">...</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h4> <a id="ifelse-bloklarının-sırası" class="anchor" href="#ifelse-bloklarının-sırası">¶</a>if/else Bloklarının Sırası</h4> <div class="outline-text-4" id="text-org9cdd353">
 <p>
if/else ifadelerini kullanırken, genellikle pozitif senaryoları önce ele
almak ve daha basit durumları önceden kontrol etmek kodun
okunabilirliğini artırabilir.
</p>
</div>

 <h4> <a id="ternary-operator" class="anchor" href="#ternary-operator">¶</a>Ternary Operator</h4> <div class="outline-text-4" id="text-org16e1c1a">
 <p>
Ternary Operator, tek satırda koşullu bir ifade yazmak için kullanılır.
Ancak, karmaşık durumları tek bir satırda ifade etmek, okunabilirliği
azaltabilir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">let</span>  <span class="nv">firstCard</span>  <span class="p">=</span>  <span class="mi">11</span>
   <span class="kd">let</span>  <span class="nv">secondCard</span>  <span class="p">=</span>  <span class="mi">10</span>
   <span class="bp">print</span> <span class="p">(</span> <span class="n">firstCard</span>  <span class="p">==</span>  <span class="n">secondCard</span>  <span class="p">?</span>  <span class="s">"Kartlar Aynı"</span>  <span class="p">:</span>  <span class="s">"Kartlar Farklı"</span> <span class="p">)</span>
</pre></div>
</div>

 <h4> <a id="fonksiyonlardan-erken-dönme" class="anchor" href="#fonksiyonlardan-erken-dönme">¶</a>Fonksiyonlardan Erken Dönme</h4> <div class="outline-text-4" id="text-orgcf22c31">
 <p>
Fonksiyonun içinde erken return ederek kodun karmaşıklığını azaltabilir ve koruyucu ifadeler kullanarak kodun okunabilirliği arttırılabilir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">calculateXY</span> <span class="p">(</span> <span class="n">x</span> <span class="p">:</span>  <span class="nb">Int</span> <span class="p">,</span>  <span class="n">y</span> <span class="p">:</span>  <span class="nb">Int</span> <span class="p">)</span>  <span class="p">{</span>
       <span class="k">if</span>  <span class="n">x</span>  <span class="o">!=</span>  <span class="n">y</span>  <span class="p">{</span>
           <span class="k">return</span>
       <span class="p">}</span>
            <span class="p">...</span>
   <span class="p">}</span>
</pre></div>

 <p>
Swift dilinde  <code>early return</code> edebilmek için özellikle  <code>guard</code> anahtar kelime olarak bulunmaktadır.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">greet</span> <span class="p">(</span> <span class="kc">_</span>  <span class="n">name</span> <span class="p">:</span>  <span class="nb">String</span> <span class="p">?)</span>  <span class="p">-></span>  <span class="nb">String</span>  <span class="p">{</span>
       <span class="k">guard</span>  <span class="kd">let</span>  <span class="nv">name</span>  <span class="p">=</span>  <span class="n">name</span>  <span class="k">else</span>  <span class="p">{</span>  <span class="k">return</span>  <span class="s">"Hello, Stranger"</span>  <span class="p">}</span>

       <span class="k">return</span>  <span class="s">"Hello, </span> <span class="si">\(</span> <span class="n">name</span> <span class="si">)</span> <span class="s">"</span>
   <span class="p">}</span>
</pre></div>
</div>


 <h4> <a id="i̇ç-i̇çe-geçmiş-kod-bloklarını-azaltma" class="anchor" href="#i̇ç-i̇çe-geçmiş-kod-bloklarını-azaltma">¶</a>İç İçe Geçmiş Kod Bloklarını Azaltma</h4> <div class="outline-text-4" id="text-org20d16ef">
 <p>
Derinlemesine iç içe geçmiş kod blokları okunabilirliği azaltır. Kodumuzu düzgün ve lineer bir şekilde düzenlemek, İç içe geçmeyi önleyebilir.
</p>
</div>

 <h4> <a id="değişkenleri-açıklamak" class="anchor" href="#değişkenleri-açıklamak">¶</a>Değişkenleri Açıklamak</h4> <div class="outline-text-4" id="text-org70006f5">
 <p>
Anlaşılması zor ifadeler için daha açıklayıcı alt değişkenler tanımlayarak okunabilirliği arttırabiliriz.
Örneğin:
</p>

 <div class="highlight"> <pre> <span></span>   <span class="k">if</span>  <span class="n">line</span> <span class="p">.</span> <span class="bp">split</span> <span class="p">(</span> <span class="n">separator</span> <span class="p">:</span>  <span class="s">":"</span> <span class="p">)[</span> <span class="mi">0</span> <span class="p">].</span> <span class="n">trimmingCharacters</span> <span class="p">(</span> <span class="k">in</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">whitespaces</span> <span class="p">)</span>  <span class="p">==</span>  <span class="s">"root"</span>  <span class="p">{</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>

   <span class="c1">// YERİNE</span>
   <span class="kd">let</span>  <span class="nv">username</span>  <span class="p">=</span>  <span class="n">line</span> <span class="p">.</span> <span class="bp">split</span> <span class="p">(</span> <span class="n">separator</span> <span class="p">:</span>  <span class="s">":"</span> <span class="p">)[</span> <span class="mi">0</span> <span class="p">].</span> <span class="n">trimmingCharacters</span> <span class="p">(</span> <span class="k">in</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">whitespaces</span> <span class="p">)</span>
   <span class="k">if</span>  <span class="n">username</span>  <span class="p">==</span>  <span class="s">"root"</span>  <span class="p">{</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h4> <a id="değişkenleri-özetlemek" class="anchor" href="#değişkenleri-özetlemek">¶</a>Değişkenleri Özetlemek</h4> <div class="outline-text-4" id="text-org09dac74">
 <p>
Bir ifadenin açıklamaya ihtiyacı olmasa bile, ifadeyi daha yönetilebilir ve anlaşılır bir isimle temsil eden özet değişkenleri oluşturmak faydalı olabilir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">let</span>  <span class="nv">userOwnsDocument</span>  <span class="p">=</span>  <span class="n">request</span> <span class="p">.</span> <span class="n">user</span> <span class="p">.</span> <span class="n">id</span>  <span class="p">==</span>  <span class="n">document</span> <span class="p">.</span> <span class="n">ownerId</span>
   <span class="k">if</span>  <span class="n">userOwnsDocument</span>  <span class="p">{</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>  <span class="k">else</span>  <span class="p">{</span>
       <span class="c1">// ...</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h4> <a id="gereksiz-değişkenlerden-kurtulmak" class="anchor" href="#gereksiz-değişkenlerden-kurtulmak">¶</a>Gereksiz Değişkenlerden Kurtulmak</h4> <div class="outline-text-4" id="text-org7862aaf">
 <p>
Yukarıdaki başlıklarda “açıklayıcı” veya “özet” değişkenlerin kodu dahaokunabilir hale getirebileceğini gördük. Bu tür değişkenler, devasaifadeleri parçalayarak ve okunabilirliği arttırdığı için faydalıydı.
</p>

 <p>
Ancak bu başlıkta, okunabilirliği artırmayan değişkenleri ortadankaldırmaya odaklanıyoruz. Bu tür bir değişken kaldırıldığında, yeni koddaha kısa ve aynı derecede anlaşılır hale gelir.İhtiyaç duyulmayan ara değişkenleri ortadan kaldırmak, kodun dahaanlaşılır hale gelmesini sağlar.
</p>

 <p>
Örneğin:
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">removeOne</span> <span class="p">(</span> <span class="n">array</span> <span class="p">:</span>  <span class="p">[</span> <span class="nb">Int</span> <span class="p">],</span>  <span class="n">valueToRemove</span> <span class="p">:</span>  <span class="nb">Int</span> <span class="p">)</span>  <span class="p">{</span>
       <span class="kd">var</span>  <span class="nv">indexToRemove</span> <span class="p">:</span>  <span class="nb">Int</span> <span class="p">?</span>  <span class="p">=</span>  <span class="kc">nil</span>
       <span class="k">for</span>  <span class="n">i</span>  <span class="k">in</span>  <span class="mf">0.</span> <span class="p">.<</span> <span class="n">array</span> <span class="p">.</span> <span class="bp">count</span>  <span class="p">{</span>
           <span class="k">if</span>  <span class="n">array</span> <span class="p">[</span> <span class="n">i</span> <span class="p">]</span>  <span class="p">==</span>  <span class="n">valueToRemove</span>  <span class="p">{</span>
               <span class="n">indexToRemove</span>  <span class="p">=</span>  <span class="n">i</span>
               <span class="k">break</span>
           <span class="p">}</span>
       <span class="p">}</span>
       <span class="k">if</span>  <span class="kd">let</span>  <span class="nv">index</span>  <span class="p">=</span>  <span class="n">indexToRemove</span>  <span class="p">{</span>
           <span class="n">array</span> <span class="p">.</span> <span class="n">remove</span> <span class="p">(</span> <span class="n">at</span> <span class="p">:</span>  <span class="n">index</span> <span class="p">)</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
indexToRemove değişkeni sadece ara bir sonucu tutmak için kullanılır. Bu
tür değişkenler bazen hemen elde edildiğinde sonucu ele alarak ortadan
kaldırılabilir:
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">removeOne</span> <span class="p">(</span> <span class="n">array</span> <span class="p">:</span>  <span class="p">[</span> <span class="nb">Int</span> <span class="p">],</span>  <span class="n">valueToRemove</span> <span class="p">:</span>  <span class="nb">Int</span> <span class="p">)</span>  <span class="p">{</span>
       <span class="k">for</span>  <span class="n">i</span>  <span class="k">in</span>  <span class="mf">0.</span> <span class="p">.<</span> <span class="n">array</span> <span class="p">.</span> <span class="bp">count</span>  <span class="p">{</span>
           <span class="k">if</span>  <span class="n">array</span> <span class="p">[</span> <span class="n">i</span> <span class="p">]</span>  <span class="p">==</span>  <span class="n">valueToRemove</span>  <span class="p">{</span>
               <span class="n">array</span> <span class="p">.</span> <span class="n">remove</span> <span class="p">(</span> <span class="n">at</span> <span class="p">:</span>  <span class="n">i</span> <span class="p">)</span>
               <span class="k">return</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Fonksiyon erken dönerek, indexToRemove tamamen ortadan kalktı ve kod
oldukça basitleşti. Genel olarak, işi mümkün olan en kısa sürede
tamamlamak iyi bir stratejidir.
</p>
</div>

 <h4> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h4> <div class="outline-text-4" id="text-org75a5dc2">
 <p>
 <a href="https://www.goodreads.com/en/book/show/8677004">The Art of Readable Code</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/the_art_of_readable_code_2/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/the_art_of_readable_code_2/index.html</guid>
  <pubDate>Sat, 26 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Yeni Android Studio sürümü “Giraffe”</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://www.linkedin.com/in/ozkantuncel">Özkan Tuncel</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgf40e762">
 <p>
Merhabalar! Sizlere yeni Android Studio sürümünde öne çıkan önemli özelliklerini inceleyeceğiz.
</p>


 <div id="orgaa6decf" class="figure">
 <p> <img src="/img/yeni_android_studio_surumu_giraffe_image_1.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Yeni Android Studio sürümü “Giraffe”</p>
</div>

 <p>
Android Studio, sürekli olarak geliştirilmekte ve yeni özellikler eklenmektedir. Bu yazımda, Live Edit iyileştirmelerini, Compose animasyon preview, yeni bir Device Explorer’ı, SDK yükseltme asistanını, Gradle derleme komut dosyalarında Kotlin DSL kullanma yeteneğini ve diğer önemli özellikleri tek tek birlikte bakalım.
</p>

 <p>
Önce benim en çok ilgimi çeken, kod değişikliklerini fiziksel bir cihazda veya emülatörde çalışan Jetpack Compose UI’sini düzenlemenin yeni bir yol sunan Live Edit’ e göz atalım.
</p>
</div>

 <h3> <a id="jetpack-compose-ui-için-liveedit" class="anchor" href="#jetpack-compose-ui-için-liveedit">¶</a>Jetpack Compose UI için Live Edit</h3> <div class="outline-text-3" id="text-org38458d9">

 <div id="orge7c29ca" class="figure">
 <p> <img src="/img/yeni_android_studio_surumu_live_edit.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Live Edit</p>
</div>

 <p>
Emülatörler de ve fiziksel cihazlarda gerçek zamanlı olarak güncellenmenize izin verir. Bu işlevsellik, uygulamanızı yazma ve oluşturma arasındaki bağlam değişimlerini en aza indirir; böylece kod yazmaya daha uzun süre odaklanabilirsiniz. Peki Compose Preview’ den farkları nedir? 🤔
</p>

 <ul class="org-ul"> <li>Compose öğelerini Android Studio’nun Preview sekmesinde görselleştirmenize ve kod değişiklikleri yaparken otomatik olarak yenilenmelerini görmenize olanak tanır. Öte yandan, Live Edit, emülatörlerde ve fiziksel cihazlarda gerçek zamanlı olarak güncellenmenize olanak sağlar.</li>

 <li>Composables’ı düzenleyin ve UI değişikliklerini tekrardan build etmeden görmemizi sağlar Live Edit denemek için AGP 8.1 veya daha yüksek ve Compose 1.3.0 veya daha yüksek sürümünü kullanmanız gerekiyor.</li>
</ul> <p>
Daha fazla bilgiyi  <a href="https://android-developers.googleblog.com/2023/07/deep-dive-into-live-edit-for-jetpack-compose-ui.html">buradan</a> ulaşabilirsiniz.
</p>
</div>

 <h3> <a id="yeni-bir-arayüz-rsquobeta-newuirsquo-geliştiriciler-için-sürekli" class="anchor" href="#yeni-bir-arayüz-rsquobeta-newuirsquo-geliştiriciler-için-sürekli">¶</a>Yeni Bir Arayüz ’Beta New UI’ Geliştiriciler için sürekli</h3> <div class="outline-text-3" id="text-org83177fa">
 <p>
kullandığını bir geliştirme ortamının yenilenmesi bazıları için keyif verici bazıları için ise zor olabiliyor. Android Studio son sürümünde beta olark yeni bir arayüzü kullanıcıları sundu.
</p>


 <div id="org03014f9" class="figure">
 <p> <img src="/img/android_studio_giraffe_beta_ui.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Beta New UI</p>
</div>

 <ul class="org-ul"> <li>IntelliJ arayüzünü tamamen değiştirebileceğinden emin olmak için kullanıcılardan ve diğer IntelliJ tabanlı IDE’lerden geri bildirim toplamak için 2022.2’de erken bir önizleme olarak ilk kez  <a href="https://youtrack.jetbrains.com/issues/IDEA?q=tag:%20newUI%20%20sort%20by:%20votes%20desc">yayınlandı</a>. O zamandan beri, IntelliJ 2022.3’te beta’ya ilerledi, birçok hata düzeltmesi ve iyileştirme yaptı</li>
 <li>Android için varsayılan ana araç çubuğu ve araç pencereleri yapılandırmalarını optimize ederek ve stildeki simgelerde yenilenmeler yapıldı.</li>
 <li>Bu yeni tasarım  <a href="https://developer.android.com/studio/preview">Hedgehog</a> sürümü ve sonrasında benimsemeye devam edeceğini geliştiriciler tarafından söyleniyor.</li>
</ul> <p>
Bu arayüzü uygulamak için şu yolu takip edin:
Android Studio > Settings > Appearance & Behavior>New UI
</p>

 <p>
Kendi görüşlerimi ifade edersem, ben son derece hoş buldum bu yeni arayüzü. Fakat ilk seferinde biraz kayboldum diyebilirim, zamanla buna alışacağız. 😅
</p>
</div>

 <h3> <a id="jetpack-compose-ui-için-yeni-api-animasyon" class="anchor" href="#jetpack-compose-ui-için-yeni-api-animasyon">¶</a>Jetpack Compose UI için Yeni API Animasyon</h3> <div class="outline-text-3" id="text-org547a7e8">
 <p>
Preview Animasyon Preview Android Studio Giraffe’deki başka bir heyecan verici özelliktir.
</p>


 <div id="org20313a7" class="figure">
 <p> <img src="/img/yeni_android_studio_surumu_animation_preview.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>Animation Preview</p>
</div>

 <ul class="org-ul"> <li>Geliştiriciler animasyonları kare kare ön izleyebilir ve istenen davranışa uygun olduklarından emin olabilirler.</li>

 <li>Animasyonları hata ayıklarken, Compose animasyon ön izlemeleri özelliği son derece yararlı olabilir. Geliştiriciler animasyonların doğru şekilde ayarlandığından emin olabilirler.</li>

 <li>Compose animasyon ön izlemeleri özelliği, geliştiricilerin animasyonların istenen davranışa uygun olduklarını doğrulamalarına yardımcı olur.</li>

 <li>Bu uygulamanın genel kullanıcı deneyimini geliştirmeye yardımcı olabilir. Bu özelliği kullanmak için Android Studio Giraffe Canary 3 ve Compose 1.4.0-alpha04 ya da üzeri bir sürüm gerekiyor.</li>
</ul></div>

 <h3> <a id="device-explorer" class="anchor" href="#device-explorer">¶</a>Device Explorer</h3> <div class="outline-text-3" id="text-org83d45a4">
 <p>
Android Studio’nun önceki sürümlerinde bulunan Device File Explorer’nin güncellenmiş bir sürümüdür.
</p>


 <div id="orgfc46a6e" class="figure">
 <p> <img src="/img/device_explorer.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 5: </span>Device Explorer</p>
</div>

 <p>
Hata ayıklayıcıyı bir işleme sonlandırma, zorla durdurma veya ekleme seçenekleri Logcat’ten Aygıt Gezgini’ne taşındı.
</p>
</div>

 <h3> <a id="android-sdk-upgradeasistanı" class="anchor" href="#android-sdk-upgradeasistanı">¶</a>Android SDK Upgrade Asistanı</h3> <div class="outline-text-3" id="text-org1966637">
 <p>
API seviyesini doğrudan IDE’de yükseltmek için gerekli adımları görmenize olanak tanır
</p>


 <div id="orgb840e89" class="figure">
 <p> <img src="/img/upgrade_assistant.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 6: </span>Upgrade Asistanı</p>
</div>

 <p>
Uygulamalarının targetSdkVersion’unu veya uygulamanın hedeflediği API seviyesini yükseltmelerine yardımcı olan bir araçtır.
Kulanmak için Tools > Android SDK Upgrade Assistant > Uyarı: Google Play uygulamaları için 31 Ağustos 2023’ten itibaren, Wear OS uygulamaları dışındaki yeni uygulamalar, Android 13 (API düzeyi 33) veya sonraki sürümleri hedeflemelidir.
Wear OS uygulamaları ise Android 11’i (API düzeyi 30) veya Android 13’e (API düzeyi 33) kadarki sürümleri hedeflemelidir. Daha fazla bilgi  <a href="https://developer.android.com/google/play/requirements/target-sdk">buraya</a> tıklayınız.
</p>
</div>

 <h3> <a id="kotlin-dsl-uygun-şekilde-proje-oluşturma-android-studio" class="anchor" href="#kotlin-dsl-uygun-şekilde-proje-oluşturma-android-studio">¶</a>Kotlin DSL Uygun Şekilde Proje Oluşturma Android Studio</h3> <div class="outline-text-3" id="text-org916d6d1">
 <p>
Giraffe’den itibaren yeni projeler veya modüller oluştururken, varsayılan olarak projeyi Kotlin DSL ile oluşturabileceğiniz.
</p>


 <div id="org3b74a4b" class="figure">
 <p> <img src="/img/kotlin_dsl_settings.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 7: </span>Kotlin DSL Ayarları</p>
</div>

 <p>
Android Studio Giraffe geliştirici deneyimini artırmayı amaçlayan birçok yeni özellik ve iyileştirme ile hayatımıza girdi. Canlı Düzenleme iyileştirmelerinden Compose animasyon preview, yeni Device Explorer’nden SDK yükseltme asistanına kadar pek çok araç mevcuttur; bu araçlar geliştiricilerin Android uygulamalarını oluştururken daha üretken ve verimli olmalarına yardımcı olabilirler. Bu özelliklerin yanı sıra diğer birçok özellik, Android geliştiricileri için heyecan verici bir sürüm haline getirir Android Studio Giraffe’yi.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org825a102">
 <ul class="org-ul"> <li> <a href="https://developer.android.com/studio/releases">Android Releases</a></li>
 <li> <a href="https://android-developers.googleblog.com/2023/07/android-studio-giraffe-is-stable.html">Stable Giraffe Version</a></li>
 <li> <a href="https://www.jetbrains.com/help/idea/new-ui.html">New UI</a></li>
 <li> <a href="https://developer.android.com/studio/run#live-edit">Live Editing</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/yeni_android_studio_surumu_giraffe/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/yeni_android_studio_surumu_giraffe/index.html</guid>
  <pubDate>Sat, 26 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Android Context’i Anlamak : Çarpıcı Başlıklar ve ClickBait</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/betulsandikci">Betül Sandıkçı</a> yazdı.
</p>


 <div id="org6a72644" class="figure">
 <p> <img src="/img/android_contexti_anlamak_cover.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Illustration by  <a href="https://vorlet.com/about">Christophe Vorlet</a></p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org297f482">
 <p>
Merhaba Mobilen okurları, Hepimizin malumu olduğu üzere, çağımız  <code>içerik</code> çağı. Gün boyu çokça ulaşılabilir içeriğe maruz kalıyoruz, içerikten içeriğe sürükleniyoruz, hayatımızı şekillendirmelerine izin veriyoruz. Artık her birimiz  <i> <b>profesyonel içerik tüketicileriyiz</b></i>. Bu seviyeye kolay gelmedik elbette. Çokça zaman harcayarak, sonsuz aşağı kaydırmalarla, odaklarımızı ve irademizi feda ederek geldik. İşin profesyonelleri olarak sonsuza yakın seçenek arasından nasıl karar veriyoruz neyi tüketip tüketmeyeceğimize?
</p>

 <p>
Soru biraz ironik elbette. Sonsuz kaydırma esnasında gerçek ve bilinçli bir karar verebiliyor muyuz emin değilim. Emin olmadığım konu ehlileştiremediğimiz merakımız. Çünkü bu kuvvetli ve itici duygu bizi yönlendirmelere açık hale getirebiliyor. Bu kadar çok seçenek arasında da merakımızı en çok çekebileni tüketmeye karar veriyoruz elbette. İlk gözümüze çarpan şey çoğunlukla içeriğin başlığı. Görsel içeriklerde ise başlık artı kapak resmi denilebilir belki. Ama yine de çarpıcı bir başlık kapak resminin önüne geçiyor çoğunlukla. Başlık bizi anında kavrarsa ve merakımızı celbederse o içeriğe bir göz atmak istiyoruz.
</p>
</div>

 <h4> <a id="çarpıcı-başlıklar" class="anchor" href="#çarpıcı-başlıklar">¶</a>Çarpıcı Başlıklar</h4> <div class="outline-text-4" id="text-org8344fbc">
 <p>
Çarpıcı başlıklar merakımızı gıdıklıyor. İddialı o birkaç kelimenin arkasındaki hikayeyi merak ediyoruz. Dürtüsel olarak oraya çekiliyoruz. Çünkü merak duygumuzun tatmin olmasına ihtiyacımız var. Bazen içeriğe tıklayıp tüketmeye başlayınca başlık ile içeriğin örtüşmediğini anlıyoruz. Sırf içerik öne çıksın, kulanıcılar içeriğe tıklasın diye içerikten bağımsız atılan başlıkların neticesi bu durum. Eğer tatmin olmazsak kandırılmış hissediyoruz. Hissedene kadar elbette birkaç saniye geçiyor. Çünkü başlık ile içeriğin alakasını anlamamız gerekiyor. Konuyu anlamak ve bağlantıyı kurmak istiyoruz. Bağlantıyı kuramayınca ve bir de beğenmediysek saliseler içinde o içerikten hemencik başkasına geçiyoruz. Bu kararımızın ardındaki motivasyonu derinlemesine düşünmüyoruz elbette. Sadece içgüdüsel olarak kendimizi oltaya takılan balık gibi hissedince orayı terketmeyi seçiyoruz.
</p>
</div>

 <h4> <a id="clickbait" class="anchor" href="#clickbait">¶</a>Clickbait</h4> <div class="outline-text-4" id="text-orgb3fc795">
 <p>
Bahsettiğim tüm bu süreç yani bir içeriğin clickbait olup olmadığını anlama süreci içeriğin içine girmeden ve biraz vakit geçirmeden kesin olarak anlaşılabilecek bir şey değil elbette. Kandırıldığımızı anlayabilmek için bile saniyeler yahut dakikalar harcamamız lazım. Çünkü içeriğin konusu ile başlık arasındaki bağlantıyı kurmaya ihtiyacımız var. Alakayı anlamak istiyoruz. Başlığın ardındaki motivasyonu, hikayeyi. Çünkü ancak merak duygumuz öyle ehlileşebiliyor. Hikayenin başı sonu belli olduğu zaman da içeriğe devam edip etmemeye dair kararımızı veriyoruz.
</p>
</div>

 <h4> <a id="bağlama-gelirsek-nedir-ne-değildir-" class="anchor" href="#bağlama-gelirsek-nedir-ne-değildir-">¶</a>Bağlama gelirsek, nedir ne değildir ?</h4> <div class="outline-text-4" id="text-org9821283">
 <p>
Karar verebilmek, anlayabilmek için =bağlam=a yani context’e ihtiyacımız var. Kelimelerin salt kendi anlamlarının ötesinde kullanıldıkları cümleye göre anlam kazanması gibi. Herkesin başına gelen gündelik örnek; herhangi bir yazılı şey okuyan birisi bilmediğimiz ya da doğrudan anlamını söyleyemeyeceğimiz bir kelimenin anlamını sorduğunda kelimenin içinde bulunduğu cümleyi sormamız gibi. Çünkü kelimeyi bilmesek bile cümleden kelimenin anlamını çıkarabiliriz. Sadece cümle de yeterli olmuyorsa cümlenin içinde bulunduğu paragrafa göz atmak isteyebiliriz. Bağlantıyı kurmak çıkarım yapmamızı sağlıyor. Çıkarımlarımız da karar vermemizi.
</p>

 <p>
Özetle bağlam, varolan her bir şeyin ait olduğu bütünün parçası olarak ait olduğu yere, zamana, fiziksel-sosyal çevresine, vs bağlı olarak ona farklı anlamlar kazadıran değerler bütünüdür.
</p>

 <p>
Bağlam değerler bütünü olarak soyut bir kavram elbette. İçinde bulunduğumuz dünyayı anlamlandırmak için bize gereken  <code>arayüzü</code> sağlayarak bu dünyayı somutlaştırıyor. Kelimeler cümle içinde kullanıldığı zaman bir şeyi kastedebiliyor örneğin. Cümleler birleşince ve bağlantı halinde olunca yazılar oluşuyor. Birkaç kişi bir araya gelince topluluk aynı birkaç kişi aynı soyadı taşıyıp, kan bağları olunca aile deniyor mesela. Bu değişkenliği ve  <code>duruma, ortama</code> göre anlam kazanmayı hatta etiketlenmeyi sağlayan şey bize sunulan arayüz. Kalabalık için herhangi bir insan olmanın yeterli olması öte yandan aile denilmesi için insan olmaktan başka şeylere de ihtiyaç duyulması gibi. Ait olunan çerçeve her şeyiyle bize bağlamı sunuyor. Bağlamı tutarlı yapan da bu çerçeveyi oluşturan kural setleri.
</p>

 <p>
Bağlam konusunu tümden gelimden değil tüme varımdan anlatalım. Yani konuya tam tersi istikametten yaklaşalım. Az sayılmayacak insanlardan oluşan bir topluluk aynı yerde ve zamanda bir arada bulunuyor. Tek tek sayılamayacak ya da sayılması uzun sürecekse bunu anlatmak için kalabalık çerçevesi çiziliyor. Yani herkesin insan olması, sayılamayacak kadar çok olması gibi tekil nedenler kalabalık kelimesi ile soyutlanıyor. Bu soyutlama da bir bağlam oluşturuyor. O insan topluluğuna anlam kazandırıyor.
</p>
</div>

 <h4> <a id="bağlam-bağlam-içinde" class="anchor" href="#bağlam-bağlam-içinde">¶</a>Bağlam bağlam içinde</h4> <div class="outline-text-4" id="text-org1db55f0">
 <p>
Bağlamlar başka bağlamlarla hiyerarşi içindedir. Kalabalık örneğinde olduğu gibi. Kalabalığın daha da iyi anlaşılması için neden bu kadar insanın toplandığı yani amaçları, nerede ve ne zaman toplanıldığı gibi sorular sorulur. Normal bir sohbet esnasında falanca bir yere gittim kalabalıktı denirse elbette bu detaylara ihtiyaç olmayabilir. Ama mesela bu bir polis soruşturmasıysa bunun gibi bir sürü detaya inen sorular çok önemli olacaktır. Yani her bağlam kendi içinde başka küçük bağlamları barındırır.
</p>

 <p>
İletişimizi sağlayan şeyler de yine bağlamlardır. Öylesine konuştuğumuz tutarsız şeyler için bile  <i>havadan sudan</i> deriz. Çünkü bir başkası gelip ne hakkında konuştuğumuzu sorduğunda ona anlatabilmenin başka yolu yoktur.  <i>Hiiiiiiiiiiiççççç</i> demek de bir cevap olabilir belki ama bu da bağlamı oluşturmadığı için soran kişinin merakını körükleyecek ve anlamak için belki de detaya inen sorular sormasına sebep olacaktır. Çünkü merakı depreşmiştir bir kez. Halbuki  <i>havadan sudan</i> cevabı geçerliliği olan ve bir konu olmadan öylesine boş boş konuşuyoruz demenin soyutlamasıdır. Bu cevabı alan kişi  <i>hiiiiiiiiçççç</i> cevabını alan kişiden daha çok anlama sahip olacaktır.
</p>

 <blockquote>
 <p>
Without context, words and actions have no meaning at all.
</p>

 <p>
Bağlam olmadan, kelimelerin ve eylemlerin hiçbir anlamı yoktur.
</p>

 <p>
—  <a href="https://en.wikipedia.org/wiki/Gregory_Bateson">Antropolog Gregory Bateson</a>
</p>
</blockquote>
</div>

 <h4> <a id="android-için-context" class="anchor" href="#android-için-context">¶</a>Android için Context</h4> <div class="outline-text-4" id="text-orgefa7dc3">
 <p>
Androidde Context anlamca yukarıda bahsedilen bağlamdan farklı değildir. Android sisteminde kullanılan componentları bir çerçeveye oturtmak ve anlam kazandırmak için vardır. Tutarlılığı sağlar. Androidde temel şeyleri yapabilmek için gereklidir.Ancak bu kavramı Android’e yeni başlayanlar genellikle anlamazlar. Hatta biraz deneyimliler bile tam olarak context’in ne olduğu ve neden kullanıldığı konusunu yeterince bilmezler.  <code>Application (uygulama)</code> olarak bildiğimiz sınıfın çerçevesini yani onu oluşturan, onun veya Android sisteminin kaynaklarına erişilmesini ve ona ait bilgileri ihtiyacı olan yerlere sağlayan  <code>arayüzdür</code> Context. Context arayüzü bilgileri Android sisteminden alır. Özetle uygulamanın ya da activity’nin yeteneklerini, kaynaklarını ve bilgilerini soyutlayan sınıftır. Uygulama kapsamını belirler.
</p>

 <p>
Context arayüz olarak Android sistemi ve uygulama arasında köprü görevi görür. Diğer bir deyişle Android sisteminin uygulama ile konuşma yoludur. İletişimi sağlar.  <code>String resource, color resource</code> gibi uygulamaya ait herhangi bir resource’a erişebilmeyi,  <code>activity'den activity'e navigasyonu</code>,  <code>toast mesajı göstermeyi</code>,  <code>yeni bir activity</code> oluşturmayı,  <code>xml view</code>’lerini oluşturmayı. Jetpack Compose ile birlikte bu durum değişti. UI’ın işletim sisteminden bağımsız çizilmesini sağladı bu durum. Detaylar için  <a href="https://medium.com/androiddevelopers/understanding-jetpack-compose-part-1-of-2-ca316fe39050">understanding jetpack compose</a>’a göz atabilirsiniz.
</p>
</div>

 <h4> <a id="contextrsquoi-kim-nasıl-implement-ediyor" class="anchor" href="#contextrsquoi-kim-nasıl-implement-ediyor">¶</a>Context’i kim nasıl implement ediyor?</h4> <div class="outline-text-4" id="text-org648a600">
 <p>
Elbette insani olarak uygulama contextini yani bir uygulamanın kapsamını, bağlamını biz insanlar kolaylıkla algılayabiliyoruz. Ancak bunu işletim sistemi nasıl yapıyor, Context’i nasıl belirliyor ? Bu sorunun cevabı için biraz detaya inmek lazım.
</p>

 <p>
 <code>AMS (Activity Manager System)</code> denilen Android işletim sistemi tarafından yönetilen sistem süreci çalışan Activitylerin ve diğer componentların  <code>state'lerini (t anındaki durumları)</code> oluşturur. Uygulama başlatıldığında AMS uygulama ile iletişime geçer. Uygulama izinlerini ve uygulamanın ihtiyacı olabilecek başka contextleri de hesaba katarak ve kontrolü elinde tutarak Contexti oluşturur.
</p>
</div>

 <h4> <a id="neden-bu-kadar-çok-context-var-" class="anchor" href="#neden-bu-kadar-çok-context-var-">¶</a>Neden bu kadar çok context var ?</h4> <div class="outline-text-4" id="text-orgc3da891">
 <p>
Context sınıfını yakından incelediğimizde birden fazla context olduğunu görürüz. Context context içindedir. Bu durum kafa karışıklığına neden olur. Hangi contexti kullanacağımızı bilemeyebiliriz. Contextlerin doğru yerde ve şekilde kullanılması oluşabilecek büyük problemlerin önüne geçer. Bu sebeple context çeşitlerini ve nerelerde kullanılması gerektiğini bilmek Android geliştiriciler için oldukça önemlidir.
</p>


 <div id="orgcad3c30" class="figure">
 <p> <img src="/img/context_hierarchy.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Context Hierarchy</p>
</div>

 <p>
Diagramdan görüleceği üzere  <b>Activity</b>,  <b>Service</b> ve  <b>Application</b> dolaylı olarak Contexti implement ederler. Hiyerarşi ağacının tepesinden başlayarak aşağılara doğru inersek:
</p>

 <ul class="org-ul"> <li> <code>Contex</code>: En tepededir. Bizim interface yani  <code>arayüz</code> sınıfımızdır.  <b>Uygulama bağlamını soyutlar</b>.</li>
 <li> <code>ContextImpl</code>: Contexte ait soyut tüm fonksiyonların implement edildiği sınıftır. Soyut context fonksiyonları  <b>AMS tarafından</b> burada imlement edilir.</li>
 <li> <code>ContextWrapper</code>: Context’ten türer. Ancak implement etmez. Contexte ait tüm fonksiyonları sarmalar ve implementasyonlarını da ContextImpl’dan alır. Bunu yaparken de  <b>decorator pattern</b> kullanır. bkz.  <a href="https://medium.com/@denisrebrof/decorator-pattern-in-android-development-5dd1637710fa">Decorator pattern in Android.</a> Bu pattern ile contextin sadece bir kez attach olmasını sağlayan bir davranış kazanır. Bir uygulama tek bir  <b>bağlamın yani contextin</b> içindedir tutarlılığını sağlar.</li>
 <li> <code>ContextThemeWrapper</code>: Context içindeki context diyebiliriz.  <b>Theme</b> denilen ve  <b>Android manifest</b> dosyasında belirtilen uygulama içindeki activitylerin temasını UI’da uygulayan classdır. Theme bir activity için bağlamın bir parçasıdır. O yüzden uygulama bağlamının kapsamı içinde; temaya sahip olma özelliği de bulunan bir  <b>alt bağlamdır</b>.</li>
 <li> <b>Application ve Service</b> her ikisi de UI’a ihtiyaçları olmadığı için doğrudan context’i ContextWrapper yardımı ile alabilirler.</li>
</ul> <p>
Temelde farklı contextlerin olması tema olup olmamasına yani UI içerip içermemesine bağlıdır denilebilir. Ancak bundan da öte bu farklılıkta mimari seçiminin etkisi vardır. Bu seçim beraberinde problemler de getirmiştir. Özellikle Context sınıfının alt sınıflarının  <b>farklı scope</b>’da olmasından ötürü. Çünkü activity ve application sınıfları farklı scopedadırlar. Detay için bkz.  <a href="https://www.youtube.com/watch?v=S22NlX4iXJU&t=611s">Context in Android - A Deep Dive Video</a>
</p>
</div>

 <h4> <a id="context-çeşitleri" class="anchor" href="#context-çeşitleri">¶</a>Context Çeşitleri</h4> <div class="outline-text-4" id="text-org91686f3">
 <p>
 <code>ApplicationContext</code> :  <b>Global</b> contextir. Yani uygulamanın kapsamı hakkındaki  <b>tüm bilgilere</b> bu context aracılığı ile erişiriz.  <b>Uygulama scopuna</b> bağlıdır.Yani uygulama hayatta olduğu sürece vardır. Uygulama içinde bu contexte 2 şekilde erişebiliriz.  <code>context.getApplicationContext()</code> ve/ya  <code>activity.getApplication()</code>. İkisinin biribirinden farkı yoktur, aynı şekilde ve aynı niyet ile kullanılabilirler. ApplicationContext ile yapılabilecekler listesine örnek olarak:
</p>

 <ul class="org-ul"> <li>Load Resource Values,</li>
 <li>Start a Service,</li>
 <li>Bind to a Service,</li>
 <li>Send a Broadcast,</li>
 <li>Register BroadcastReceiver</li>
</ul> <p>
 <code>ActivityContext</code>:  <b>temaya sahip context</b>’tir diyebiliriz kendileri için. Application contexte dahildir ve herşeyine erişir ek olarak UI’a tema verilmesini sağlar. Activity scopuna bağlıdır. Activity içinden  <code>getContext()</code> ve/ya  <code>this</code> ile erişilir.  <b>Activity hayatta olduğu sürece vardır</b>. Yani activity ölünce bu context de ölür. Genellikle UI ile alakalı context gereken işlerde kullanılır. Bu context ile yapılabilecek şeylere örnek olarak:
</p>

 <ul class="org-ul"> <li>Load Resource Values,</li>
 <li>Layout Inflation,</li>
 <li>Start an Activity,</li>
 <li>Show a Dialog,</li>
 <li>Start a Service,</li>
 <li>Bind to a Service,</li>
 <li>Send a Broadcast,</li>
 <li>Register BroadcastReceiver</li>
</ul> <p>
Farkedildiği üzere ApplicationContextin yapabildiği şeylere ek olarak UI ile alakalı işlemleri yapabiliyor.
</p>

 <p>
 <code>ServiceContext</code>: service sınıfı için kullanılan contextir. Arka planda süren veri indirme yahut müzik oynatma gibi işlemleri yapmak için gerekir. Service öldüğünde context’de ölür.
</p>

 <p>
 <code>BaseContext</code>: ContextWrapper sınıfı için vardır denilebilir. Yukarıda detaylıca bahsedilen hiyerarşide kullanılır. Kısaca, ContextImp’da AMS tarafından imlement edilen context instance’ını ContextWrapper sınıfı bu fonksiyon ile alır ve gerekirse davranış değişikliği yapabilir. Bu fonksiyon uygulama genelinde  <code>getBaseContext()</code> ile erişilebilir olsa da temelde kullanılmasının gereği ya da anlamı yoktur.
</p>
</div>

 <h4> <a id="contextin-maaliyeti" class="anchor" href="#contextin-maaliyeti">¶</a>Contextin Maaliyeti</h4> <div class="outline-text-4" id="text-org4e201d0">
 <p>
Yukarıda birkaç kez bahsedildiği gibi farklı  <b>contextler</b> farklı  <b>scope’lar</b> da çalışırlar. Hatalı kullanımında kolayca  <b>memory leak</b>’e sebep olabilirler. Bu da uygulamanın crash etmesi, gerektiği şekilde çalışmaması gibi üzücü sonuçlara neden olur. Örneğin, ActivityContexti kendi yaşam sürecinden daha uzun yaşayan bir objeye verildi. Activity öldüğünde yaratılan obje yaşamaya devam edeceği için geçirilen ActivityContexti  <code>garbage collector</code> temizlemeyecektir. Bu da memory leak’e sebep olacaktır.
</p>
</div>

 <h4> <a id="contextrsquoe-karar-vermek" class="anchor" href="#contextrsquoe-karar-vermek">¶</a>Context’e Karar Vermek</h4> <div class="outline-text-4" id="text-org4b2ede0">
 <p>
Hangi contexti nerede kullanacağımıza devamındaki kriterlere göre karar verebiliriz.
</p>

 <ul class="org-ul"> <li>ActivityContext yerine ApplicationContext geçirmek UI da bazı gösterim sorunlarına yol açacaktır. Özellikle tema bazlı kaynaklara erişim olmadığı için onlar gösterilmeyecektir. Örneğin, LayoutInflater kullanıyoruz, kod içinde temayı da atıyoruz ancak bir türlü tema UI’da uygulanmıyor. Bunun nedeni çok yüksek ihtimal ActivityContext yerine ApplicationContext geçirmemizdir.</li>

 <li>ActivityContext yalnıca UI ile ilgili context gerektiren işlemlerde ve activity sonlanınca sonlanmasını istediğimiz şeylerde kullanılabilir. Aksi takdirde memory leake sebep olacaktır. En yaygın yanlış kullanım Viewmodel classlarına ActivityContext geçirmektir. Bundan kaçınmak gerekir.</li>

 <li>ApplicationContext UI ile alakalı işlemler dışındaki her şeyi yapabilir. Güvenli ve banko context’imizdir kendisi. Eğer uygulama içinde nerede olursak olalım hangi context’i kullanacağımızdan emin olamıyorsak ApplicationContext kullanmak en güvenli yoldur.</li>

 <li>Singleton’larda activityContext geçirmek memory leak’e sebep olur. Onun yerine ApplicationContext kullanılmalıdır.</li>

 <li>BaseContext sadece kodda erişebildiğimiz ama kullanmamız gerekmeyen fonksiyondur. Kendisine günlük yaşamımızda lüzum yok. Gerek olmayan şeye neden erişebildiğimiz ayrı bir yazı ve sohbet konusudur. Çok kısaca bunun nedeni yukarıda çok minik bahsedilen Context hiyerarşisinin mimari seçiminden kaynaklıdır.</li>
</ul></div>

 <h4> <a id="son-olarak" class="anchor" href="#son-olarak">¶</a>Son Olarak</h4> <div class="outline-text-4" id="text-org8891064">
 <p>
Uygulamaların kapsamını belirleyen Android Context’i doğru anlamak ve doğru şekilde kullanmak stabil ve verimli uygulamalar geliştirebilmenin mihenk taşıdır. Contextin yanlış kullanımı ve/ya yönetimi kolaylıkla memory leak’e neden olur. En iyi ihtimalle kullanıcı deneyimi etkilenir ve uygulamanın kullanılamamasına kadar giden yolu açar. Unutmayın ActivityContext sadece activity yaşam döngüsü içinde ve UI’da gösterilecek şeyler için. Onun dışında kalan her şeyde ApplicationContext kullanılmalı.
</p>

 <p>
Umarım bu yazı ile genel olarak context nedir, Android bağlamında context nedir ve nasıl kullanılmalıdır konuları netliğe kavuşur. Geliştiricileri aydınlatarak daha performanslı, kullanıcı deneyimi yüksek, stabil ve güvenilir uygulamalar geliştirmeye yardımcı olur. Unutmayın arada kalıyorsak ve hangi contexti kullanacağımızdan emin değilsek  <b>ApplicationContext</b> kullanıyoruz. ;)
</p>

 <p>
Huzur, sağlık, mutluluk içeren hayat bağlamında kalın. Selametle.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org0e0c037">
 <ul class="org-ul"> <li> <a href="https://medium.com/@banmarkovic/what-is-context-in-android-and-which-one-should-you-use-e1a8c6529652">What is context in android and which one should you use?</a></li>
 <li> <a href="https://medium.com/@ali.muzaffar/which-context-should-i-use-in-android-e3133d00772c">Which context should i use in android?</a></li>
 <li> <a href="https://www.youtube.com/watch?v=JzewiQixgRI">What does context mean in Android Studio?</a></li>
 <li> <a href="https://files.eric.ed.gov/fulltext/EJ1200789.pdf">Context kavramını derinlemesine inceleyen akademik makale</a></li>
 <li> <a href="https://www.freecodecamp.org/news/mastering-android-context-7055c8478a22/">Mastering android context</a></li>
 <li> <a href="https://vtsen.hashnode.dev/android-context-101-with-class-diagram">Android Context Class Diagram</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/android_contexti_anlamak/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/android_contexti_anlamak/index.html</guid>
  <pubDate>Fri, 25 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Android’de Neden Bir Main Function Yok ?</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/sevban-bayir">Sevban Bayır</a> yazdı.
</p>


 <div id="org444433f" class="figure">
 <p> <img src="/img/android_cover.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Android</p>
</div>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgf677fdb">
 <p>
Başlamadan önce, aslında var ama alışık olduğumuz gibi değil :),  <a href="https://android.googlesource.com/platform/frameworks/base.git/+/master/core/java/com/android/internal/os/ZygoteInit.java#798">buradan</a> kaynak kodlarına bakabilirsiniz.
</p>

 <p>
Android Java dilini kullanır fakat onu standart Java uygulamarının çalıştığı standart JVM üzerinde değil de kendi özel runtime ortamı olan Android 5.0’ a kadar Dalvik Virtual Machine, 5.0’dan sonra ise Android Runtime üzerinde çalıştırır. Bu özelleştirilmiş runtime ortamları program başlarken bir main() fonksiyonu yerine, AndroidManifest.xml dosyasında Launcher olarak işaretlenmiş bir Activity’i ve onun onCreate() methodunu aramak üzere tasarlanmıştır dolayısıyla bir main fonksiyonuna ihtiyaç yoktur.
</p>

 <p>
Çoğumuz programlamayı ilk öğrendiğimizde genelde öğrendiğimiz yazılım dilinden bağımsız bir şekilde kodlarımızı IDE ilk açıldığında karşımıza çıkan o fonksiyona, main, fonksiyonuna yazarız. O ya da bu şekilde öğreniriz ki burası çalıştığımız dilin giriş noktasıdır. Kendimiz main fonksiyonundan ayrı fonksiyonlar oluştursak da o fonksiyonları main fonksiyonu içerisinden çağırmadığımız sürece hiçbir anlamları olmaz, çalışmazlar. Android geliştirmeye gelince işler biraz karışır. İlk kez bir Android projesi oluşturan bir kişi MainActivity classıyla ve onun onCreate() methoduyla karşılaşır. İçerisindeki setContent() methodundan ipucu alarak da anlayabileceğimiz üzere Activity ve onun onCreate methodu standart olarak alıştığımız main fonksiyon gibi çalışırlar. Android uygulamalarının ve hatta komple Android işletim sisteminin entry point( giriş noktası) olarak Activity’leri seçmesinin belli başlı nedenleri var elbet ve ben bunları size Android ilk yazılırkenki olayları çok geniş ve anlaşılır bir biçimde aktaran  <a href="https://www.amazon.com/Androids-Built-Android-Operating-System/dp/B0B6YDQJW2/ref=tmm_aud_swatch_0?_encoding=UTF8&qid=&sr=">Androids - The Team That Built Android Operating System</a> kitabından alıntılar da yaparak anlatmaya çalışacağım.
</p>

 <blockquote>
 <p>
“Daha geleneksel bir işletim sisteminde; bir uygulama başlar, main() methodunu çağırır, sonrasında yapması gerekenleri(UI çizmek, gerekli hesaplamaları yapmak, çevre bileşenlerini kontrol etmek vs.) bir döngü içerisinde yapmaya başlar fakat Android’de uygulamalar main fonksiyonlar yerine herbiri kendisine ait bir UI’a sahip olan bir yada daha fazla Activity’lere ayrılırlar, bunların açık bir şekilde main fonksiyonları yoktur bunun yerine işletim sistemi Activity’leri; kullanıcı girdisi veya dolaylı yoldan kullanıcı girdilerine cevap olarak çağırır.”
</p>
</blockquote>

 <p>
İlk nedenimiz son cümlede gizli aslında. İşletim sistemi Activity’leri çağırır derken aslında kullanıcı girdisine karşılık gelen lifecycle methodlarından bahsediyoruz. Android’in geleneksel işletim sistemleri gibi basit bir main fonksiyon üzerinden yürümemesinin sebeplerinden biri uygulamanın lifecycle’ını yönetebilmektir. Activity’ler olmasa uygulamanın lifecycle’ını yönetemez miydik ? Elbette yönetebilirdik fakat tüm bunlar yazılımcıya bırakılmış olur ve hataya dolaylı yoldan da çökmeler ve memory leaklere yol açabilirdi. Üstelik karmaşık uygulamalarda lifecycle’ı manuel yönetmek iyice kontrolden çıkabilir ve bu kısım için neredeyse app’in kendisi kadar efor harcanması gerekebilirdi.
</p>

 <blockquote>
 <p>
“Activity’lerin diğer bir önemli özelliği uygulamaya özel belirli bir giriş noktası sunmalarıdır. Bu giriş noktaları diğer uygulamalardan (bildirimler, kısayollar, veya tamamen farklı bir uygulama) çağırılabilir ve kullanıcıyı o uygulama içerisine almaya yarar.”
</p>

 <p>
— Chat Haase
</p>
</blockquote>
</div>

 <h3> <a id="intentler" class="anchor" href="#intentler">¶</a>Intentler</h3> <div class="outline-text-3" id="text-org8f48d85">
 <p>
Android’le ilgileniyorsanız mutlak surette karşılaşacağınız bir kavram da Intentlerdir. Bu alıntıda  <code>Chat Haase</code> Intentlerin öneminden bahsediyor. Intentler sayesinde uygulamalar arasında haberleşebiliyoruz. Eğer bu sistem olmasaydı, linux ve diğer UNIX-like sistemlerde normalde kullanıldığı gibi processler arası iletişimi kendimiz sağlamak zorunda kalabilirdik. Mesela, basit bir string göndermek için bitwise operatörlerle o stringi byte byte göndermek zorunda kalabilirdik. Elbette Activity’ler ve Intentler yok diye bu kadar ilkel bir çözüme mecbur kalmayacağız ama buradan işlerin ne kadar low-level’a gidebileceğini ve hataya açıklaştığını, güvensiz olduğunu anlayabiliriz. Android bunun yerine  <a href="https://developer.android.com/reference/android/os/Binder">Binder</a> denen bir IPC (Inter Process Communication) kullanıyor ve Binder aslında Intent’lerin low level versiyonu. Gönderilecek objelerin sadece referanslarını göndrerek daha verimli bir iletişim sağlıyor.
</p>
</div>

 <h3> <a id="palm-osrsquoten-esinlenmeler" class="anchor" href="#palm-osrsquoten-esinlenmeler">¶</a>Palm OS’ten esinlenmeler</h3> <div class="outline-text-3" id="text-org93ffb55">
 <p>
Android frameworkünün yaratıcılarından, Dianne Hackborne’dan:
</p>

 <blockquote>
 <p>
“Palm OS mobil cihazlarla ilgili iyi bir anlayışa sahipti, oradan aldığımız derslerden biri de mobil uygulamarın masaüstü uygulamardan temelde farklı olduklarıydı. Kullanıcı aynı anda sadece bir uygulamada bulunabilir ve bu uygulamalar genelde spesifik bir iş yapmak için özelleşmiş olma eğilimindedirler. Bu durum uygulamarın birlikte çalışabilmesi ihtiyacını doğurur.”
</p>

 <p>
—Dianne Hackborne
</p>
</blockquote>

 <p>
Palm OS, çoğu Android mühendisinin Android ortaya çıkmadan önce çalıştığı projeydi. Android’deki birçok kişi önceden yine işletim sistemi işinde olan Be ve Palm OS’te çalışmıştı ve bu sayede mobil işletim sistemleri hakkında kümülatif tecrübe sahibiydiler.
</p>
</div>

 <h3> <a id="özet" class="anchor" href="#özet">¶</a>Özet</h3> <div class="outline-text-3" id="text-org28643b6">
 <p>
Yazımın başında da bahsettiğim üzere Activity’ler Android uygulamarının giriş noktalarıdır ve sıradan bir main() fonksiyona göre çok daha gelişmiş bir giriş noktası mekanizması sunarlar. Bu sayede uygulamamızın diğer uygulamalarla ve işletim sisteminin kendisiyle etkileşimi daha efektif bir hal almış olur. Her ne kadar şu an genel mimari Single Activity tarzına dönmüşse de ortaya çıktığı dönem göz önüne alındığında Activity’ler ile bir uygulama için birden fazla entry point sunma fikri şu an Androidin gelebildiği nokta itibarıyla kendi kendini kanıtlamış bir kehanet örneği diyebiliriz :).
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça:</h3> <div class="outline-text-3" id="text-orgf17abc2">
 <ul class="org-ul"> <li> <a href="https://stackoverflow.com/questions/9293329/where-is-main-in-android/9293488#9293488">Where is main?</a></li>
 <li> <a href="https://www.vogella.com/tutorials/AndroidInternals/article.html#internals">Android Internals about Main Function</a></li>
 <li> <a href="https://android.googlesource.com/platform/frameworks/base.git/+/master/core/java/com/android/internal/os/ZygoteInit.java#798">Zygote Init</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/android_de_neden_main_function_yok/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/android_de_neden_main_function_yok/index.html</guid>
  <pubDate>Fri, 25 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Flutter 3.13 ile Gelen Yenilikler</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/mehmetguvenn">Mehmet Güven</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgfaa4f37">

 <div id="orga204014" class="figure">
 <p> <img src="/img/flutter_3_13.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Flutter 3.13</p>
</div>

 <p>
Flutter 3.13 ile birlikte, pek çok yeni özellik ve geliştirme sunuldu. Bu yazımızda, Flutter 3.13 ile gelen başlıca özellikleri kısaca özetleyeceğiz.
</p>

 <p>
Detaylı bilgi için  <a href="https://docs.flutter.dev/release/release-notes/release-notes-3.13.0">Flutter 3.13.0 sürüm notlarını</a> inceleyebilirsiniz.
</p>
</div>

 <h3> <a id="impeller-yeni-nesil-grafik-i̇şleyici-ve-motor-geliştirmeleri" class="anchor" href="#impeller-yeni-nesil-grafik-i̇şleyici-ve-motor-geliştirmeleri">¶</a>Impeller: Yeni Nesil Grafik İşleyici ve Motor Geliştirmeleri</h3> <div class="outline-text-3" id="text-orga020c39">
 <p>
Impeller, katlanabilir cihazlar için tasarlanmış yeni bir grafik işleyici ve motorun adıdır. Bu yeni gelişmeler, Impeller’ın getirdiği önemli iyileştirmeleri ve özellikleri içeriyor. İşte Impeller hakkındaki ana noktalar:
</p>
</div>

 <h4> <a id="ios-performans-i̇yileştirmeleri" class="anchor" href="#ios-performans-i̇yileştirmeleri">¶</a>iOS Performans İyileştirmeleri:</h4> <div class="outline-text-4" id="text-orge36b872">
 <p>
Flutter kullanıcılarından gelen geri bildirimlere dayanarak, Impeller ekibi iOS platformunda performans iyileştirmeleri yaptı. Bu iyileştirmeler, Impeller’ın iOS üzerindeki performansını artırmayı hedefliyor. Gecikme süresini azaltmanın yanı sıra, derleme sorunlarını ortadan kaldırarak daha düşük gecikme süreleri elde edilmiştir. Aynı zamanda, kıyaslamalara göre daha yüksek ortalama verim sağlanmıştır. Flutter/galeri geçişleri performansında da Skia ile kıyaslandığında ortalama kare rasterleştirme sürelerinde belirgin bir iyileşme sağlanmıştır.
</p>

 <p>
Bu iyileştirmeler, çeşitli optimizasyonlarla elde edilmiştir. Kirli bölge yönetimi ve kısmi yeniden boyama gibi teknikler kullanılarak performans artırılmıştır. Aynı zamanda metin oluşturma süreçleri iyileştirilmiş, dışbükey şekiller için hızlı bir yol eklenmiş, hesaplama gölgelendiricileri kullanılmaya başlanmış ve çizim işlemleri daha etkin hale getirilmiştir.
</p>
</div>

 <h4> <a id="gamut-renk-desteği" class="anchor" href="#gamut-renk-desteği">¶</a>Gamut Renk Desteği:</h4> <div class="outline-text-4" id="text-org7605b84">
 <p>
Impeller’ın 3.10 sürümüyle birlikte geniş gamut renklerinin kullanımı desteklenmiştir. Kullanıcılardan gelen geri bildirimler sonrasında, Impeller kullanılırken iOS platformunda geniş gamut renkler varsayılan olarak kullanılıyor.
</p>
</div>

 <h4> <a id="android-i̇lerlemesi" class="anchor" href="#android-i̇lerlemesi">¶</a>Android İlerlemesi:</h4> <div class="outline-text-4" id="text-orgb699967">
 <p>
Android platformunda da Impeller geliştirmeleri devam etmektedir. Vulkan arka ucunda kaydedilen ilerlemeye rağmen, henüz resmi bir önizleme dönemine geçilecek kalite seviyesine ulaşılmamıştır. Android’de Impeller’ın yüksek kaliteli bir deneyim sunması hedeflenmektedir. Impeller’ın OpenGL ve Vulkan arka uçları, Impeller’ın HAL’ındaki optimizasyonlardan yararlanarak performans iyileştirmeleri sağlamıştır.
</p>
</div>

 <h4> <a id="macos-üzerinde-impeller" class="anchor" href="#macos-üzerinde-impeller">¶</a>macOS Üzerinde Impeller:</h4> <div class="outline-text-4" id="text-orge7e0c6e">
 <p>
Impeller, macOS platformunda da önizleme sürümü olarak sunulmaktadır. Bu sayede Impeller’ı macOS uygulamalarında test etmek ve geliştirmek mümkün hale gelmiştir. Impeller’ı test etmek ve geri bildirimde bulunmak için önerilen yol, SkSL ısınmasını önlemek ve performans ölçümleri yapmak için DevTools’u kullanmaktır. Ayrıca Impeller’ı kullanarak uygulamaların test edilmesi ve hataların dosyalanması teşvik edilmektedir.
</p>

 <p>
Impeller projesinin gelişimini GitHub’daki proje panosu üzerinden takip etmek mümkündür. Topluluktan gelen geri bildirimler, Impeller’ın doğruluğunu ve performansını artırmak için değerli kabul edilmektedir. Kullanıcılar, aslına uygunluk ve performans sorunlarını sorun izleyicisine dosyalayarak Impeller’ın gelişimine katkıda bulunabilirler.
</p>
</div>

 <h3> <a id="çerçeve-framework-güncellemeleri" class="anchor" href="#çerçeve-framework-güncellemeleri">¶</a>Çerçeve (Framework) Güncellemeleri</h3> <div class="outline-text-3" id="text-org906f095">
 <p>
Flutter’ın Material çerçevesi de bu sürümde pek çok önemli güncelleme aldı. Bu güncellemeler hem platforma uyum sağlama hem de daha fazla özelleştirme imkanı sunma konusunda odaklandı.
</p>

 <p>
TextField için karakter tanıma özelliği eklendi. iOS platformunda kullanıcılar, cihaz kamerasını kullanarak karakterleri tanıyabilir ve bunları otomatik olarak metin alanına ekleyebilirler.
</p>


 <div id="orgce3c731" class="figure">
 <p> <img src="/img/textfield_camera.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>TextField Camera</p>
</div>

 <p>
AlertDialog’a adaptif yapılandırıcı eklendi. Bu sayede mevcut platforma göre hem Material hem de Cupertino diyalogları gösterebilirsiniz.
</p>


 <div id="orgabdfc51" class="figure">
 <p> <img src="/img/flutter_alert_dialog_platform_adaptive.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>AlertDialog platform adaptasyonu</p>
</div>

 <p>
CupertinoDatePicker’a monthYear modu eklendi, kullanıcılar artık ay ve yıl seçimini daha rahat bir şekilde yapabilirler.
</p>


 <div id="orgcb74e90" class="figure">
 <p> <img src="/img/flutter_cupertino_takvim_component.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>Takvim Component’i</p>
</div>

 <ul class="org-ul"> <li>Material bileşenlerini özelleştirmek daha da kolaylaştırıldı. Örneğin,
 <b> <i>InputDecoration</i></b> için artık hata öğesini (string yerine)
özelleştirmek için  <b> <i>error</i></b> özelliğini kullanabilirsiniz.</li>

 <li>Chips bileşenlerinin renklerini farklı durumlar için özelleştirmek
mümkün hale geldi.</li>

 <li>Material 3 tasarım özelliklerine uygun olarak  <b> <i>Elevated Chips,
FilterChip.elevated, ChoiceChip.elevated ve ActionChip.elevated</i></b>
varyantları eklendi.</li>
</ul></div>

 <h3> <a id="uygulama-yaşam-döngüsü-değişiklikleri" class="anchor" href="#uygulama-yaşam-döngüsü-değişiklikleri">¶</a>Uygulama Yaşam Döngüsü Değişiklikleri</h3> <div class="outline-text-3" id="text-org0ebfe77">
 <p>
Uygulama yaşam döngüsündeki değişiklikleri algılamak ve uygulamanın
kapatılma isteklerine yanıt vermek amacıyla AppLifecycleListener sınıfı
eklendi.
</p>


 <div id="org7c76c3b" class="figure">
 <p> <img src="/img/flutter_application_life_cycle.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 5: </span>Application Life-cycle</p>
</div>
</div>

 <h3> <a id="scrolling-ve-accessibility-i̇yileştirmeleri" class="anchor" href="#scrolling-ve-accessibility-i̇yileştirmeleri">¶</a>Scrolling ve Accessibility İyileştirmeleri</h3> <div class="outline-text-3" id="text-org2c261df">
 <p>
Flutter 3.13 ile birlikte,  <b> <i>iki boyutlu (2D)</i></b> kaydırma yeteneğini
getirerek kullanıcılara daha fazla esneklik sunuyor. Bu özellik ile
birlikte, farklı yönlerde kaydırma işlemleri oluşturabilirsiniz.
</p>

 <p>
CupertinoSwitch için onOffSwitchLabels erişebilirlik özelliği eklendi ve
IconButton’un isSelected özelliği artık görüntülenebiliyor.
</p>
</div>

 <h3> <a id="platform-desteği" class="anchor" href="#platform-desteği">¶</a>Platform Desteği</h3> <div class="outline-text-3" id="text-orga0c8532">
 <p>
Flutter 3.13 ile birlikte,  <i>Android Jelly Bean</i> API seviyelerini (16, 17
ve 18) artık desteklenmiyor.  <b> <i>Android 14/API34</i></b> ve  <b> <i>iOS 17/Xcode 15</i></b>
desteklenmeye başlandı. Bu güncellemelerle birlikte, daha yeni
özelliklere erişim sağlanıyor.
</p>
</div>

 <h3> <a id="oyun-geliştirme-araçları" class="anchor" href="#oyun-geliştirme-araçları">¶</a>Oyun Geliştirme Araçları</h3> <div class="outline-text-3" id="text-org7fe0844">
 <p>
Flutter 3.13 ile birlikte güncellenen oyun geliştirme araçları,
geliştiricilere daha fazla kaynak ve örnek oyun sunarak desteğini
arttırmaya devam ediyor.
</p>
</div>

 <h3> <a id="devtools" class="anchor" href="#devtools">¶</a>DevTools</h3> <div class="outline-text-3" id="text-org83f1829">
 <p>
DevTools  <b> <i>2.25.0</i></b> ve  <b> <i>2.24.0</i></b> sürümleriyle yeni özellikler ve
iyileştirmeler geliştiricilere sunuldu.
</p>
</div>

 <h3> <a id="kaynaklar" class="anchor" href="#kaynaklar">¶</a>Kaynaklar</h3> <div class="outline-text-3" id="text-org08ea78b">
 <ul class="org-ul"> <li> <a href="https://docs.flutter.dev/release/release-notes/release-notes-3.13.0">Flutter 3.13 Release Notes</a></li>
 <li> <a href="https://medium.com/flutter/whats-new-in-flutter-3-13-479d9b11df4d">What’s new in Flutter?</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/flutter_3_13_version/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/flutter_3_13_version/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Xcrun Komutu ve simctl ile iOS Simülatör Yönetimi</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orge6f6d71">
 <p>
Merhabalar, iOS uygulaması geliştirirken bazen Xcode’un komut satırı üzerinden terminal komutlarını kullanmaya ihtiyaç duyarız.  <code>xcrun</code> komutu bize çatı bir komut olarak altında bir çok yardımcı komuta erişim sağlar, bunlardan en kullanışlılarından  <code>simctl</code> üzerine inceleme yapacağız.
</p>
</div>

 <h3> <a id="codexcruncode-komutu-nedir" class="anchor" href="#codexcruncode-komutu-nedir">¶</a> <code>xcrun</code> komutu nedir?</h3> <div class="outline-text-3" id="text-org04fc481">
 <p>
Xcode’un kullandığı bir çok komuta erişim için kullanılan çatı  <code>wrapper</code> bir komuttur.
</p>
</div>

 <h3> <a id="codesimctlcode-komutu-ne-işe-yarar" class="anchor" href="#codesimctlcode-komutu-ne-işe-yarar">¶</a> <code>simctl</code> komutu ne işe yarar?</h3> <div class="outline-text-3" id="text-org8da636d">
 <p>
Xcode’un sağladığı simülatörlere erişimi ve yönetimi kolaylaştıran bir araçtır. Aktif olarak kullanılan Xcode’un toolchain’ini kullanarak iOS veya macOS simülatörleri ayağa kaldırılabilir.
</p>
</div>

 <h4> <a id="simulator-listeleme" class="anchor" href="#simulator-listeleme">¶</a>Simulator listeleme</h4> <div class="outline-text-4" id="text-orgd179c44">
 <div class="highlight"> <pre> <span></span> <span class="w">  </span> <span class="c1"># Tüm simülatörleri listeleme</span>
 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>list
</pre></div>

 <p>
Bu listeden farklı filtrelemeler yapabiliyoruz, misal tıp filtreleme seçenekleri  <code>devices</code>,  <code>devicetypes</code>,  <code>runtimes</code> ve  <code>pairs</code> gibi.
</p>

 <p>
 <code>Tip filtresi</code> sonrası listeden yine daha filtreleme yapabiliyoruz.  <code>booted</code> listelenen cihazlardan açıklamada booted içeren cihazları filtrelemeye yarıyor.
</p>

 <div class="highlight"> <pre> <span></span> <span class="w">  </span> <span class="c1"># Yalnizca =booted= cihazlari listeleme</span>
 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>list <span class="w"> </span>devices <span class="w"> </span>booted
</pre></div>

 <div class="highlight"> <pre> <span></span>  == Devices ==
  -- iOS 16.2 --
  iPhone 14 (FF33309C-DC41-41EF-B853-4BE58E8CDE6B) (Booted)
  iPhone 14 Pro (C08CC68E-CF2B-445F-8701-C21AC86F9785) (Booted)
</pre></div>
</div>

 <h4> <a id="simülatör-ayağa-kaldırma" class="anchor" href="#simülatör-ayağa-kaldırma">¶</a>Simülatör ayağa kaldırma</h4> <div class="outline-text-4" id="text-org6867854">
 <p>
Yeni bir simülatör ayağa kaldırmak için:
</p>
 <div class="highlight"> <pre> <span></span> <span class="w">  </span> <span class="c1"># Simülatör ayağa kaldırma</span>
 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>boot <span class="w"> </span> <span class="s2">"iPhone 14 Pro"</span>
</pre></div>
</div>

 <h4> <a id="link-açma" class="anchor" href="#link-açma">¶</a>Link açma</h4> <div class="outline-text-4" id="text-org6a15f3b">
 <p>
Çoğu zaman bir  <a href="ios_deep_link">universal link</a> veya  <code>custom-scheme</code> açmayı denemek isteyebiliyoruz simülatörde o durumda şöyle bir komut bize yardımcı oluyor:
</p>

 <div class="highlight"> <pre> <span></span> <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>openurl <span class="w"> </span>booted <span class="w"> </span>https://news.ycombinator.com/
</pre></div>
</div>

 <h4> <a id="uygulama-yükleme" class="anchor" href="#uygulama-yükleme">¶</a>Uygulama yükleme</h4> <div class="outline-text-4" id="text-orgc276707">
 <p>
Eğer elimizde bir ipa var işe bunu yüklemek için:
</p>
 <div class="highlight"> <pre> <span></span> <span class="w">  </span> <span class="c1"># Simulatore 'ipa' yuklemek</span>
 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>install <span class="w"> </span><device-uuid> <span class="w"> </span><app-path>

 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>install <span class="w">  </span>FF33309C-DC41-41EF-B853-4BE58E8CDE6B <span class="w"> </span> <span class="s2">"~/me/app.ipa"</span>
</pre></div>
</div>

 <h4> <a id="lokasyon-simule-etme" class="anchor" href="#lokasyon-simule-etme">¶</a>Lokasyon simule etme</h4> <div class="outline-text-4" id="text-org52eb07b">
 <p>
Lokasyon testleri yapıyor isek:
</p>
 <div class="highlight"> <pre> <span></span> <span class="w">  </span> <span class="c1"># Lokasyon ayarlama</span>
 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>location <span class="w"> </span><device-uuid> <span class="w"> </span><lat,long>

 <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>location <span class="w"> </span>FF33309C-DC41-41EF-B853-4BE58E8CDE6B <span class="w"> </span> <span class="nb">set</span> <span class="w"> </span> <span class="m">44</span>.5,46.2
</pre></div>
</div>

 <h4> <a id="diğer-codesimctlcode-komutlarını-keşfetme" class="anchor" href="#diğer-codesimctlcode-komutlarını-keşfetme">¶</a>Diğer  <code>simctl</code> komutlarını keşfetme</h4> <div class="outline-text-4" id="text-org836ba7c">
 <p>
Burada üzerinden geçemeyeceğimiz kadar çok yardımcı alt komutlar sağlıyor  <code>xcrun simctl</code>.
</p>

 <p>
Bu komutların neler olduğunu keşfetmek için:
</p>
 <div class="highlight"> <pre> <span></span> <span class="w">  </span>xcrun <span class="w"> </span>simctl <span class="w"> </span>--help
</pre></div>

 <div class="highlight"> <pre> <span></span>  addmedia            Add photos, live photos, videos, or contacts to the library of a device.
  boot                Boot a device or device pair.
  clone               Clone an existing device.
  create              Create a new device.
  delete              Delete specified devices, unavailable devices, or all devices.
  diagnose            Collect diagnostic information and logs.
  erase               Erase a device's contents and settings.
  get_app_container   Print the path of the installed app's container
  getenv              Print an environment variable from a running device.
  help                Prints the usage for a given subcommand.
  icloud_sync         Trigger iCloud sync on a device. install             Install an app on a device. install_app_data    Install an xcappdata package to a device, replacing the current contents of the container.
  io                  Set up a device IO operation.
  keychain            Manipulate a device's keychain
  launch              Launch an application by identifier on a device.
  list                List available devices, device types, runtimes, or device pairs.
  location            Control a device's simulated location
  logverbose          enable or disable verbose logging for a device
  openurl             Open a URL in a device.
  pair                Create a new watch and phone pair.
  pair_activate       Set a given pair as active.
  pbcopy              Copy standard input onto the device pasteboard.
  pbpaste             Print the contents of the device's pasteboard to standard output.
  pbsync              Sync the pasteboard content from one pasteboard to another.
  privacy             Grant, revoke, or reset privacy and permissions
  push                Send a simulated push notification
  rename              Rename a device.
  runtime             Perform operations on runtimes
  shutdown            Shutdown a device.
  spawn               Spawn a process by executing a given executable on a device.
  status_bar          Set or clear status bar overrides
  terminate           Terminate an application by identifier on a device.
  ui                  Get or Set UI options
  uninstall           Uninstall an app from a device.
  unpair              Unpair a watch and phone pair.
  upgrade             Upgrade a device to a newer runtime.
</pre></div>
</div>

 <h3> <a id="sonuç" class="anchor" href="#sonuç">¶</a>Sonuç</h3> <div class="outline-text-3" id="text-org1586f98">
 <p>
Bu komutları üstünkörü bile olsa denemeniz, yaptığınız geliştirmeleri simülatörde test ederken daha atik olmanıza yardımcı olabilir.
</p>

 <p>
Bir çok işlem simülatör  <i>gui</i>’si üzerinden sağlanmış olsada hem daha geniş seçenekleri kullanıp hem de shell üzerinde otomatik işlemler tanımlayabilecek bir dağarcığa sahip olabilirsiniz.
</p>

 <p>
Görüşmek üzere!
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/xcrun_komutu/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/xcrun_komutu/index.html</guid>
  <pubDate>Tue, 22 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>SSL Pinning</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org76978a8">

 <div id="org9a0f847" class="figure">
 <p> <img src="/img/ssl_and_pinning_certificate_topology.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span> <a href="https://docs.wavemaker.com/learn/blog/2020/12/15/certificate-pinning/">SSL Pinleme</a></p>
</div>

 <p>
Merhabalar, bu yazımızda güvenliğe dokunan bir konudan bahsedeceğiz. Verinin güvenliği akış halinde, işlenirken veya saklanırken farklı yöntemler ile sağlanmakta.
</p>

 <p>
SSL Pinning verinin iki parti arasında iletim esnasındaki güvenliğini korumak için ortaya çıkmıştır.  <code>SSL Pinning</code> dediğimizde iki kavram var birisi  <code>SSL</code> diğeri ise  <code>Pinning</code> işlemi. O nedenle ilk önce SSL hakkında ufak bir bilgi ile başlayalım.
</p>
</div>

 <h3> <a id="sslrsquoin-kısa-tarihçesi" class="anchor" href="#sslrsquoin-kısa-tarihçesi">¶</a>SSL’in Kısa tarihçesi</h3> <div class="outline-text-3" id="text-orged4c112">
 <p>
Güvenli Geçiş Katmanları diye türkçeleştirebileceğimiz bir tabir olan SSL websitelerinin doğması ile beraber 1990’ların ortasında bağlanılan sitelerin güvenliğini teyit etmek için kullandığı bir güvenlik yöntemidir.
</p>

 <p>
Burada  <code>istemci (client)</code>  <code>ssl</code> sayesinde  <code>sunucu (server)</code> ile arasında olan iletişimi geçerli bir sertifikaya güvenerek yapmaktadır.
</p>

 <p>
Sertifika otoritelerinin (CA Authorities) verdiği sertifikalar ile (chain of certificate) üzerinden bu sağlanmaktadır. Ancak herhangi kötü niyetli birileride geçerli sertifikalara sahip olabilir; o nedenle bu riski düşürebilmek adına ilgili sertifikalar her iki partide (istemci/sunucu) önceden bulunarak, bağlantının gerçekten doğru istemci ve doğru sunucu ile olduğunu garantiler.
</p>
</div>

 <h3> <a id="mi̇tm-man-in-the-middle-atağı" class="anchor" href="#mi̇tm-man-in-the-middle-atağı">¶</a>MİTM (Man in the Middle) Atağı</h3> <div class="outline-text-3" id="text-orgd1c79e1">
 <p>
SSL’in eksik kaldığı noktada kötü niyetli birinin de sertifika sahibi olduğunda istemci ve sunucu arasında zaafiyet meydana gelebilir. İletişim’in ortasına kendisini yerleştirip ortamı dinleyerek bilgi elde etmeye çalışan atak türüdür.
</p>
</div>

 <h3> <a id="pinning-pinlemek-nedir" class="anchor" href="#pinning-pinlemek-nedir">¶</a>Pinning (Pinlemek) nedir?</h3> <div class="outline-text-3" id="text-orgfdb3ffb">
 <p>
Pinlemenin ne olduğunu öğrenmeden önce neyi pinleyeceğimizden biraz bahsedelim.
Pinlenecek olan dosyaya Sertifika (Certificate) diyoruz.
</p>

 <p>
Asimetrik şifrelemedeki Public/Private anahtar çiftleri, sertifika için önemli kavramlar.
 <code>Public Key</code> sunucuya gönderilecek olan bilgiyi başkaları okumasın diye şifrelemede kullanılıyor.
Bu  <code>public key</code> sertifikanın içinde bulunuyor ve istemci tarafında kullanılıyor.
Private anahtar ise gönderilen veriyi sunucuda çözümleyebilmek için kullanılıyor.
</p>

 <p>
Zaten  <code>https</code> üzerinden bu bilgiler güvenli şekilde iletiliyorken neden pinlemeye ihtiyaç duyuluyor sorusunun cevaplayalım.
</p>

 <p>
Normalde sertifikalar “Certificate of Chain” denilen bir zincir üzerinden iletişimi güvenli hale getiriyor. O nedenle tüm zincir  <code>root</code> sertifikaya kadar onaylandıktan sonra iki parti arasında iletişim başlayabiliyor. Ama, uygulama sunucunun verdiği sertifikaya güvenirken bu sertifikanın kendi sunucusu mu yoksa bir başkasının sunucusu mu olduğuna dair bilgiye sahip değildir.
</p>

 <p>
Pinleme yaptığınız vakit ise direkt olarak bu iletişim garantisini istemci/sunucu arasında karşılıklı güvenli hale getirebiliyorsunuz; herhangi bir başka otoriteye gerek duymuyorsunuz.
</p>

 <p>
Önceden istemciye gömülen sunucunun  <code>public</code> anahtarı olursa, istemci sunucuyla iletişim kurmadan önce kendisinde olan anahtar ile sunucudaki anahtarı karşılaştırıp, eşleş*meme*si durumunda direkt iletişimi kesiyor.
</p>

 <p>
Özellikle güvenliğin daha temelde olduğu uygulamalarda bankacılık ve finansal enstrüman olarak görev yapan uygulamalarda bu güvenlik önlemi tercih edilmektedir. Mobil uygulamalarda da yoğunluklu olarak kullanılan bir güvenlik tedbiridir.
</p>
</div>

 <h3> <a id="mobil-uygulama-entegrasyonları" class="anchor" href="#mobil-uygulama-entegrasyonları">¶</a>Mobil Uygulama Entegrasyonları</h3> <div class="outline-text-3" id="text-orgb57aee7">
 <ol class="org-ol"> <li>İlk adım olarak sunucunun  <code>public</code> anahtarini veya SSL sertifikasını çıkarmanız gerekiyor.</li>

 <li>Bu anahtara sahip sertifikayı veya public anahtarı istemci uygulamaya pinlemek/gömmek gerekiyor. İstemci tarafındaki network katmanında  <code>sunucuya</code> isteklerinde bu anahtarların eşleşme kontrolünü yapacak kontrolü eklemek gerekiyor.</li>

 <li>Dikkat edilmesi gereken en önemli noktalardan bir tanesi sertifikanın süresi bittiğinde yenileme ihtiyacını takip edebilmek.
 <dl class="org-dl"> <dt>Certificate Pinning</dt> <dd>Tüm sertifikanın  <code>client</code>’a gömüldüğü ve sorguya cevap veren  <code>server</code>’in sertifikası ile karşılaştırıldığı pinleme yöntemi.
Bu durumda  <code>client</code>’ların eski kalanlarının  <code>force update</code> ile zorunlu güncellemeye gitmesi gerekiyor.</dd>

 <dt>Public Key Pinning</dt> <dd> <p>
Sertifika’da yer alan  <code>public key</code>’in veya  <code>public key hash</code>’inin istemciye konulması ve karşılaştırma için kullanılması durumunu ifade eder.
Normalde sertifikaların belli periyotlarda yenilenmesi gerekmektedir. Bu yenileme herhangi bir private key sızıntısı durumlarının önüne geçmeyi amaçlar.
</p>

 <p>
Public anahtarı pinlediğimiz takdirde istersek eski  <code>public/private</code> anahtar çifti ile yeni sertifika oluşturabiliriz.
Public Key pinleme ise bu durumda sunucu tarafında sertifika değişimlerinde yeni sertifika eski public/private key pair ile üretildiği durumda force update gerekmeden devam edilebilir. Ancak böyle devam etmesi sertifikanın yenilenme amacına aykırı olmaktadır.
</p></dd>
</dl></li>
</ol> <p>
Özet olarak,  <code>SSL Pinning</code> dediğimiz olay istemci ile sunucu arasındaki iletişimi önceden belirlenen anahtar çifti ile dışarıya sızmasını engelleyen yöntemdir.
</p>

 <p>
Sistem güvenliği konusunda araştırmalar yapan bağımsız kuruluş  <a href="https://owasp.org/">OWASP</a>,  <a href="https://tr.wikipedia.org/wiki/Man-in-the-middle_sald%C4%B1r%C4%B1s%C4%B1">MITM</a> türü ataklar için önlem olarak bu yöntemi tavsiye etmektedir.
</p>

 <p>
iOS tarafında  <code>NSURLSession</code> veya  <code>Alamofire</code> bağımlılıkları üzerinde  <a href="https://medium.com/@greenSyntax/ssl-pinning-in-ios-f508b5860ead">bu pratikler</a> rahatlıkla uygulanabiliyor.
</p>

 <p>
Android tarafında ise OKHttpClient ve Retrofit gibi popüler kütüphanelerde bu pratiklerin nasıl yapıldığına dair birçok  <a href="https://medium.com/@eniz.bilgin/android-ssl-certificate-pinning-7fd236243f2b">örnek</a> bulabilirsiniz.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org180a8e7">
 <ul class="org-ul"> <li> <a href="https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning">OWASP SSL Pinleme</a></li>
 <li> <a href="https://mas.owasp.org/MASTG/">OWASP Mobil Uygulama Güvenlik Test Kitabı</a></li>
 <li> <a href="https://docs.wavemaker.com/learn/blog/2020/12/15/certificate-pinning/">Certificate Pinning</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/ssl_pinning/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ssl_pinning/index.html</guid>
  <pubDate>Tue, 08 Aug 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Android File Template</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://www.linkedin.com/in/hasan-h%C3%BCseyin-do%C4%9Fan-861048187/">Hasan Hüseyin Doğan</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org6c13d9d">

 <div id="orgc218d00" class="figure">
 <p> <img src="/img/20230724T133855.759239_create_template_1.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Tek bir Template</p>
</div>

 <p>
Merhaba sevgili mobilen okuyucuları sizlerde tekrar eden kodlardan sıkılmadınız mı?
</p>

 <p>
Sizlere her ekran için fragment ve viewmodel oluşturup tekrar aynı yapıyı kurmak zorunda kalmakatan kurtarmaya geldim işte karşınızda file template.
</p>
</div>

 <h3> <a id="file-template-nedir" class="anchor" href="#file-template-nedir">¶</a>File Template Nedir?</h3> <div class="outline-text-3" id="text-orgbb37956">
 <p>
File template, yazılım geliştirme sürecinde tekrarlanan işleri otomatize etmek için kullanılan şablonlardır. Özellikle Android uygulama geliştirmede, her yeni ekran eklediğinizde ve yeni bir bileşen oluşturduğunuzda, çoğu zaman aynı ya da benzer yapıları tekrar etmeniz gerekir. Bu durum zaman kaybına, hatalara ve bakım zorluklarına yol açabilir.
</p>

 <p>
File template’ler, başlangıçta yapılandırılmış dosya şablonlarıdır ve proje içinde farklı amaçlar için kullanılabilirler. Bir kez oluşturulduktan sonra, yeni bir ekran ya da bileşen eklemek istediğinizde, sadece template’i kullanarak o yapıyı hızlıca oluşturabilirsiniz. Bu sayede tekrarlayan kod yazma işlemlerinden kurtulur, verimliliği artırır ve aynı zamanda tutarlılık sağlamış olursunuz.
</p>

 <p>
File template oluşturmak, özellikle proje ekibinin bir parçası olarak çalıştığınızda, diğer geliştiricilerle ortak bir yapı ve standart oluşturmak için çok faydalıdır. Bu sayede, projedeki tüm ekranlar ve bileşenler, genel bir yapıya uygun olur ve ekibin işbirliği daha verimli hale gelir.
</p>

 <p>
Ayrıca, file template’ler güncellendiğinde ya da proje gereksinimleri değiştiğinde, tek bir değişiklikle tüm ekranları ve bileşenleri güncelleme avantajı sağlar. Bu, kod tutarlılığını ve bakım kolaylığını artırırken aynı zamanda hataları da azaltmaya yardımcı olur.
</p>

 <p>
Sonuç olarak, Android uygulama geliştirme sürecinde file template oluşturmak, proje başlangıcında ve geliştirme süreci boyunca zaman kazandırırken, daha organize bir kod tabanı oluşturarak ekranların ve bileşenlerin daha düzenli bir şekilde eklenmesini sağlar. Bu sayede geliştiriciler, daha az kod tekrarı ile daha verimli ve etkili bir şekilde çalışabilirler.
</p>
</div>

 <h3> <a id="file-tempate-nasıl-oluşturulur" class="anchor" href="#file-tempate-nasıl-oluşturulur">¶</a>File tempate nasıl oluşturulur?</h3> <div class="outline-text-3" id="text-orga00c24e">
 <p>
Peki bize bu fayları sağlayacak file templatleri bir projede nasıl yararlanabileceğimizi anlatmak istiyorum.
</p>

 <ol class="org-ol"> <li>File > Setting > Editor > File and Code Templates menüsü açıyoruz.</li>
 <li>Template ye dönüştürmek istediğimiz dosyayı template haline getine getiriyoruz bu adımda  <a href="https://dev.to/wilderminds/how-to-use-android-studio-file-templates-to-speed-up-development-4e93">bu adresten</a> faydalanabilirsiniz.</li>
 <li>Bu adım birden fazla dosyayı tek bir template ile oluşturmak isteyenlere özel, template olmasını sağlayan nokta.</li>
</ol> <p>
Kırmızı ile işaretlenmiş butonu seçerek birden fazla template dosyasını birlikte oluştura bilir ve güzel kombinasyonlar yaratabilirsiniz.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça:</h3> <div class="outline-text-3" id="text-org3a43e27">
 <ul class="org-ul"> <li> <a href="https://riggaroo.dev/custom-file-templates-android-studio/">Custom file templates</a></li>
 <li> <a href="https://dev.to/wilderminds/how-to-use-android-studio-file-templates-to-speed-up-development-4e93">How to use file templates in android?</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/android_file_template/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/android_file_template/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>DetailsPro: No-Code ile Swift Tasarımları</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/alimerttekel">Ali Mert Tekel</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgff854fb">

 <div id="orgd828db6" class="figure">
 <p> <img src="/img/20230724T113245.488053_details_pro_main_screen.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>DetailsPro ana ekranı</p>
</div>

 <p>
Merhaba, bu yazıda sizlerle, mobil geliştiricilerin dikkatini çekebilecek heyecan verici bir uygulamayı paylaşacağım:  <a href="https://detailspro.app/">DetailsPro</a>.
</p>

 <p>
Apple uygulamaları için no-code tasarımlar oluşturmanıza imkan tanıyan bu uygulama aynı zamanda oluşturulan tasarımların Swift kaynak kodlarını da dışa aktarmanıza olanak sağlıyor. Tasarım yeteneklerinizin sınırlarına takılmadan istediğiniz tasarımı yapmaya hazır olun! 😄
</p>

 <p>
DetailsPro, uygulama içinde hem ücretsiz hem de ücretli abonelik seçenekleri sunuyor.
</p>

 <p>
Ücretsiz sürümde beş sayfaya kadar tasarım oluşturabilirsiniz. Ancak ücretli abonelikle birlikte sınırsız sayıda tasarım yapma imkanına sahip oluyorsunuz ve ek olarak MapKit gibi özelliklere de erişebilirsiniz.
</p>

 <p>
Uygulama, çeşitli hazır component’leri içeriyor ve topluluk desteği sayesinde diğer kullanıcıların oluşturduğu hazır template’leri kullanmanıza olanak tanıyor.
</p>

 <p>
Ayrıca, SFSymbols’u doğrudan tasarımlarda kullanabiliyorsunuz. Bu sayede, tasarım süreciniz daha hızlı ve verimli bir şekilde ilerliyor.
</p>


 <div id="org2cc3251" class="figure">
 <p> <img src="/img/20230724T113245.488053_details_pro_create_design.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Tasarım oluşturma ekranı</p>
</div>

 <p>
Basit bir örnek template’i inceleyelim. Sol tarafta, sürükleyip bırakma menüsüyle kullanabileceğimiz item’ları görüyoruz. Sağ tarafta ise seçtiğimiz item’a özellikler ekleyebiliyoruz ve bunun yanı sıra uygulama kendi içerisinde modifier önerileride sunuyor.
</p>


 <div id="org7c67368" class="figure">
 <p> <img src="/img/20230724T113245.488053_details_pro_export.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Export code menüsü</p>
</div>

 <p>
Aşağı kaydırdığımızda, tasarımın kaynak koduna ulaşabileceğimiz seçeneklerle karşılaşıyoruz. Dilerseniz kodu kopyalayıp paylaşabilirsiniz. Uygulamanın genel kullanımı oldukça basit.
</p>

 <p>
DetailsPro, tasarımıcıların yanı sıra geliştiricilere de hitap eden bir uygulama. No-code yaklaşımıyla Swift syntax’ına oldukça yakın özelleştirmeler yaparak hızlı ve etkili tasarımlar oluşturabilirsiniz.
</p>

 <p>
Ayrıca, tasarımınızın kaynak kodunu dışa aktarabilme seçeneği, iOS geliştirme konusunda yeni olanlar için faydalı olabilir. Ücretsiz sürümüyle uygulamayı keşfedebilir ve ihtiyaçlarınıza göre ücretli aboneliği tercih edebilirsiniz. Umarım bu inceleme sizin için faydalı olmuştur. Bir sonraki sayımızda görüşmek üzere.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org43b8083">
 <p>
 <a href="https://detailspro.app/">Details Pro App</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/details_pro_no_code_ui/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/details_pro_no_code_ui/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS uygulama bildirim sertifikası oluşturma/yenileme</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org90fa086">
 <p>
Merhabalar, bugün hali hazırdaki uygulamamıza push sertifikası yenileme zamanı yaklaşınca yeni sertifika nasıl oluşturulur konusuna değinicem.
</p>

 <p>
iOS uygulamaları için  <code>p12</code> push sertifikalarinin her yıl yenilenmesi gereklidir.
</p>

 <p>
Push sertifikası aslında uygulamanın bir parçası değildir, bu yüzden yeni sertifika, mevcut uygulamayı etkilemeden değiştirilebilir.
</p>

 <p>
Yenileme burada yanıltıcı bir kelime olabilir, burada yapılan sadece yeni bir sertifika oluşturup eski olanla değiştirmektir.
</p>

 <p>
Sertifikanın yenilemeye yardımcı olmak için, Apple aynı anda 2 aktif push sertifikası destekliyor, böylece ’yakında sona erecek’ olan sertifikayı iptal etmeden ilerlenebiliyor.
Bu yenileme döneminde her 2 sertifika ile aynı anda push gönderebiliyorsunuz.
</p>

 <p>
Bunun için izlenmesi gereken adımlar:
</p>
</div>
 <h3> <a id="codecertsigningrequestcode-dosyası-oluşturmak" class="anchor" href="#codecertsigningrequestcode-dosyası-oluşturmak">¶</a> <code>certSigningRequest</code> dosyası oluşturmak:</h3> <div class="outline-text-3" id="text-org73b530f">
 <ul class="org-ul"> <li> <code>Keychain</code> uygulamasını açın</li>
 <li> <code>Certificate Assistant</code>’a menüden tıklayın</li>
 <li> <code>Request a Certificate From a Certificate Authority</code> seçin</li>
 <li>Sonrasinda disk’e kaydedin.</li>
</ul></div>

 <h3> <a id="edit-push-notifications" class="anchor" href="#edit-push-notifications">¶</a>Edit Push Notifications</h3> <div class="outline-text-3" id="text-org9c03b6b">
 <p>
 <a href="https://developer.apple.com'u">https://developer.apple.com'u</a> açın
</p>

 <p>
Certificates, identifiers & Profiles menüsüne gidin.
</p>

 <p>
 <code>Identifiers</code> menüsünden ilgili uygulamanın  <code>id</code>’sini bulun.
</p>


 <div id="orgc56d413" class="figure">
 <p> <img src="/img/1_CertificatePushIdentifier.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Certificates, identifiers & Profiles menüsü</p>
</div>


 <div id="org551acec" class="figure">
 <p> <img src="/img/2_EditAppIdConfiguration.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span> <code>Edit</code> Push Notifications</p>
</div>
</div>

 <h3> <a id="push-sertifikası-oluşturma" class="anchor" href="#push-sertifikası-oluşturma">¶</a>Push sertifikası oluşturma</h3> <div class="outline-text-3" id="text-org04bade7">

 <div id="org7b66808" class="figure">
 <p> <img src="/img/3_CreatePushCert.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Push sertifikası oluşturma</p>
</div>

 <p>
Önceki adımdan certSigningRequest’i kullanın.
 <code>.cer</code> dosyasını indirin.
</p>

 <p>
Çift tıklayarak  <code>keychain</code>’e kurun.
</p>

 <p>
 <code>My Certificates</code> altındaki yeni yüklenmiş sertifikaya sağ tıklayın ve  <code>Export</code> (Dışa Aktar)’ı seçin.
</p>

 <p>
Sertifikayı korumak için şifre girin ve kaydedin.
</p>

 <p>
Bu adımlar sonrası  <code>p12</code> dosyanız oluşur.
Oluşturulan p12 sertifikası ile uygulamanıza push atabilirsiniz. Bu sertifika genelde push providerlara yüklenir.
</p>

 <p>
İyi çalışmalar :)
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/ios_app_push_certificate_yenileme/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ios_app_push_certificate_yenileme/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Steve Jobs The Man in The Machine</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org5a132ec">

 <div id="orgdc5f5b7" class="figure">
 <p> <img src="/img/the_man_in_the_machine.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>The man in the Machine</p>
</div>

 <p>
Merhabalar bu ay belgesel önerisi ile geliyoruz.  <a href="kitap_make_something_wonderful">Geçen haftaki</a> sayımızdaki tekrara düşmek istemiyordum ancak teknoloji ve mobile dünyanın en etkin isminin radikal yönlerini de ele alan  <a href="https://www.youtube.com/watch?v=MnVI7xiY39k&t">Steve Jobs The Man in the Machine</a> belgeselini izledim.
</p>

 <p>
Alex Gibney’in yönettiği bu belgeselde Steve Wozniak ile tanışmasını, sonrasında  <code>Blue Box</code> ürününü nasıl yaptıklarını anlatarak başlıyor.
</p>

 <blockquote>
 <p>
“When you learned you can mold the life, life will not be same again.”
</p>

 <p>
“Hayatı şekillendirebileceğini öğrendiğinde, hayat bir daha eskisi gibi olmaz.”
</p>

 <p>
— Steve Jobs
</p>
</blockquote>

 <p>
Hayatı kendi ideallerince şekillendirip bir çok sektörde büyük başarılar ortaya koyan, yaratıcı zihni tetikleyen bu duayen’i belgeselde daha objektif taraflarıyla tanıyabilirsiniz.
</p>

 <p>
Keyifli izlemeler.
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/steve_jobs_the_man_in_the_machine/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/steve_jobs_the_man_in_the_machine/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Okuma Notları: The Art Of Readable Code (1)</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/myusufka">Yusuf Kaya</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org3867f5c">
 <p>
Merhabalar, okumalarımdan çıkarttığım notları seri halinde paylaşmak istiyorum. Bu sayımızda  <a href="https://www.goodreads.com/en/book/show/8677004">The Art of Readable Code</a> kitabının notlarının ilk bölümünü inceleyeceğiz.
</p>

 <p>
Kod okunurluğu, yazılım geliştirme sürecinde oldukça önemli bir faktördür. Kodun okunabilir olması, geliştiricilerin kodu daha kolay anlamasını ve kodun bakımını ve genişletilmesini kolaylaştırır. Kodun daha okunabilir olması için bazı başlıkları inceleyeceğiz. İlerleyen sayılarda daha fazla başlık incelemeye çalışacağız.
</p>
</div>

 <h3> <a id="i̇yi-i̇simler-seçmek" class="anchor" href="#i̇yi-i̇simler-seçmek">¶</a>İyi İsimler Seçmek</h3> <div class="outline-text-3" id="text-orgf5c3a39">
 <p>
Kodun okunurluğunu artırmanın önemli bir yolu, değişken, fonksiyon ve sınıflar için uygun ve açıklayıcı isimler seçmektir. İyi bir isim, o değişkenin veya fonksiyonun amacını ve kullanımını açık bir şekilde ifade eder. Örneğin, belirsiz veya genel isimler yerine, değişkenin değerini veya fonksiyonun amacını daha iyi yansıtan isimler tercih edilmelidir.
</p>

 <p>
Örneğin, “tmp” veya “get” gibi belirsiz isimler yerine, daha açıklayıcı isimler seçilmelidir. Örneğin, “FetchPage()” veya “DownloadPage()” gibi daha anlamlı isimler, “GetPage(url)” fonksiyonunun amacını daha iyi ifade eder.
</p>
</div>

 <h3> <a id="genel-i̇simler-ve-kısaltmalardan-kaçınmalıyız" class="anchor" href="#genel-i̇simler-ve-kısaltmalardan-kaçınmalıyız">¶</a>Genel İsimler ve Kısaltmalardan Kaçınmalıyız</h3> <div class="outline-text-3" id="text-orgcc8bbab">
 <p>
Genel isimlerden kaçınılmalıdır. Örneğin, “tmp”, “retval” veya “foo” gibi kısaltma isimler, kodun okunurluğunu azaltabilir ve kodun anlaşılmasını zorlaştırabilir. Bu tür isimler yerine, değişkenin değerini veya amacını açıklayan isimler tercih edilmelidir.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="c1">// Bunun gibi kısaltma kullanım yerine:</span>
   <span class="kd">let</span>  <span class="nv">retval</span>  <span class="p">=</span>  <span class="n">someFunction</span> <span class="p">()</span>

   <span class="c1">// Anlamlı isimlendirmeler tercih etmeliyiz:</span>
   <span class="kd">let</span>  <span class="nv">isEligibleForCampaign</span>  <span class="p">=</span>  <span class="n">someFunction</span> <span class="p">()</span>
</pre></div>
</div>

 <h3> <a id="somut-i̇simleri-soyut-i̇simlere-tercih-etmeliyiz" class="anchor" href="#somut-i̇simleri-soyut-i̇simlere-tercih-etmeliyiz">¶</a>Somut İsimleri Soyut İsimlere Tercih Etmeliyiz</h3> <div class="outline-text-3" id="text-org48363d0">
 <p>
İsimlendirme yaparken amacını doğrudan açıklayan somut isimler tercih edin. Amacı anlamak için daha fazla araştırmaya ihtiyaç duyabilecek soyut isimlerden kaçının. Örneğin, bir sunucunun belirli bir TCP/IP bağlantı noktasını dinleyip dinlemediğini test eden bir yöntem varsa, “ServerCanStart()” yerine “CanListenOnPort()” adını kullanmak daha açıklayıcı olacaktır.
</p>
</div>

 <h3> <a id="i̇sim-uzunluğuna-dikkat-etmeliyiz" class="anchor" href="#i̇sim-uzunluğuna-dikkat-etmeliyiz">¶</a>İsim Uzunluğuna Dikkat Etmeliyiz</h3> <div class="outline-text-3" id="text-org59bd1e2">
 <p>
Anlamlı isimler seçmek önemlidir, ancak aşırı uzun isimlerden kaçınmak da gereklidir. Kısa kapsama sahip değişkenler için kısa isimler kabul edilebilir, çünkü bağlam zaten yeterli bilgi sağlar. Ancak daha geniş kapsamlı değişkenler için daha uzun isimler, amacını anlamak açısından daha faydalı olacaktır.
</p>
</div>

 <h3> <a id="bazı-i̇simlendirme-önerileri" class="anchor" href="#bazı-i̇simlendirme-önerileri">¶</a>Bazı İsimlendirme Önerileri</h3> <div class="outline-text-3" id="text-org0dfae0e">
 <ul class="org-ul"> <li>Değerlerin üst veya alt sınırlarını belirlerken  <code>max_</code> ve  <code>min_</code> ön eklerini kullanmak iyidir. Kapsayan aralıklar için  <code>first</code> ve  <code>last</code>, kapsayan/olamayan aralıklar için  <code>begin</code> ve  <code>end</code> terimleri tercih edilebilir.</li>

 <li>Boolean değişkenlerin isimlendirmesinde  <code>is</code>,  <code>has</code>,  <code>can</code>, veya  <code>should</code> gibi kelimeler kullanarak anlamı açık hale getirmeliyiz ve olumsuz ifadelerden kaçınmalıyız.</li>

 <li>İsimlerin yanıltıcı olabileceği durumlarda, kullanıcının beklentilerini karşılamak için ismi değiştirmeyi tercih etmeliyiz.</li>
</ul> <p>
Özetle, iyi isimler, okuyucunun niyetinizi doğru bir şekilde anlayacağı ve yanlış yorumlamalara neden olmayacağı isimlerdir. Dikkatli ve açıklayıcı isim seçimi, kodun anlaşılabilirliğini artıran önemli bir faktördür. Bir sonraki sayıda notlarımızın devamında görüşmek üzere :)
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org969789e">
 <p>
 <a href="https://www.goodreads.com/en/book/show/8677004">The Art of Readable Code</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/the_art_of_readable_code_1/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/the_art_of_readable_code_1/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>XCode Project Custom File Templates</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/alimerttekel">Ali Mert Tekel</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org5884957">
 <p>
Geliştirme sürecinde her ayrıntının önemli olduğu bir dünyada yaşıyoruz. Bu karmaşık süreçte, verimliliği ve tutarlılığı artırmak için araçlardan en iyi şekilde yararlanmak gerekiyor.
Bu yazıda, iOS uygulama geliştirme sürecini daha düzgün, hızlı ve hatasız hale getirmek için Xcode’un Custom File Template’lerinin nasıl kullanılacağını ele alacağız.
</p>

 <p>
Yeni başlayanlardan deneyimli geliştiricilere kadar herkesin işine yarayacak bu bilgilerle, projenizdeki geliştirme sürecini daha verimli hale getirebilirsiniz.
</p>

 <dl class="org-dl"> <dt>Xcode</dt> <dd>Apple’ın macOS, iOS, watchOS ve tvOS için uygulamalar geliştirmek için kullandığı bir Entegre Geliştirme Ortamı (IDE).</dd>
 <dt>Template</dt> <dd>Önceden tanımlanmış bir dosya yapısı.</dd>
 <dt>Custom Xcode Template</dt> <dd>Kullanıcı tarafından özelleştirilmiş Xcode Template’leri.</dd>
 <dt>MVVM</dt> <dd>Model-View-ViewModel, bir yazılım mimarisi deseni.</dd>
 <dt>.xctemplate</dt> <dd>Xcode Template’lerinin dosya türü.</dd>
</dl> <p>
`File Templates`, Xcode’un özellikle iOS uygulamaları geliştirirken kullandığımız dosyaları oluşturma sürecinde kilit bir rol oynar. Her yeni dosya oluştururken, `Choose a template for your new file:` başlığı altında bir dizi template sunulur.
</p>


 <div id="org7cf4d82" class="figure">
 <p> <img src="/img/choose-template.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Template Seçimi</p>
</div>

 <p>
Bu template’ler, yeni oluşturulacak dosyaların belirli bir yapıya sahip olmasına yardımcı olur. Ancak, projeniz büyüdükçe ve daha fazla dosya eklemeniz gerektiğinde, aynı süreci tekrar tekrar uygulamak zaman kaybına ve tutarsızlıklara yol açabilir. İşte tam bu noktada Custom Xcode Templates devreye girer.
</p>
</div>

 <h3> <a id="custom-xcode-template-avantajları" class="anchor" href="#custom-xcode-template-avantajları">¶</a>Custom Xcode Template Avantajları</h3> <div class="outline-text-3" id="text-orgb833b3b">
 <p>
Custom Xcode Template, projenizin gereksinimlerine ve mimarisine uygun dosyaları hızlı ve tutarlı bir şekilde oluşturmanıza olanak sağlar. Örneğin, MVVM mimarisi gibi belirli bir mimariyi kullanırken, her sayfa için birden fazla dosya oluşturmanız gerekebilir. Bu süreci Custom Xcode Template kullanarak optimize edebilirsiniz.
</p>
</div>

 <h3> <a id="custom-xcode-template-nasıl-oluşturulur" class="anchor" href="#custom-xcode-template-nasıl-oluşturulur">¶</a>Custom Xcode Template Nasıl Oluşturulur?</h3> <div class="outline-text-3" id="text-org7a22f01">
 <p>
İlk adım, Xcode’un template’leri barındırdığı dizini açmaktır.
</p>

 <p>
Bu klasör genellikle `~/Library/Developer/Xcode/Templates/File Templates` dizininde bulunur. Eğer bu dizin mevcut değilse, manuel olarak oluşturabilirsiniz.
</p>


 <div id="org9b40de9" class="figure">
 <p> <img src="/img/templates-folder.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Templates dizinini açmak</p>
</div>


 <div id="org91f77ce" class="figure">
 <p> <img src="/img/file-templates.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Yeni klasör oluşturmak</p>
</div>

 <p>
Kendi template’lerinizi barındıracak bir klasör oluşturmanız gerekmektedir. Bu klasörü adlandırırken istediğiniz ismi kullanabilirsiniz, örneğin “My Project Templates”.
</p>


 <div id="org9d7620e" class="figure">
 <p> <img src="/img/my-project-templates.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>Custom Template barındıracak klasörü oluşturmak</p>
</div>

 <p>
Sonrasında, `.xctemplate` uzantılı bir dosya oluşturmalısınız. Bu dosya, oluşturacağınız asıl template’i temsil eder ve template’in nasıl görüneceğini ve hangi dosyaların oluşturulacağını belirler.
</p>


 <div id="orgb8e20b9" class="figure">
 <p> <img src="/img/xctemplate.png" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 5: </span>Xctemplate dosyaları</p>
</div>

 <p>
`.xctemplate` dosyası genellikle aşağıdaki öğeleri içerir:
</p>

 <ul class="org-ul"> <li>TemplateInfo.plist</li>
 <li>Dosya template’leri (Örneğin; .swift dosyaları)</li>
 <li>Diğer kaynak dosyaları (Örneğin; Template için icon dosyası)</li>
</ul></div>

 <h4> <a id="örnek-bir-dosya-templatersquoi" class="anchor" href="#örnek-bir-dosya-templatersquoi">¶</a>Örnek bir dosya template’i;</h4> <div class="outline-text-4" id="text-org96f4c2e">
 <div class="highlight"> <pre> <span></span>   <span class="c1">// ___FILEHEADER___</span>
   <span class="kd">import</span>  <span class="nc">Combine</span>
   <span class="kd">import</span>  <span class="nc">Foundation</span>
   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">___VARIABLE_pageName___ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="c1">// </span> <span class="cs">MARK:</span> <span class="c1"> Observable Objects</span>
       <span class="p">@</span> <span class="n">ObservedObject</span>  <span class="kd">var</span>  <span class="nv">viewStateData</span> <span class="p">:</span>  <span class="n">___VARIABLE_pageName___ViewStateData</span>
       <span class="c1">// </span> <span class="cs">MARK:</span> <span class="c1"> Properties</span>
       <span class="kd">var</span>  <span class="nv">onChangeEvent</span> <span class="p">:</span>  <span class="p">(</span> <span class="n">___VARIABLE_pageName___Event</span> <span class="p">)</span>  <span class="p">-></span>  <span class="nb">Void</span>
       <span class="c1">// </span> <span class="cs">MARK:</span> <span class="c1"> Lifecycle</span>
       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="kc">self</span> <span class="p">.</span> <span class="n">content</span> <span class="p">()</span>
       <span class="p">}</span>
   <span class="p">}</span>

   <span class="c1">// </span> <span class="cs">MARK:</span> <span class="c1"> - Views</span>
   <span class="kd">extension</span>  <span class="nc">___VARIABLE_pageName___ContentView</span>  <span class="p">{</span>
       <span class="kd">private</span>  <span class="kd">func</span>  <span class="nf">content</span> <span class="p">()</span>  <span class="p">-></span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">VStack</span>  <span class="p">{</span>
               <span class="c1">// </span> <span class="cs">TODO:</span> <span class="c1"> Add Views</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
   <span class="cp">#if</span>  <span class="cp">DEBUG</span>
   <span class="kd">struct</span>  <span class="nc">___VARIABLE_pageName___ContentView_Previews</span> <span class="p">:</span>  <span class="n">PreviewProvider</span>  <span class="p">{</span>
       <span class="kd">static</span>  <span class="kd">var</span>  <span class="nv">previews</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="kd">let</span>  <span class="nv">initialView</span>  <span class="p">=</span>  <span class="n">___VARIABLE_pageName___ContentView</span> <span class="p">(</span> <span class="n">viewStateData</span> <span class="p">:</span>  <span class="p">.</span> <span class="kd">init</span> <span class="p">(),</span>  <span class="n">onChangeEvent</span> <span class="p">:</span>  <span class="p">{</span>  <span class="kc">_</span>  <span class="k">in</span>  <span class="p">})</span>
           <span class="k">return</span>  <span class="n">Group</span>  <span class="p">{</span>
               <span class="n">initialView</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
   <span class="cp">#endif</span>
</pre></div>

 <p>
Custom Template oluşturmak ve hazır template bulabileceğiniz birkaç kaynak aşağıdaki gibidir:
</p>
</div>

 <h4> <a id="referenslar" class="anchor" href="#referenslar">¶</a>Referenslar</h4> <div class="outline-text-4" id="text-org228548e">
 <ol class="org-ol"> <li> <a href="https://www.kodeco.com/26582967-xcode-project-and-file-templates">Kodeco</a>: Bu kaynakta kapsamlı bir şekilde custom template oluşturma süreci anlatılıyor.</li>

 <li> <a href="https://github.com/topics/xcode-templates">Github Xcode Templates</a>: Github’da “xcode-templates” topic’i ile genellikle proje mimarileri için oluşturulmuş template repolarına ulaşabilirsiniz.</li>
</ol> <p>
Özetle, bu adımlar, Custom File Template’lerinizi oluşturmak için iyi bir başlangıç noktası olabilir. Ancak, her projenin kendine özgü ihtiyaçları olduğunu ve bu adımların projenizin spesifik gereksinimlerine göre uyarlanması gerektiğini unutmamak önemlidir.
Bu sayede, projenizin verimliliğini ve tutarlılığını artırarak, uygulama geliştirme sürecinizin kalitesini yükseltebilirsiniz.
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/xcode_project_custom_file_templates/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/xcode_project_custom_file_templates/index.html</guid>
  <pubDate>Tue, 11 Jul 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Aklımda Kalanlar: Jake Wharton ile Röportaj</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/betulsandikci">Betül Sandıkçı</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org1c60d2c">

 <div id="org0b5949c" class="figure">
 <p> <img src="/img/AklimdaKalanlarTitle.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Photo by  <a href="https://unsplash.com/@goian">Ian Schneider</a> on  <a href="https://unsplash.com/?utm_source=medium&utm_medium=referral">Unsplash</a></p>
</div>

 <p>
Merhabalar sevgili Mobilen okuyucuları, bu sayı için yazacağım yazıma tamamen tesadüf eseri Jorge Castillo’nun Jake Wharton’la yaptığı  <a href="https://newsletter.jorgecastillo.dev/p/effective-interviews-jake-wharton">röportajı</a> okuyunca karar verdim.
</p>

 <p>
Röportaja ilk denk geldiğimde bir an durdum açıp okumadan önce. Çünkü bir Android Developer olarak malum topluluk içinde bir efsanedir kendisi. Bazıları abartıldığını düşünürken bazıları da hakkında kilise içindeki İsa’dır ve tartışmasızdır demektedir. Ama herkesin üzerinde mutabık olduğu bir konu varsa o da Jake’in üretkenliğidir.
</p>

 <p>
Topluluğu’u bir kenara bırakırsak onunla ilgili bildiklerim, duyumlarım, izlenimlerim neler? Bir çırpıda aklıma gelenleri özetlemek gerekirse; Androidle ilgili eksik ya da ağır işleyen ne varsa Jake’in düzenlemek için elini atıp yazdığı bir kütüphane var. Androidde güzel, kullanışlı ne varsa da Jake temellerini atmış ve sonunda Google da bu geliştirmeleri içeri almış, SDK’nın parçası haline getirmiş. Tüm bunların üstüne tabiki üretkenliği ve biraz da lafını sözünü sakınmayışı geliyor aklıma. Sakınmaması için sağlam gerekçeleri var ne de olsa :).
</p>
</div>

 <h3> <a id="androidrsquoe-başlama-macerası" class="anchor" href="#androidrsquoe-başlama-macerası">¶</a>Android’e Başlama Macerası</h3> <div class="outline-text-3" id="text-orgfa1f9c9">
 <p>
JW ve Android hikayesi Google’ın 2007’de 10 milyon dolar ödüllü  <a href="https://android-developers.googleblog.com/2007/11/posted-by-jason-chen-android-advocate.html">Android Developer Challange</a>’ı açıklamasıyla başlıyor. JW daha üniversitenin henüz başında ve  <code>challange</code>’ı kazanarak gerçek hayatta bir işte çalışmak zorunda olmamak için denemelere başlıyor.  <code>Challange</code> için tasarladığı uygulama bir çizim uygulaması. İşin içine girdikçe ve derinleştikçe kazın ayağının farklı olduğunu anlıyor. Bu 10 milyon basitçe kazanılabilecek bir miktar değil. Yeterince iyi olmadığını düşündüğü için projesini göndermekten vazgeçiyor. İyi ki bu tekrarlayan bir hastalık haline gelmemiş :D.
</p>

 <p>
Android Geliştirici olmaya karar verene değin daldan dala atlamış, başka alanlar denemiş. Ama en sonunda Androidde devam etmeye karar vermiş. Karar verme sebebi benimle ve birçok güncel Android Geliştirici ile aynı. Mac alacak kadar parası yok, Microsoft ölüyor ve gelecek mobilde. Gayet rasyonel. Romantik bir gerekçesi yok. Çünkü hiç kimse bir sabah uykusundan Android Android Android diyerek ya da başka bir teknolojiyi sayıklayarak uyanmıyor. Seçimlerimiz güncel gerçeklerimize ve bu gerçeklerle örtüşen tutkularımıza bağlı olarak şekilleniyor.
</p>

 <p>
JW’ın Android geliştici olma hikayesi tanıdık evet. Ama farklılaşan kısmı sonrası. JW’ın buraya kadarki hikayesinde beni düşündüren ve ibret aldığım şeyler var. Bir kez daha günceli takip etmenin önemi hemencik yakaladı beni. Sonunda bir ödül kazanılmayacak bile olsa bir müsabakaya girmek kendini, sınırlarını zorlamak çok önemli. Kaybetsen bile kazandıracak bir yöntem bu her şekilde. Tatmin edici bir deneyim. Burada Google’ın ve community’nin etkisinden de bahsetmek lazım. Sınırlarını zorlaman için birilerinin bir sınır koyması lazım doğal olarak önce. Community’ler ve teknoloji sahipleri de bu tür challangelar ile hem safları sıklaştırıyor hem teknolojilerini daha geniş çembere yayıyor hem de genç yeteneklerin ortaya çıkmasına vesile oluyor. Bence burada kökten uca kadar alınacak ibretler var. Çalışanların talepleri ve onları yönetenlerin vizyonu açısından. Takımlar arası müsabakalar keyifli, sıradışı ve eğlenceli olabilir mesela. Kim bilir eğer uslu çocuklar olurlarsa Şirinleri görmenin yanında nice JW’lar bile sıyrılabilir bu tür müsabakalarda.
</p>

 <p>
Hikayede dikkatimi çeken noktalardan diğer birisi de başlangıç için bir çizim uygulaması yapmayı seçmiş olması. Yeni birisi başlarken sonucu görmek istiyor. Çok doğru bir yerden başlamış kanaatimce. Artık ne haddimeyse JW’a doğru başlamış yanlış başlamış demek :), Ama dedim gitti işte. Mobile özel o ekranı tanımak açısından, yaptıklarının direk sonucunu görmek açısından aşırı doğru bir yöntem bence. Ben de  <b>Compose</b>’u öğrenirken iç içe kareler çizerek başlamıştım. İnsan neyi doğru yapıp yapmadığını somut olarak, uğraşmadan görmek istiyor. Deneme yanılma şeklinde öğrenmede denedikten sonra yanılıp yanılmadığını anlayana kadar geçen süre kısalıyor ve verimlilik artıyor böylece. Bir konuyu yeni öğrenenlere UI’da kısa yoldan tepki alabilecekleri şekilde başlatmak güzel bir yöntem olabilir ve genç yetenekler için özellikle uygulanabilir.
</p>

 <p>
Jake ilk işine Android Developer olarak başlamıyor. Java miras kodlu bir server’da çalışarak başlıyor. Onun zamanında moda C# yazarak para kazanmak. Ama nedense talihin yardımıyla Java ile başlıyor mesleğe. Projeyi kurcalarken yeni şeyler keşfediyor. Projeyi  <b>Git</b>’e geçiriyor. Projenin altyapısını farklı bir modele taşırken operasyonun her yönünü görüyor. Bu deneyimden sonra projenin altyapı görüntülemesini bir mobil uygulama üzerinden kontrol etme fikri aklına geliyor. Tam da bu anda ta taaa ilk açık kaynak kodlu kütüphanesini yayımlıyor ve bir Android Geliştiricisi oluveriyor. Sonrasında meşhur şirket  <a href="https://github.com/square">Square</a>’e Android Geliştirici olarak geçiyor. Hikayesine ve üretmeye orada devam ediyor.
</p>
</div>

 <h3> <a id="açık-kaynak-koda-bakışı" class="anchor" href="#açık-kaynak-koda-bakışı">¶</a>Açık Kaynak Koda Bakışı</h3> <div class="outline-text-3" id="text-org8015f62">
 <p>
Açık kaynak koda geliştirme yapmaya tamamen bencilce bir yerden başlıyor. Kendi ihtiyaçlarını karşılamak için proje üretiyor ve bunu  <a href="https://github.com/">Github</a>’a yüklüyor. O zamanlar private repolar ücretli olduğu için de private yapmaya gerek duymuyor. Böylelikle kod paylaşma serüveni doğal olarak duygusal sebeplerle başlamış oluyor :D. Bir kütüphaneyi ya da aracı yazarken community’nin ya da başkalarının ihtiyaçlarını gözeterek ve daha iyi olsunlar diyerek başlamıyor. Niyetinde kimseyi memnun etmek de yok. Kendi yazdığı ve paylaştığı projelere başkalarının dahil olması, birlikte üretmek zevkli, keyifli, güzel ama motivasyon kaynağı bu olamaz düşüncesinde.
</p>

 <p>
Bunalmamak ve motivasyon kaybına uğramamak için başkalarıyla gerektiğinde empati yapıyor gerektiğinde de onları görmezden geliyor. Motivasyonunu korumak için yaptığı şey çok basit. Temelde benim neye ihtiyacım var diye düşünmek ve ona göre hareket etmek. Sıfır noktasında düşüncelerle o kadar boğuşuyoruz ki başlamadan bırakıyoruz işlerimizi. Maskeyi önce kendimize takmalıyız.
</p>

 <p>
Açık kaynak kodlu yazılım üretmenin en faydalı yanı başka insanlarla yardımlaşmak. Profesyonel hayatta çalışamayacağın, imkanın olmayacak insanlarla aynı projede yer almak çok tatmin edici. Takip ettiğin, imrendiğin belki de onların yerinde olmak istediğin insanlarla bir anlamda iş arkadaşı olma şansı sunuyor açık kaynak koda destek vermek. Minimumda başkalarına yardım etme ve faydalı olma duygusu yaşatıyor insana. Maksimumda ise profesyonel olarak sonsuz ihtimallerin kapısını açıyor. Bu aralık zannımca fena bir aralık değil bir geliştirici için.
</p>

 <p>
Açık kaynak kodu geliştirirken Jake’in tavsiyesi kodu olabildiğince küçük ve odaklı tutmak. Her %15 fazla kod için aynı oranda geliştiriciye ihtiyaç var. Bu da bir süre sonra kar topu etkisi ile baş edilmez bir hale getiriyor projeyi. Herkesin ihtiyaçlarına kulak vermek ve ihtimallere göre geliştirme yapmak, sonrasında kodun sürdürülmesini imkansız hale getiriyor. Sürdürülemeyen kod da ölmeye mahkum oluyor. Çünkü bir süre sonra yapılması gereken hayati geliştirmeler bile yapılamayacak hale geliyor. Bu aslında sadece açık kaynak kod için değil herhangi bir yerde yazdığımız bir fonksiyon için de geçerli.
</p>

 <p>
İhtiyacı belirleyip bunun dışına çıkmamak anahtar nokta.  <b>Solid’</b> in S’i olan  <b>Single Responsibility</b> prensibi burada devreye giriyor. Ancak bunu uygulayabilmek prensibin anlamını bilmekten elbette çok çok daha zor. İster açık kaynak ister küçük bir method ne olduğu farketmeksizin baştan amacını iyi belirlemek ve sonrasında buna sadık kalmak ve en önemlisi Hayır demenin gücünü kullanmak. Doğru yerde ve zamanda “ <i>Hayır diyebilmek</i>” çok önemli ve işlerin karmaşıklaşmasını engelliyor. Memnun edicilik değil iş bitiricilik önemli oluyor günün sonunda.
</p>
</div>

 <h3> <a id="jwrsquonin-google-macerası" class="anchor" href="#jwrsquonin-google-macerası">¶</a>JW’nin Google Macerası</h3> <div class="outline-text-3" id="text-orga25ecd2">
 <p>
Gelelim Jake’in kimilerine göre yarıda bıraktığı Google tecrübesine. Tabiki doğası gereği magazinsel bir mevzu olduğu için dikkat çekmesi normal. Benim anladığım Square’den Google’a geçerken bir yapılacaklar listesi varmış elinde. Kaldığı süre boyunca da bunların yapılması için domino etkisi yaratmayı başarmış. Ancak günün sonunda fazla bürokrasi ve teknik sınırlamalardan dolayı yılmış, usanmış. Geliştiriciye geliştirmek ile gerçek dünya problemlerine çözüm geliştirmek arasında kalınca da gerçek dünya problemlerini tercih etmiş. Bu benim yolum benim tercihim diyor. Square’deki macerasına kaldığı yerden devam etmeye karar vermiş ve geri dönmüş.
</p>

 <p>
Verimli hissedemediği noktada bırakmaya karar vermesi oldukça ilham verici. Her ne kadar kolay gibi görünse de geldiğin yere geri dönmek cesaret gerektiren bir şey. Herşey bir kenara sadece egosal açıdan bile zor gelebilir. İçeride dışarıda olduğu kadar etkin olamadığını farkettiğinde gemiyi terketmeyi seçmiş. Ben mesela yapabilir miydim diye düşünüyorum? Bir yönüm çok yapılabilir dese de işin için de olduğumda bu kararı alırken oldukça zorlanacağımı, tüm cesaret toplamam gerekeceğini biliyorum. Neticede “ <a href="https://medium.com/incerto/what-do-i-mean-by-skin-in-the-game-my-own-version-cc858dc73260">skin in the game</a>” diye bir şey var.
</p>

 <p>
Jake’in CashApp’teki günleri aşırı planlı, düzenli, moda mod geçmiyormuş. Genellikle zamanının büyük kısmını açık kaynak koda ayırıyormuş. Kalan zamanda da küçük işleri toparlamak, PR’ları kontrol etmek, işleri adımlamakla geçiyormuş. Square açık kaynak kodu mesai dışı bir iş gibi görmüyor aksine bizatihi işin kendisi olarak görüyor ve destekliyor. Çünkü yeteneği içeri almak kadar onu tutmak, beslemek ve parlatmak da çok önemli. Takımlara ve yöneticilere düşecek bir hisse de bu olabilir belki.
</p>

 <p>
Toplantı konusu teknik insanların profesyonel dünyada en sıkıcı bulduğu konuların başında geliyor. JW bu konuda kalabalık olanların seyrek olması en iyisi, bunun dışında bireysel bağlantılar daha verimli oluyor görüşünde çoğumuz gibi. Toplantı konusunda da  <i>Solid</i>’in  <i>S</i>’ini kullanmakta fayda var gibi :D .
</p>

 <p>
İşin başındakilere en önemli tavsiyelerinden birisi ürünün vizyonuna kendinizi aşırı kaptırmayın. Böyle olursa kişi kendi başarı duygusunu ürünün iniş çıkışlarına bağlayabiliyor. Ancak önemli olan zorlu teknik sorunları bulmak ve çözmeye odaklanmak. Ürünler geçicidir oysa bu yetkinlikler kalıcıdır. Özetle Jake ürünü önemseyin ama yeteri kadar, bir dengesi olsun görüşünde. Odaklılık konusunda denge bulunması gerektiği ve bıçağını bileylemenin en önemlisi olduğuna katılıyorum. Senin bıçağın keskinse gelen her şeyi kesersin. Ama bıçağı kütmemek için de neyi ne kadar keseceğini bilmelisin ;) .
</p>

 <p>
Üretkenliği korumak için Jake’in taktiklerinden birisi çok fazla çalışmaya gerek kalmadan yapılabilecek bir sürü kolay görevleri halletmek. Bu taktik zihinsel olarak gevşemeyi sağlarken, diğerleri gözünde de üretkenliğinizi korumayı sağlıyor . Aynı taktik tükenmişlik hissi yaşandıktan sonra ilerleme hissini yeniden kazanmaya yardımcı olmak için de kullanılabilir.
</p>
</div>

 <h3> <a id="zaman-yönetimi-ve-çocuklu-hayat" class="anchor" href="#zaman-yönetimi-ve-çocuklu-hayat">¶</a>Zaman Yönetimi ve Çocuklu Hayat</h3> <div class="outline-text-3" id="text-org7e80c66">
 <p>
Çocuklu hayata geçtikten sonra zamanın daha da önemli bir kaynak haline geldiğinden ve onu korumak ve boşa sarfetmemek için de elinden geleni yaptığından bahsediyor. Kimsenin bölemeyeceği, bildirimlerin kapalı olduğu büyük bloklu zaman dilimleri yaratmak, müsaitliğinin başkaları ile eşzamanlı olamayacağı konusunda beklentileri yönetmek, arta kalan yetişemediği küçük işlerde de başkalarına güvenmek; Jake’in hayatında uyguladığı bazı yöntemler. Yan projelerde çalışabilmek için az az küçük zaman parçalarını değerlendiriyormuş. Aralardaki küçük zaman dilimlerinde az az çalışarak işlere odaklanmak tek bir anda o işi bitirmeye çalışmaktan çok daha motive edici diyor.
</p>

 <p>
Ayrıca zaman kısıtının onu çok daha verimli hale getirdiğini çünkü hangi projelerin zamanını aldığını ve bunların onu gerçekten zaman ayırmaya değip değmeyeceğini düşünmeye zorladığından bahsediyor. Sınırsız beyin gücü ve zaman verildiğinde, aklımıza gelen her yeni şeyin peşine düşeriz. Gerçekten önemli olanın ne olduğunu unuturuz. Ancak sabahları ve akşamları tamamen ortadan kalktığında ve iyi bir uyku ihtiyacı arttığında, o gün sahip olabileceğimiz 2 saatin değeri 10 kat artacaktır. Zamanımız kıymetli, doğru şekilde doğru yerlere harcamalıyız. Zaman en önemli maaliyet kalemidir.
</p>
</div>

 <h3> <a id="teknik-yetiler-yöneticilik-ve-hobiler" class="anchor" href="#teknik-yetiler-yöneticilik-ve-hobiler">¶</a>Teknik Yetiler, Yöneticilik ve Hobiler</h3> <div class="outline-text-3" id="text-org9242665">
 <p>
Röportajın kalan kısımlarında Jake  <a href="https://square.github.io/dagger/">Dagger</a> 1 ve 2 arasındaki farktan, hobisi olan araba yarışlarından ve arabalardan, şu anda üzerinde çalıştığı ve onu heyecanlandıran projelerden, ileride yönetici olmayı düşünüp düşünmediğinden ve daha başka küçük küçük bir çok detaydan bahsediyor.
</p>

 <p>
Jake kendisi hakkında  <a href="https://developers.google.com/community/experts/directory/profile/profile-jake-wharton">Google Experts</a> sayfasında; “Temiz sınırlara, iyi soyutlamalara ve sezgisel API’lere sahip açık kaynak kodlu kütüphaneler ve araçlar üzerinde çalışan Android Geliştiricisi. Bazen. Ayrıca ara sıra bu kütüphanaleri kullanan bir uygulama üzerinde çalışır.” şeklinde tanımlamış. Kendisini tanımlama şekli ve röportaj birleşince çok güzel örtüşüyor zihnimde. Açık kaynak koda odaklanmış motive bir hayatı ve arta kalan zamanlarda çalıştığı  <a href="https://cash.app/">CashApp</a> diye bir gerçek hayat projesi var ve  <a href="https://code.cash.app/">teknik blogu da</a> faydali.
</p>

 <p>
Nicedir bildiğim ama röportajdan sonra daha emin olduğum şey ise verimlilik ve motivasyon açısından Hayır demenin gücü. Bu yeti yoksa da öğrenilmeli. Neye hayır dediğimiz ve deme şeklimiz kariyer yolumuzu ve onun zorluklarını belirliyor neticede.
</p>

 <p>
Son olarak da Jake’in bir tavsiyesi ile sonlandıralım yazımızı. Takıldığınız yerde mutlaka mola verin, yürüyüş yapın, çay-kahve için, film izleyin, sonra geri gelin bir daha uğraşın. Çünkü programlama yaratıcılık isteyen bir şeydir, zorlamayın.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org0bd15d5">
 <p>
 <a href="https://newsletter.jorgecastillo.dev/p/effective-interviews-jake-wharton">Jack Wharton Röportajı</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/aklimda_kalanlar_jake_wharton/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/aklimda_kalanlar_jake_wharton/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Android Studio Bot</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/tu%C4%9Fbaberk">Tuğba Berk</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org51ea3e8">
 <p>
Google IO etkinliği, 10 Mayıs 2023 tarihinde gerçekleşti. Bu etkinlikte Google’ın yapay zeka desteğini mevcut araçlarına entegre ettiğini gördük.  <code>Google Play Store</code>,  <code>Google Haritalar</code>,  <code>Google Mail</code> ve  <code>Android Studio</code> gibi birçok araç bu yenilikler arasında yer aldı.
</p>

 <p>
Yapay zekadaki bu gelişmeler, kod yazarken bize çeşitli faydalar sunmaya başladı bile. Bu yeni yapay zeka gelişmelerine ayak uydurabilen yazılımcılar olmak istiyorsak, Android Studio Bot’u hızlı bir şekilde öğrenmek önemli görünüyor. Kendi rollerimizi ve bu sistem içindeki araçlarımızı iyi anlamamız gerekebilir.
</p>

 <p>
Peki, Android Studio Bot nedir? Kimler kullanır? Kullanmalı mıyız? Nasıl kuracağız? gibi sorulara cevap verelim.
</p>
</div>

 <h3> <a id="android-studio-bot-nedir" class="anchor" href="#android-studio-bot-nedir">¶</a>Android Studio Bot Nedir?</h3> <div class="outline-text-3" id="text-orgfe9dfc0">
 <p>
 <a href="https://developer.android.com/studio/preview/studio-bot">Android Studio Bot</a> bir yapay zeka asistanıdır.Android geliştiricilerin kod yazmalarına ve hatalarını çözmelerine yardımcı olmak için kullanabilecekleri bir araçtır. Android Studio Bot,  <a href="https://blog.google/technology/developers/google-colab-ai-coding-features/">Codey</a> adlı yapay zeka asistanının AI yeteneklerini kullanarak geliştiricilere yardımcı olur. Codey, Google’ın temel dil modeli olan  <a href="https://blog.google/technology/ai/google-palm-2-ai-large-language-model/">PaLM 2</a>’yi kullanarak geliştirilen bir yapay zeka asistanıdır. Aslında, Google Colab ile çalışabilen bir bot diyebiliriz. Kısacası, Studio Bot, Codey’in sunduğu yetenekleri Android Studio ortamında daha kolay ve erişilebilir hale getirmiştir.
</p>

 <p>
“ChatGPT” ve “Copilot” gibi araçlar mevcut olmasına rağmen, neden Studio Bot’a ihtiyaç duyacağımızı sorabilirsiniz. Benim cevabım şu: “Android Studio’dan çıkmadan kod araştırması yapmak ve sekme açmakla uğraşmamak daha pratik ve hoş olmaz mı?” Elbette, bu aracın sağladığı bilginin doğruluğu kullanmasında en önemli faktör olacaktır. Bu nedenle, doğruluğunu sağlamak için nasıl kullanmamız gerektiğini öğrenmeli ve deneyimlemeliyiz.
</p>

 <p>
Google, Studio Bot kullanımını kolaylaştıran kısayollar hakkında bilgi verdi. Bu kısayollar sayesinde önemli bir zaman tasarrufu sağlanacağını düşünüyorum. İşte bazı örnekler:
</p>

 <ul class="org-ul"> <li>Tek tık ile kod ekleme</li>
</ul> <p>
Studio Bot, oluşturduğu kodun yanında akıllı eylemler sunar. Bu eylemlerden biri, kodu hızlı bir şekilde açık editöre eklemenizi sağlar. Örneğin, bir internet izni kullanmanız gerektiği cevaplarda yer alıyorsa, “kod ekle” aksiyonunu tıkladığınızda Studio Bot, internet iznini manifest dosyasına ekler. Ayrıca, kodun nereye yazılması gerektiğini bilir, bu da bizi kopyala-yapıştır işlemlerinden kurtarır.
</p>

 <ul class="org-ul"> <li>Yardımcı kaynaklara erişmek</li>
</ul> <p>
Belirli konular için, Studio Bot ilgili belgelendirme sayfasını açarak daha fazla bilgi sağlama seçeneği sunar. Size kaynak linklerine erişim sağlar, yani “oku, öğren, daha çok soru sor” gibi bir şey =)
</p>

 <ul class="org-ul"> <li>Bot’a kod’un içinden direkt soru sormak</li>
</ul> <p>
Kod düzenleyicisinde metni seçip sağ tıklayarak ve “ <code>Ask Studio Bot</code>” işlemini seçerek sohbet kutusunu seçilen kodla doldurabiliriz. Oradan, kodu gönderip göndermeme konusunda karar verebiliriz. Studio Bot, açık izniniz olmadan kod göndermeyecektir. “Ask Studio Bot” ayrıca kod düzenleyicisindeki uyarıları ve hataları gidermeniz için size yardımcı olabilir.
</p>
</div>

 <h3> <a id="android-studio-bot-nasıl-kurulur" class="anchor" href="#android-studio-bot-nasıl-kurulur">¶</a>Android Studio Bot Nasıl Kurulur?</h3> <div class="outline-text-3" id="text-orgc644459">
 <p>
Studio Bot’u kurma ve kullanma konusunda bazı sorular sormaya başladığınızı düşünerek size üzücü bir haber vermek istiyorum. Şu anda Google, Studio Bot’u yalnızca ABD’de kullanıma sunmuştur. Bu nedenle, sadece ABD’deki kullanıcılar ücretsiz olarak erişebilirler.
</p>

 <p>
Ancak, Studio Bot’u nasıl kuracağınızı bilmek isterseniz, aşağıdaki adımları takip edebilirsiniz:
</p>

 <ol class="org-ol"> <li>İlk olarak, en son sürüm olan Android Studio Hedgehog | 2023.1.1 Canary 4’ü indirmeniz gerekmektedir.</li>
 <li>Studio Bot’u daha etkin bir şekilde kullanmanız için veri paylaşma iznini onaylamanızı tavsiye ediyoruz. Bu izni etkinleştirmek için “Android Studio > Ayarlar > Görünüm ve Davranış > Sistem Ayarları > Veri Paylaşımı” yolunu izleyebilirsiniz.</li>
 <li>Var olan bir projeyi açın veya yeni bir proje oluşturun. Ardından “Görünüm > Araç Pencereleri > Studio Bot” seçeneğine tıklayın.</li>
 <li>Eğer istenirse, Google hesabınıza giriş yapın. Artık Studio Bot’u kullanmaya başlayabilirsiniz.</li>
</ol> <p>
Bu şekilde Studio Bot’u kurabilir ve kullanabilirsiniz. Ancak unutmayın, şu anda sadece ABD’deki kullanıcılar ücretsiz olarak erişilebilmektedir.
</p>
</div>

 <h3> <a id="android-studio-botrsquou-kullanmalı-mıyız" class="anchor" href="#android-studio-botrsquou-kullanmalı-mıyız">¶</a>Android Studio Bot’u Kullanmalı mıyız?</h3> <div class="outline-text-3" id="text-orge17ae3a">
 <p>
Gelin, Studio Bot’u kullanmalı mıyız konusuna değinelim. Şahsi fikrime göre, dünyada gelişen ve değişen şeylere katılmak ve bu dönüşümün bir parçası olmak, işimizin en keyifli yanıdır. Aslında, bu keyifli deneyimi kaçırmamak için hepinizi teşvik etmek isterim.
</p>

 <p>
Ancak, burada dikkat etmemiz gereken önemli bir nokta var: Studio Bot, öğrenmekte olan bir çocuğun sizin elinizde büyüyeceğinin bilincinde olmanızı gerektirir ve şirketinizin özel bilgilerini bu platform üzerinden paylaşmamalısınız. İyi olduğu kadar kötülerin de kod yazabileceğini unutmamamız önemlidir. Ve bu yeni dünyaya biraz daha kontrollü bir şekilde yaklaşmamız gerekmektedir.
</p>

 <p>
Sonuç olarak, yapay zeka teknolojileri ile olan etkileşimimiz artıyor ve gelişiyor. Studio Bot gibi araçlar, geliştiricilerin kod yazma sürecini kolaylaştırmayı ve verimliliği artırmayı hedefliyor. Bu nedenle, yeni teknolojilere ve araçlara açık olmak, gelişmeleri takip etmek ve deneyimlemek önemlidir. Ancak, her aracın avantajlarını ve dezavantajlarını anlamak ve doğru bir şekilde kullanmak da gereklidir.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org52dd4f6">
 <p>
 <a href="https://developer.android.com/studio/preview/studio-bot">Android Studio Bot Preview</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/android_studio_bot/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/android_studio_bot/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Instagram’in Hikayesi</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org20294ab">
 <p>
Sosyal hayatımızın en önemli aktörlerinden birisi olan Instagram’ın geçmişine dair  <a href="https://medium.com/@katiemay36/transforming-burbn-to-instagram-b66245881d02">Burbn’in Instagram’a dönüşümü</a> yazısına okudum.
</p>

 <p>
Yazıyı okumanızı tavsiye ederim.
Bu yazıda rastladığım bir konu  <code>feature bloat</code> karmaşasına karşı yaklaşım.
</p>

 <p>
Instagram’ın Foursquare gibi bir çok yeteneğin yanına harici yetenekleri de yapmaya çalıştığı zamanlardan yalnızca  <code>fotoğraf yayınlama</code> +  <code>filtre uygulama</code> +  <code>like</code> edebilme yeteneklerine odaklanması sayesinde ürün tanımı daha oturaklı bir çerçeveye çekilmiş ve bu Instagram’ın hızlı yükselişinde önemli rol oynamış.
</p>

 <p>
Bana Zawinski’nin aşırı özellikle şişen uygulamalar hakkındaki alaycı ifadesini hatırlattı:
</p>
</div>

 <h3> <a id="zawinskirsquos-law" class="anchor" href="#zawinskirsquos-law">¶</a>Zawinski’s Law</h3> <div class="outline-text-3" id="text-orgb04d433">
 <blockquote>
 <p>
“Every program attempts to expand until it can read mail. Those programs which cannot so expand are replaced by ones which can.”
</p>

 <p>
“Her program email okuyucusu olana kadar gelişir, gelişmeyenler ise gelişenler ile değiştirilir.”
—  <a href="https://www.jwz.org/about.html">Jamie Zawinski</a>
</p>
</blockquote>

 <p>
Jamie  <a href="http://www.catb.org/jargon/html/Z/Zawinskis-Law.html">Zawinski’s Law</a> bu kurala “Law of Software Envelopment” diyor.
Bu tuzağa çok yakalanmadan ürünlerin karakteristiğinin ve sınırlarının çizilmesi gerekiyor.
Burada işin içine elbette sunulan özelliklerin düzgün bir kullanıcı deneyim tasarımı ile kullanıcının karşısına çıkması gibi derin konulara doğru ilerliyor.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-orge5ec9d8">
 <ul class="org-ul"> <li> <a href="https://medium.com/@katiemay36/transforming-burbn-to-instagram-b66245881d02">Burbn’in Instagram’a dönüşümü</a></li>
 <li> <a href="http://www.catb.org/jargon/html/Z/Zawinskis-Law.html">Zawinski’s law</a></li>
</ul></div>
</div>]]></description>
  <link>https://mobilen.art/news/instagramin_hikayesi/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/instagramin_hikayesi/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS SwiftUI Swipe Actions</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org63e5b29">

 <div id="orgd72ec96" class="figure">
 <p> <img src="/img/SwipeActions.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Örnek Swipe Actions</p>
</div>
</div>
 <h3> <a id="swipe-actions-nedir" class="anchor" href="#swipe-actions-nedir">¶</a>Swipe Actions nedir?</h3> <div class="outline-text-3" id="text-orgbd247a9">
 <p>
Merhabalar, herhangi bir ui elemanının üzerinden  <code>swipe</code> ile çıkan aksiyonlar iOS kullanıcı deneyiminde önemli rol oynuyor.
</p>

 <p>
Kullanıcı deneyimi açısından view’ın altında gizli, sağından veya solundan çıkan bu aksiyonlar görünmüyor olsa bile özellikle iOS kullanıcıları bu davranışı listelerde arayabiliyor.
</p>

 <p>
Davranış olarak sağ ve sol demek yerine burada tercih edilen jargon  <code>leading</code> ve  <code>trailing</code>, bunun başlıca sebebi dillerin sağdan sola veya soldan sağa olarak 2 farklı şekilde yazılabilmesi.
Soldan sağa yazılan dillerde sol-leading, sağ trailing iken, arapça-farsça gibi dillerde sol-trailing, sağ ise leading olmakta.
</p>

 <p>
Swipe aksiyonları yazabilmek için yardımcı araçlar mevcut.
</p>

 <p>
 <code>Native</code> olarak SwiftUI tarafından iOS 15 ile SwiftUI List’elerine eklendi.
 <a href="https://developer.apple.com/documentation/swiftui/view/swipeactions(edge:allowsfullswipe:content:)">iOS 15 SwiftUI SwipeActions</a> adresinden native yöntem incelenebilir.
</p>

 <p>
Ancak iOS-14 destekliyorsanız veya herhangi bir SwiftUI view’e swipe aksiyonları eklemek isterseniz bunun için güzel bir SwiftUI component’i açık kaynak olarak geliştirilip github’a  <code>spm</code> destekli olarak koyulmuş.
</p>

 <p>
Bu yazımızda  <a href="https://github.com/aheze/SwipeActions">Açık Kaynak SwipeActions Reposu</a>’nu inceleyeceğiz.
</p>
</div>

 <h3> <a id="swipeactions-kullanımı" class="anchor" href="#swipeactions-kullanımı">¶</a>SwipeActions Kullanımı</h3> <div class="outline-text-3" id="text-orga42b122">
 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>
   <span class="kd">import</span>  <span class="nc">SwipeActions</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">SwipeView</span>  <span class="p">{</span>
               <span class="n">Text</span> <span class="p">(</span> <span class="s">"Hello"</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">frame</span> <span class="p">(</span> <span class="n">maxWidth</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">infinity</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">padding</span> <span class="p">(.</span> <span class="n">vertical</span> <span class="p">,</span>  <span class="mi">32</span> <span class="p">)</span>
                 <span class="p">.</span> <span class="n">background</span> <span class="p">(</span> <span class="n">Color</span> <span class="p">.</span> <span class="n">blue</span> <span class="p">.</span> <span class="n">opacity</span> <span class="p">(</span> <span class="mf">0.1</span> <span class="p">))</span>
                 <span class="p">.</span> <span class="n">cornerRadius</span> <span class="p">(</span> <span class="mi">32</span> <span class="p">)</span>
           <span class="p">}</span>  <span class="n">trailingActions</span> <span class="p">:</span>  <span class="p">{</span>  <span class="kc">_</span>  <span class="k">in</span>
               <span class="n">SwipeAction</span> <span class="p">(</span> <span class="s">"World"</span> <span class="p">)</span>  <span class="p">{</span>
                   <span class="bp">print</span> <span class="p">(</span> <span class="s">"Tapped!"</span> <span class="p">)</span>
               <span class="p">}</span>
           <span class="p">}</span>
             <span class="p">.</span> <span class="n">padding</span> <span class="p">()</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h3> <a id="kaynak-kod-okuma-codepreferencekeycode-kullanımı" class="anchor" href="#kaynak-kod-okuma-codepreferencekeycode-kullanımı">¶</a>Kaynak Kod Okuma:  <code>PreferenceKey</code> kullanımı</h3> <div class="outline-text-3" id="text-orgc92a4ea">
 <p>
Veri iletişimi view componentleri arasında Environment Objeler uzerinden  <code>Parent</code> →  <code>Child</code> view yönünde olabiliyor.
Veya data binding ile  <code>@Binding</code> çift taraflı  <code>reactive</code> şekilde sağlanabiliyor.
</p>

 <p>
PreferenceKey ile olan bu veri iletişiminde ise diğer bir ihtiyaç olan ise  <code>child</code> →  <code>parent</code> arasında veri geçişi yapabiliyoruz.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">struct</span>  <span class="nc">AllowSwipeToTriggerKey</span> <span class="p">:</span>  <span class="n">PreferenceKey</span>  <span class="p">{</span>
       <span class="kd">static</span>  <span class="kd">var</span>  <span class="nv">defaultValue</span> <span class="p">:</span>  <span class="nb">Bool</span> <span class="p">?</span>  <span class="p">=</span>  <span class="kc">nil</span>
       <span class="kd">static</span>  <span class="kd">func</span>  <span class="nf">reduce</span> <span class="p">(</span> <span class="n">value</span> <span class="p">:</span>  <span class="kr">inout</span>  <span class="nb">Bool</span> <span class="p">?,</span>  <span class="n">nextValue</span> <span class="p">:</span>  <span class="p">()</span>  <span class="p">-></span>  <span class="nb">Bool</span> <span class="p">?)</span>
       <span class="p">{</span>  <span class="n">value</span>  <span class="p">=</span>  <span class="n">nextValue</span> <span class="p">()</span>  <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Preference key tanımlarken ihtiyaç duyulan  <code>PreferenceKey</code> protocol’unu  <code>conform</code> etmek.
Bunun için bir varsayılan değer  <code>defaultValue</code> gerekiyor.
Ayrıca ikinci olarak  <code>reduce</code> fonksiyonu, bu fonksiyon dışarıdan sağlanan değerin preference olarak set edilmesine müdahale edilebilecek noktayı sağlıyor.
</p>

 <p>
Kullanımı için 2 tane  <code>modifier</code>’imiz mevcut:  <code>preference</code> ve  <code>onPreferenceChange</code>.
</p>

 <p>
Preference Key ile veriyi yukarı aktarma  <a href="https://github.com/aheze/SwipeActions/blob/main/Sources/SwipeActions.swift#L328">burada</a> gorebilirsiniz:
</p>
 <div class="highlight"> <pre> <span></span>   <span class="n">view</span> <span class="p">.</span> <span class="n">onPreferenceChange</span> <span class="p">(</span> <span class="n">AllowSwipeToTriggerKey</span> <span class="p">.</span> <span class="kc">self</span> <span class="p">)</span>  <span class="p">{</span>  <span class="n">allow</span>  <span class="k">in</span>
       <span class="c1">/// Unwrap the value first (if it's not the edge action, `allow` is `nil`).</span>
       <span class="k">if</span>  <span class="kd">let</span>  <span class="nv">allow</span>  <span class="p">{</span>
           <span class="n">swipeToTriggerLeadingEdge</span>  <span class="p">=</span>  <span class="n">allow</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Ayrıca apple sdk’inde de  <code>navigationTitle</code> modifier’i ile  <code>preference key</code> kullanılarak  <code>child</code> üzerinden çağırılan bir method ile üst view’deki  <code>title</code>’i değiştirebiliyor.
</p>

 <p>
Özetle hiyerarşide yukarı veri taşıyabilmek için kullanılan bu yapının kullanıldığını görüyoruz.
Daha detaylı anlamak için  <a href="https://swiftwithmajid.com/2020/01/15/the-magic-of-view-preferences-in-swiftui/">Magic of View Preferences in SwiftUI</a> yazısına göz atabilirsiniz.
</p>
</div>

 <h3> <a id="extension-methodlara-generic-constraint-uygulamak" class="anchor" href="#extension-methodlara-generic-constraint-uygulamak">¶</a>Extension methodlara Generic Constraint Uygulamak</h3> <div class="outline-text-3" id="text-orgb35fcbc">
 <p>
 <code>Generic</code> kullanarak  <code>extension method</code>’larının yalnızca ilgili tipler ile kullanılmasını derleme seviyesinde sağlamak tatlı bir özellik.
 <a href="https://github.com/aheze/SwipeActions/blob/main/Sources/SwipeActions.swift#L986">Burada</a> ilgili örneği görebilirsiniz.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">public</span>  <span class="kd">extension</span>  <span class="nc">SwipeAction</span>  <span class="k">where</span>  <span class="n">Label</span>  <span class="p">==</span>  <span class="n">Text</span> <span class="p">,</span>  <span class="n">Background</span>  <span class="p">==</span>  <span class="n">Color</span>  <span class="p">{</span>
       <span class="c1">// Buraya yazılan methodlar yalnızca</span>
       <span class="c1">// Label Generic Parametresi Text olan ve Background'u Color olan 'SwipeAction'lara önerilir.</span>
   <span class="p">}</span>
</pre></div>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-orge42641e">
 <ol class="org-ol"> <li> <a href="https://github.com/aheze/SwipeActions">SwipeActions Repo</a></li>
 <li> <a href="https://developer.apple.com/documentation/swiftui/preferences?changes=_7">Apple PreferenceKey Dokümantasyonu</a></li>
 <li> <a href="https://swiftwithmajid.com/2020/01/15/the-magic-of-view-preferences-in-swiftui/">Magic of View Preferences in SwiftUI</a></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/ios_swiftui_swipe_actions/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ios_swiftui_swipe_actions/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Kitap: Make Something Wonderful</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org50617f2">

 <div id="orgea542e2" class="figure">
 <p> <img src="/img/stevejobs_with_bicycle.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Bilgisayar zihnin bisikletidir.</p>
</div>

 <p>
Steve Jobs’un aramızdan ayrılışının üzerinden 12 sene geçmiş :/.
</p>

 <p>
İşlerinde ve ilişkilerinde hayatına dair daha derin bir bakış açısı yakalayabileceğimiz konuşmalarını, yazışmalarını ve hatıralarını
biriktiren ve sanki kendisinin ağzından yazılmış bir kitap olarak ücretsiz yayınlanan bu kitabı zevkle okuyacağınıza inanıyorum.
</p>

 <p>
İçerisindeki konulara değinmek gerekirse:
</p>
 <ul class="org-ul"> <li>Apple’dan ayrılışı, NeXT’in kuruluşu ve sonrasında tekrar Apple’a satılıp geri dönüşündeki hikayeler.</li>
 <li>Pixar’da elde ettiği başarılar.</li>
 <li>Teknolojiyi, sanatı, kullanıcı deneyimini iç içe görmesi ve kendi eğitim hayatındaki yaklaşımlarını bulabilirsiniz.</li>
</ul> <p>
 <a href="http://apple.co/sja">Apple Books</a> üzerinden veya  <a href="https://stevejobsarchive.com/book/download">indirerek</a> faydalanabilirsiniz
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/kitap_make_something_wonderful/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/kitap_make_something_wonderful/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>WWDC 23 Hakkında Bilmeniz Gerekenler</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/alper-cem-%C3%B6zt%C3%BCrk-a625671a8">Alper Cem Öztürk</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org9d36661">
 <p>
Apple’ın WWDC’si geçtiğimiz günlerde gerçekleşti ve hem kullanıcılar hem de geliştiriciler için bir ton yeni özellik ve geliştirmeden bahsedildi. Hatta hepimizin yıllardır sızıntılardan takip ettiği tamamen yeni bir cihaz ve beraberinde işletim sistemi bile duyuruldu.
</p>

 <p>
Bu yazıda, bir geliştiricinin bakış açısından bu yılın WWDC’sindeki favori güncellemelerimden bahsedeceğim. Bu yeniliklerle oynamak için çok fazla zamanım olmadığınından deneyimim çoğunlukla  <a href="https://developer.apple.com/wwdc23/101">Keynote</a> ve  <a href="https://developer.apple.com/wwdc23/102">Platforms State of the Union</a> sunumlarına dayandığını belirtmekte fayda var.
</p>
</div>

 <h3> <a id="vision-pro" class="anchor" href="#vision-pro">¶</a>Vision Pro</h3> <div class="outline-text-3" id="text-orgcaea64f">

 <div id="org7b1d882" class="figure">
 <p> <img src="/img/vision_pro.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Vision Pro</p>
</div>

 <p>
Etkinliğin en gözdesininden ilk bahsetmek en doğrusu olur diye düşünüyorum. Vision Pro, Apple’ın on yıldan uzun süredir geliştirilmekte olduğu artırılmış ve sanal gerçeklik cihazı. Çoğu kişi tarafından bu cihaz bir  <b>headset</b> olarak isimlendirilse de Apple bu isimlendirmeyi kullanmaktan kaçınıyor. Bunun yerine sanal dünyayı gerçek dünya ile harmanlaması nedeniyle uzamsal bilgisayar (spatial computing) olarak adlandırıyor.
</p>

 <p>
Apple, artırılmış gerçeklik deneyimi için etrafınızdakileri haritalandıran ve bunu sanal öğelerle zenginleştirilmiş dijital bir görüntüye çeviren kameralar kullanıyor. Sanal gerçeklik deneyimi için ise, bu kameraları kapatıp ve etrafınızda olup bitenlerden tamamen izole edilmiş gibi görünmenizi sağlayarak, yalnızca cihazın ekranlarında görüntülenenlere odaklanmanızı sağlıyor.
</p>

 <p>
Vision Pro, Apple’ın cihaz için özel olarak tasarladığı bir işletim sistemi olan  <b>visionOS</b>’u çalıştırıyor. VisionOS, kullanıcıyı çevreleyen alanda herhangi bir yere konumlandırılabilen uygulama pencereleriyle “sonsuz bir tuval” sağlamak üzere tasarlanmış.
</p>

 <p>
Apple, Vision OS için tercih edilen geliştirme ortamının SwiftUI olduğu konusunda oldukça net bir tavır sergiledi. Elbette mevcut UIKit kodunuz kullanılabilecek ancak yeni başlangıçlar için en iyi seçim SwiftUI olacaktır.
</p>

 <p>
Apple, SwiftUI desteğini daha çok arttırabilmek için Button, Toggle ve TabView gibi bir uygulamanın temel yapı taşlarından, Freeform’daki 3D panolar gibi yepyeni deneyimlere kadar tüm bunları ve çok daha fazlasını SwiftUI’ın desteklemesi için ayrıca çalıştığını belirtiyor.
</p>

 <p>
VisionOS için daha derinlemesine bir SwiftUI deneyimine ihtiyaç duyuyorsanız  <a href="https://developer.apple.com/wwdc23/10109">Meet SwiftUI for Spatial Computing</a> videosuna bir göz atmanızda fayda var.
</p>
</div>

 <h3> <a id="swift-macros" class="anchor" href="#swift-macros">¶</a>Swift Macros</h3> <div class="outline-text-3" id="text-orgc4c2630">
 <p>
Hepimizi heyecanlandıran bir diğer haber ise Swift Macros’un duyurulmasıydı. Daha önceden zaten property wrappers ve function builders gibi tool’lara sahiptik. Bu tool’lar, arka plandaki mantığı kapsüllememize ve boilerplate kod miktarını azaltmamıza olanak sağlayan özelliklerdi. Swift 5.9 ile birlikte, toolkit’e makrolar da ekleniyor. Makrolar, daha fazla esneklik sağlayarak kod yazma sürecinde daha fazla kontrol ve kolaylık sunmayı vadediyor. Bu yeni özellik, Swift geliştiricilerinin daha temiz ve okunabilir kod yazmalarına önemli bir katkı sağlayacağa benziyor.
</p>

 <p>
Swift makroları diğer tool’lardan oldukça farklı bir şekilde çalışır ve size farklı imkanlar sunar. Property wrappers’dan farklı olarak, Swift makroları derleme zamanında çalıştırılır. Bu da, kodunuzu derlemeye geçirmeden önce bile çalıştırarak hataları ve uyarıları tespit edebileceğiniz anlamına gelir. Bu özelliği sayesinde, Xcode’un sağladığı uyarıları kullanarak kodunuzu daha önceden doğrulayabilir ve olası hataları önleyebilirsiniz. Bu yönüyle, Swift makroları geliştiricilere daha güvenli ve hata ayıklamaya daha uygun bir ortam sunuyor.
</p>

 <p>
Swift makroları ile alakalı daha detaylı inceleme yapmak isterseniz,  <a href="https://developer.apple.com/wwdc23/10167">Expand on Swift Macros</a>’a bir göz atmanızda fayda var.
</p>
</div>

 <h3> <a id="swiftui-yenilikleri" class="anchor" href="#swiftui-yenilikleri">¶</a>SwiftUI Yenilikleri</h3> <div class="outline-text-3" id="text-org0c503c8">
 <p>
Her yıl SwiftUI yenilik ve iyileştirmelerine UIKit’in yerini tamamen alabilir mi gözüyle bakıyoruz. Her ne kadar buna daha zaman var gibi dursa da, bu yılki SwiftUI yenilikleri de bir hayli göze çarpıyor.
</p>


 <div id="org2eb3b69" class="figure">
 <p> <img src="/img/observable_macro.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>SwiftUI için yeni macrolar</p>
</div>

 <p>
Bu yılki SwiftUI değişiklikleri, veri akışını daha da sadeleştirmeyi hedefliyor.  <code>StateObject</code>,  <code>@ObservedObject</code> ve  <code>@EnvironmentObject</code> property wrapper’ları  <code>@State</code> ve  <code>@Environment</code> altında toplanmış.
</p>


 <div id="orgefb189b" class="figure">
 <p> <img src="/img/macro_usage.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>SwiftUI örnek macro</p>
</div>

 <p>
Ayrıca, artık nesne düzeyindeki  <code>@Observable</code> macro sayesinde,  <code>@Published</code> olarak parametreleri ayrı ayrı belirtmenize gerek kalmayacak.
</p>

 <p>
Bir diğer büyük gelişmelerinden biri, animasyonlar için verilen desteğin arttırılmasıdır. Animasyonlar etkin bir şekilde yapıldığında, uygulamanın kalitesini arttırıyor. Günümüzde rekabetin bu kadar yüksek olduğu günlerde, kullanıcılarının uygulamaları kullanmaya devam etmesi için arayüz iyi görünmeli ve iyi hissettirmelidir. Bunun için artık keyframing ve animasyon aşamaları aracılığıyla animasyonlar üzerinde daha fazla kontrol sağlayabiliyoruz. Buna ek olarak spring modifier’ı ve animasyonlu SF symbols aracılığıyla oyun alanımız artık daha fazla genişletilmiş.
</p>

 <p>
SwiftUI, artık element dönüşümlerinde ayrı aşamaları tanımlamanıza ve zaman içinde animasyonun özellikleri değiştirmek için keyframe’ler oluşturmanıza olanak tanıyor. Güncellenmiş SF symbols paketi, artık kodla tetikleyebileceğiniz önceden tanımlanmış animasyonlarla birlikte geliyor. Bu sayede, SwiftUI’de animasyonları daha kolay ve esnek bir şekilde kontrol edebileceğiz.
</p>

 <p>
Sonuç olarak, SwiftUI’ın popülerleşmesiyle birlikte, animasyon ve kullanıcı arayüzü tasarımı alanında daha fazla destek sunulmaya başlandı. Böylece, geliştiriciler uygulama kullanıcı deneyimini geliştirmek için daha fazla seçenek ve esnekliğe sahip olabilir. SwiftUI’nin bu güncellemeleri, geliştiricilerin iOS ve macOS uygulamalarında daha güçlü ve etkileyici kullanıcı arayüzleri oluşturmasına yardımcı olacağa benziyor.
</p>

 <p>
SwiftUI yeniliklerine daha yakından göz atmak isterseniz  <a href="https://developer.apple.com/wwdc23/10148">What’s new in SwiftUI</a> videosunun bu konuda yardımı dokunabilir.
</p>
</div>

 <h3> <a id="swiftdata" class="anchor" href="#swiftdata">¶</a>SwiftData</h3> <div class="outline-text-3" id="text-orgdfaf7f1">

 <div id="org4d184fa" class="figure">
 <p> <img src="/img/SwiftData.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 4: </span>SwiftData</p>
</div>

 <p>
Core Data ile tanışanlar, onun öğrenilmesi ve kullanılması en kolay framework olmadığını bilirler. Core Data genellikle string literal’e dayanır. Derleme zamanı doğrulamasından yoksundur ve potansiyel yazım hatalarına yer bırakır. Bu durumda eğer bir hata yaparsanız, sadece uygulamanız çöktüğünde bu hatayı öğrenebilirsiniz.
</p>

 <p>
SwiftData, Core Data’ya alternatif olarak Swift ile oluşturulmuş ve Swift için tasarlanmış bir veritabanı çözümüdür. Bu, Swift’in kendisiyle uyumlu olan aynı prensipleri takip ettiği anlamına gelir. SwiftData hızlı, modern ve güvenlidir. Zaten aşina olduğunuz teknolojilere dayanmaktadır. SwiftData, modeller için ayrı dosyalar kullanmadığından, aynı veri yapılarını iki kez tanımlamanız gerekmez.
</p>

 <p>
Apple, SwiftData’nın SwiftUI göz önünde bulundurularak tasarlandığını ve Core Data entegrasyonunun oldukça kolay olduğunu belirtiyor. Bunun yanı sıra Core Data ile aynı şekilde, SwiftData’nında  <b>undo</b> ve  <b>redo</b> gibi yaygın senaryoları desteklediğini söylemekte fayda var.
</p>

 <p>
SwiftData’nın en önemli dezavantajlarından biri, yalnızca yeni işletim sistemi sürümlerinde mevcut olmasıdır. Bu nedenle, eski sürümleri desteklemeyi bırakmanız veya birkaç yıl beklemeniz gerekebilir, ancak bu kararın birçok kullanıcıyı etkileyeceğini bilerek hareket etmek en doğrusu olacaktır.
</p>

 <p>
SwiftData ile ilgili daha derinlemesine bilgi sahibi olmak için  <a href="https://developer.apple.com/wwdc23/10187">Meet SwiftData</a> videosuna göz atmak isteyebilirsiniz.
</p>

 <hr></hr> <p>
WWDC 23, Apple’ın teknoloji ve tasarım yaklaşımının sınırlarını genişletmeye devam ettiğini gösterdi. Vision Pro, SwiftUI’nin gelişmiş yetenekleri ve SwiftData gibi yenilikler, hem geliştiriciler hem de kullanıcılar için çığır açan değişiklikler getirecek gibi görünüyor. Her yıl olduğu gibi, Apple’ın sunduğu yenilikler, geliştiricilerin araçları ve teknolojileri kullanma şekillerini dönüştürecek. Bu da, kullanıcıların ürün ve hizmetleri deneyimlemelerinde yeni ve heyecan verici değişikliklere yol açmaya devam edecek.
</p>

 <p>
Bu sayıda WWDC23 ’ün önemli gelişmelerini sizlerle paylaştım. Umarım faydalı olmuştur. Sonraki sayıya kadar görüşmek üzere!
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org53847bd">
 <ol class="org-ol"> <li> <a href="https://developer.apple.com/wwdc23/10167">Expand on Swift Macros</a></li>
 <li> <a href="https://developer.apple.com/wwdc23/10148">What’s new in SwiftUI</a></li>
 <li> <a href="https://developer.apple.com/wwdc23/10187">Meet SwiftData</a></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/wwdc23_hakkinda_bilmeniz_gerekenler/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/wwdc23_hakkinda_bilmeniz_gerekenler/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Xcodes: Xcode’un Sürümlerini Yönetmenin Etkin Yolu</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/egehan-kalayc%C4%B1-736b4a238">Egehan Kalaycı</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgad263cb">
 <p>
Merhaba Mobilen okurları, bugün sizlere Xcode’un farklı sürümlerini nasıl kolaylıkla yönetebileceğinizi anlatacağım.
</p>


 <div id="orgf3db52a" class="figure">
 <p> <img src="/img/xcode_naming.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Xcode Naming</p>
</div>

 <p>
Öncelikle,  <b>Xcode</b>’un doğru yazımı konusunda bir anlaşma yapalım. İnsanlar bazen XCode, xCode gibi tuhaf kombinasyonlarla karşımıza çıkabilirler. Ancak gerçek şu ki, doğru yazımı  <b>Xcode</b>’dur. Evet, büyük harfle “ <b>X</b>” ile başlayıp ardından “ <b>code</b>” olarak devam eder. Şimdi, bu konuda anlaştıysak  <b>Xcode</b>’un farklı sürümlerini yönetme konusuna odaklanalım.
</p>

 <p>
Xcode, Apple platformlarında uygulama geliştirmek için kullanılan bir entegre geliştirme ortamıdır (IDE). Ancak, App Store’dan Xcode’u indirmenin bazı dezavantajları vardır. En güncel sürümleri bulmak veya yavaş bir indirme hızıyla karşılaşmakta sorun yaşayabilirsiniz. Daha da önemlisi, eski sürümlere geri dönmek veya birden fazla sürümü aynı anda kullanmak isterseniz, App Store bu özellikleri sunmamaktadır.
</p>

 <p>
İşte tam da bu noktada size bir çözüm sunmak istiyorum: Xcodes!
</p>

 <p>
Xcodes, Xcode’un farklı sürümlerini tek bir komutla indirmenizi sağlayan harika bir araçtır. Bu sayede istediğiniz sürümü, yüksek indirme hızlarıyla elde edebilirsiniz.
Xcodes, indirme işlemlerini gerçekleştirmek için aria2 adlı bir komut satırı aracını kullanır. Bu araç, indirme hızınızı optimize etmek için çoklu bağlantılar ve paralel indirmeler kullanır. Böylece Xcode sürümlerini daha hızlı bir şekilde bilgisayarınıza indirebilirsiniz.
</p>

 <p>
Gelelim  <code>Xcodes</code>’u kullanmaya. Bunun iki farklı yöntemi bulunmaktadır.
</p>

 <p>
İlk yöntem, Xcodes’un kullanıcı dostu bir arayüzü olan native uygulamasını indirip kullanmaktır. Bu sayede sürümleri görsel olarak kolaylıkla yönetebilirsiniz.
</p>


 <div id="org03c49cb" class="figure">
 <p> <img src="/img/xcodes_gui.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 2: </span>Xcodes Gui</p>
</div>

 <p>
İkinci yöntem ise terminal üzerinden Xcodes’u kullanmaktır. Eğer terminal üzerinden kullanmak isterseniz,  <code>xcodes</code> komutunu kullanarak çeşitli işlemleri gerçekleştirebilirsiniz. Örneğin, mevcut sürümleri görüntülemek için  <code>xcodes list</code> komutunu kullanabilir, indirmek istediğiniz sürümün yanındaki numarayı yazarak indirme işlemini başlatabilirsiniz. Ayrıca, indirdiğiniz sürümleri  <code>xcodes installed</code> komutu ile görüntüleyebilir ve  <code>xcodes select</code> komutuyla varsayılan sürümü belirleyebilirsiniz.
</p>


 <div id="org041251c" class="figure">
 <p> <img src="/img/xcodes_terminal.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 3: </span>Xcodes Terminal</p>
</div>

 <p>
Artık Xcode’un farklı sürümlerini kolaylıkla yönetebilir, istediğiniz sürüme hızlıca erişebilir ve projelerinizde esnek bir şekilde çalışabilirsiniz. Bir sonraki yazıda tekrar buluşmak dileğiyle.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org9815cde">
 <ol class="org-ol"> <li> <a href="https://www.xcodes.app/">https://www.xcodes.app/</a></li>
 <li> <a href="https://github.com/XcodesOrg">https://github.com/XcodesOrg</a></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/xcodes_surum_yonetim/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/xcodes_surum_yonetim/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Evolution of the Medium iOS app architecture</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/myusufka">Yusuf Kaya</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org3f6e3bd">
 <p>
Her alanda olduğu gibi bir mobil projesinde de sürekli olarak gelişen teknolojik trendlere uyum sağlamak da büyük bir önem taşımaktadır.
</p>

 <p>
Yeni mimari geliştirmeler, bir projenin başarısı için hayati bir rol oynamaktadır. Bu geliştirmeler, uygulamanın performansını artırırken, güvenlik açıklarını kapatmak ve gelecekteki ihtiyaçlarını karşılamak için tasarlanır.
</p>

 <p>
Yeni mimari yaklaşımlar, yazılım mühendislerine daha etkili bir şekilde çalışabilmeleri için daha fazla esneklik ve verimlilik sağlamayı amaçlar. Ayrıca, proje ekibine, uygulamanın yaşam döngüsü boyunca sürekli iyileştirmeler yapma ve yeni özellikler eklemek için daha iyi bir temel sunmayı amaçlar. Modüler mimari de projelerin geliştirilmesinde önemli bir yer tutan yenilikçi bir yaklaşımdır.
</p>

 <p>
 <a href="https://medium.com/medium-eng/evolution-of-the-medium-ios-app-architecture-8b6090f4508e">Evolution of the Medium iOS App Architecture</a> yayınında da Medium’un iOS uygulamasının modüler mimari evrimini anlatmaktadır.
</p>
</div>

 <h3> <a id="modüler-mimari-nedir" class="anchor" href="#modüler-mimari-nedir">¶</a>Modüler Mimari Nedir?</h3> <div class="outline-text-3" id="text-orgf582d20">
 <p>
Modüler mimari, projelerin geliştirilmesinde kullanılan bir mimari yaklaşımıdır. Bu yaklaşım, bir uygulamayı bağımsız bileşenlere veya modüllere ayırarak, her bir modülün kendi sorumluluk alanına odaklanmasını ve birbirleriyle minimum bağımlılık içinde çalışmasını sağlar.
</p>
</div>
 <h4> <a id="modüler-mimarinin-faydaları" class="anchor" href="#modüler-mimarinin-faydaları">¶</a>Modüler Mimarinin Faydaları</h4> <div class="outline-text-4" id="text-org8bcc380">
 <p>
Modüler mimarinin faydaları şunlardır:
</p>
 <ul class="org-ul"> <li>Daha iyi organizasyon: Modüller arasında sorumluluk alanlarına odaklanarak projenin daha iyi organize edilmesi sağlanır.</li>
 <li>Paralel geliştirme: Farklı modüller, ayrı ekipler tarafından aynı anda geliştirilebilir.</li>
 <li>Yeniden kullanılabilirlik: Modüller, başka projelerde veya farklı parçalarda kolayca yeniden kullanılabilir.</li>
 <li>Bakım kolaylığı: Bağımsız modüllerin yönetimi, hataların tespitini kolaylaştırır ve bakım sürecini iyileştirir.</li>
 <li>Ölçeklenebilirlik: Projeyi büyütme veya değiştirme gerektiğinde, modüller arasındaki etkileşim minimum düzeyde olduğu için ölçeklenebilirlik sağlanır.</li>
</ul></div>
 <h3> <a id="medium-uygulamasının-evrimi" class="anchor" href="#medium-uygulamasının-evrimi">¶</a>Medium Uygulamasının Evrimi</h3> <div class="outline-text-3" id="text-orgdb07ae0">
 <p>
Bu bilgiler ışığında Medium’un iOS uygulamasının mimarisinin evrim serüveninin inceleyebiliriz. Kullanılan yeni teknikler ve yaklaşımlar, bu süreçte yaşanan zorluklar ve çıkarılan dersler bakımından faydalı bir yayın olduğunu düşünüyorum. Keyifli okumalar dilerim.
</p>
</div>
 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org1b14aeb">
 <ol class="org-ol"> <li> <a href="https://medium.com/medium-eng/evolution-of-the-medium-ios-app-architecture-8b6090f4508e">Evolution of the Medium iOS App Architecture</a></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/evolution_of_the_medium_ios_app/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/evolution_of_the_medium_ios_app/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>iOS Deep Link: Mobil Uygulamaların Gizli Kahramanı</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://linkedin.com/in/egehan-kalayc%C4%B1-736b4a238">Egehan Kalaycı</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org63ed2a3">
 <p>
Selam “Mobilen” okurları! Bugün sizinle çok önemli ve aslında fazlasıyla işlevsel bir konuyu konuşacağız: Deep Link’leri. Evet, belki ilk duyduğunuzda biraz karışık gelebilir ama emin olun, bu yazıyı okuduktan sonra onları tanıyan en iyi kişi siz olacaksınız.
</p>
</div>

 <h3> <a id="deep-link-nedir" class="anchor" href="#deep-link-nedir">¶</a>Deep Link Nedir?</h3> <div class="outline-text-3" id="text-org1b11140">
 <p>
Deep link, belirli bir sayfaya veya işleme mobil uygulama içinde doğrudan erişmenizi sağlayan bir tür bağlantıdır. Böylece, kullanıcıları uygulamanın belirli bir noktasına yönlendirerek, daha etkileşimli ve kullanıcı odaklı bir deneyim sunabiliriz.
</p>
</div>

 <h4> <a id="biraz-daha-somutlaştıralım" class="anchor" href="#biraz-daha-somutlaştıralım">¶</a>Biraz Daha Somutlaştıralım</h4> <div class="outline-text-4" id="text-org55f4e9a">
 <p>
Örneğin, Instagram’da dolaşırken bir Petrol Ofisi kahve kampanyası gördünüz ve tıkladınız. İşte tam da burada devreye deep linkler giriyor. Tıkladığınızda, direkt olarak Petrol Ofisi’nin mobil uygulaması açılıyor ve sizi o özel kampanyaya yönlendiriyor. Kulağa hoş geliyor değil mi?
</p>

 <p>
Veya belki de şifrenizi sıfırlamanız gerekiyor ve bu durumda da gelen e-postadaki linke tıkladığınızda, sizi bir web sayfasına yönlendirmek yerine direkt olarak uygulamada güzel ve kullanıcı dostu bir deneyim yaşamanızı sağlıyor. İşte bu, deep linklerin gücü!
</p>
</div>

 <h3> <a id="deep-linkin-küçük-detayları" class="anchor" href="#deep-linkin-küçük-detayları">¶</a>Deep Link’in Küçük Detayları</h3> <div class="outline-text-3" id="text-orgc327923">
 <p>
Deep linklerin kullanımı oldukça basit gibi görünse de, yönetilmesi gereken bazı durumlar vardır. Bu detaylar, uygulamanın nasıl ve ne zaman hangi deep linki kullanacağını belirler. Ama merak etmeyin, bu yazının ilerleyen bölümlerinde bunları ayrıntılı olarak ele alacağım.
</p>
</div>

 <h3> <a id="deep-link-çeşitleri" class="anchor" href="#deep-link-çeşitleri">¶</a>Deep Link Çeşitleri</h3> <div class="outline-text-3" id="text-org087d5a7">
 <p>
 <b> <b>Dinamik Linkler:</b></b>
Dinamik linkler, kullanıcıları belirli bir içeriğe veya uygulama içi konuma yönlendirmek için kullanılır. Bu linkler “dinamik” olarak adlandırılır çünkü onlar hem uygulama içi hem de web içeriğine yönlendirebilir. Örneğin, bir kullanıcı uygulamanızı henüz indirmediyse, dinamik bir link onları App Store veya Google Play’e yönlendirebilir. Eğer uygulama zaten yüklüyse, aynı link onları uygulama içindeki belirli bir konuma yönlendirebilir. Bu özellik, kullanıcının deneyimini optimize etmek için önemlidir.
</p>

 <p>
 <b> <b>Deferred Deep Linking:</b></b>
Deferred Deep Linking, deep linking’in bir formudur ve uygulama önceden yüklenmemişse bile belirli bir içeriğe veya uygulama içi konuma yönlendirmeyi mümkün kılar. Eğer bir kullanıcı uygulamayı henüz indirmediyse, bu tür bir link önce onları App Store veya Google Play’e yönlendirir. Uygulama indirildikten ve açıldıktan sonra, kullanıcı otomatik olarak belirtilen içeriğe veya konuma yönlendirilir.
</p>

 <p>
Farklarına gelince, her ne kadar her iki tür link de uygulamanın indirilmesi ve belirli bir konuma yönlendirilmesi sürecini yönetse de, genellikle Dinamik Linkler daha geniş özelliklere sahip olup, kullanıcıları yönlendirme ve deneyimlerini özelleştirme konusunda daha fazla esneklik sunar. Örneğin, Dinamik Linkler genellikle linkin nereden geldiğini (örneğin, bir e-postadan, sosyal medyadan, bir reklamdan vb.) izleme ve bunun yanı sıra kullanıcının işletim sistemini ve cihazını algılama yeteneğine sahiptir, böylece en uygun deneyimi sunabilir. Bu nedenle, Dinamik Linkler genellikle pazarlama kampanyalarında ve kullanıcı etkileşimlerini artırmak için kullanılır.
</p>
</div>

 <h3> <a id="deep-link-yönetim-yöntemleri" class="anchor" href="#deep-link-yönetim-yöntemleri">¶</a>Deep Link Yönetim Yöntemleri</h3> <div class="outline-text-3" id="text-org9686e41">
 <p>
Deep linklerinizi hem iOS hem Android uygulamalarınızda yönetebilmeniz için iki önemli yöntem bulunmaktadır: URL Scheme ve Universal Link (iOS) veya App Links (Android). Bu yöntemler, uygulamalarınızdaki deep linklerin yönetimini kolaylaştırır ve kullanıcı deneyimini artırır. Ancak her bir yöntemin kendine özgü özellikleri ve kullanım alanları vardır. Bu yüzden, hangi yöntemin sizin uygulamanız için en uygun olduğunu belirlemek önemlidir.
</p>
</div>

 <h3> <a id="deep-link-url-scheme-ve-universal-link-karşılaştırması" class="anchor" href="#deep-link-url-scheme-ve-universal-link-karşılaştırması">¶</a>Deep Link: URL Scheme ve Universal Link Karşılaştırması</h3> <div class="outline-text-3" id="text-orga8eabcb">
 <p>
Deep link yönetiminde kullanılan iki temel yöntem olan URL Scheme ve Universal Link, birbirinden farklı özelliklere sahiptir. Hem geliştiricilerin hem de kullanıcıların deneyimini doğrudan etkileyen bu özellikler, hangi yöntemin hangi durumda kullanılacağını belirler.
</p>

 <p>
URL Scheme ve Universal Link’in karşılaştırmalı tablosu:
</p>
</div>

 <h4> <a id="url-scheme" class="anchor" href="#url-scheme">¶</a>URL Scheme</h4> <div class="outline-text-4" id="text-org1bdadef">
 <ul class="org-ul"> <li> <b> <b>Kurulumu Basittir:</b></b> URL Scheme’yi kullanmaya başlamak için karmaşık bir kurulum sürecine ihtiyaç duyulmaz.</li>
 <li> <b> <b>SSL Zorunluluğu Yoktur:</b></b> URL Scheme, SSL sertifikası zorunluluğu olmadan kullanılabilir.</li>
 <li> <b> <b>Kullanıcı Onayı İster:</b></b> URL Scheme, uygulamaya erişim izni almak için kullanıcıya bir pop-up gösterir. Bu, kullanıcıların uygulamayı açma konusunda daha bilinçli olmasını sağlar.</li>
 <li> <b> <b>Uygulama Yüklü Değilse Çalışmaz:</b></b> URL Scheme, uygulamanın cihazda yüklü olmasını gerektirir. Eğer uygulama yüklü değilse, URL Scheme çalışmaz.</li>
 <li> <b> <b>Aynı Tanımlar ve Kod Mantığı Gerekli:</b></b> URL Scheme’in hem iOS hem de Android platformlarında çalışabilmesi için, tanımlarının ve URL’i işleyen kod mantığının aynı olması gerekmektedir.</li>
 <li> <b> <b>Kullanıcı Dostu Değildir:</b></b> URL Scheme linkleri genellikle “myApp://page/profile” gibi görünürler ve bu da genellikle kullanıcılar için anlaşılması zor olabilir.</li>
</ul></div>

 <h4> <a id="universal-link" class="anchor" href="#universal-link">¶</a>Universal Link</h4> <div class="outline-text-4" id="text-org485475d">
 <ul class="org-ul"> <li> <b> <b>Kurulumu Komplekstir:</b></b> Universal Link’in kurulum süreci, URL Scheme’e göre daha karmaşıktır.</li>
 <li> <b> <b>SSL Zorunludur:</b></b> Universal Link kullanımı için SSL sertifikası zorunludur. Bu, uygulamanın güvenlik seviyesini artırır.</li>
 <li> <b> <b>Erişim İzni İstemez:</b></b> Universal Link, uygulamaya erişim izni almak için kullanıcıdan herhangi bir onay istemez.</li>
 <li> <b> <b>Uygulama Yüklü Değilse Yedek URL’ler Kullanır:</b></b> Eğer uygulama cihazda yüklü değilse, Universal Link yedek bir URL’ye yönlendirme yapar. Bu, kullanıcıların her zaman istedikleri içeriğe ulaşabilmesini sağlar.</li>
 <li> <b> <b>Oluşturulan Link Tüm Platformları Destekler:</b></b> Universal Link ile oluşturulan bir link, tüm platformlarda çalışabilir.</li>
 <li> <b> <b>Gündelik Kullanılan Linkler Gibidir:</b></b> Universal Linkler, kullanıcı dostudur ve gündelik internet kullanımında karşılaştığımız web adreslerine benzerler. Örneğin, “www.myapp.com/page/profile” gibi.</li>
</ul> <p>
Bu özellikler, URL Scheme ve Universal Link arasında önemli farklar olduğunu gösterir. Seçiminiz, uygulamanızın ihtiyaçlarına, hedeflerinize ve kullanıcı deneyiminizi nasıl şekillendirmek istediğinize bağlı olacaktır. Unutmayın, her iki yöntemin de kendi güçlü ve zayıf yanları vardır. Önemli olan, hangi yöntemin sizin ve kullanıcılarınızın ihtiyaçlarını en iyi şekilde karşılayacağını belirlemektir.
</p>

 <p>
Şimdi, daha fazla derine dalalım ve URL Scheme ve Universal Link’in nasıl çalıştığını inceleyelim…
</p>
</div>

 <h3> <a id="url-scheme-nedir-ve-nasıl-kullanılır" class="anchor" href="#url-scheme-nedir-ve-nasıl-kullanılır">¶</a>URL Scheme: Nedir ve Nasıl Kullanılır?</h3> <div class="outline-text-3" id="text-orgc62d9ef">
 <p>
URL Scheme, iOS ve Android platformları için belirli bir URL şemasını kaydedip, diğer uygulamaların bu şema ile başlayan URL’leri açabilmesini sağlayan bir deep link yöntemidir. Peki, nasıl çalışır? Hadi gelin adım adım birlikte inceleyelim.
</p>
</div>

 <h4> <a id="url-scheme-nasıl-tanımlanır" class="anchor" href="#url-scheme-nasıl-tanımlanır">¶</a>URL Scheme: Nasıl Tanımlanır?</h4> <div class="outline-text-4" id="text-org9d4490e">
 <p>
URL Scheme’in kurulumu oldukça basittir. Örneğin, bir iOS uygulamasına URL Scheme nasıl tanımlanır, birlikte bakalım.
</p>
 <ol class="org-ol"> <li>Öncelikle, Xcode’u açıyoruz.</li>
 <li>Ardından, `Project Settings -> Info` yolunu izliyoruz.</li>
 <li>Bu bölümde “URL Types” kısmına yeni bir URL Scheme tanımı yapabiliyoruz.</li>
</ol> <p width="100%">
 <img src="/img/0.jpg" class="content-image" width="100%"></img>
Bu şekilde bir tanımlama yaptıktan sonra, telefonumuzdan bir tarayıcı veya notlar uygulamasına gidip bu linki test edebiliriz. “com.myApp” yazıp enter’a tıkladığımızda fark ederiz ki, bir şey olmamıştır.
</p>

 <p>
Peki, bu durum neden oluşur? İşin aslı, iOS’un bir metni bağlantı olarak tanıması için, URL formatına uygun olmamızı bekler. Yani linkimizi “com.myApp://main” olarak güncellemeliyiz. Bu formatı girdiğimizde, bir izin pop-up’ı ile karşılaşırız. Eğer burada “Aç” diyerek izin verirsek, linkin uygulamamızı açtığını görebiliriz.
</p>

 <p width="100%">
 <img src="/img/1.jpg" class="content-image" width="100%"></img>
Fakat, evet uygulamayı açtık ama henüz uygulama içerisinde bir yönlendirme yapmadık. Mesela uygulamanın “profil bilgilerim” sayfasına gitmek istiyoruz. Peki, bunu nasıl yapabiliriz?
</p>
</div>

 <h4> <a id="url-scheme-ile-uygulama-i̇çi-yönlendirme" class="anchor" href="#url-scheme-ile-uygulama-i̇çi-yönlendirme">¶</a>URL Scheme ile Uygulama İçi Yönlendirme</h4> <div class="outline-text-4" id="text-orga7d31d5">
 <p>
Bu işlem için “AppDelegate.swift” dosyasını kullanacağız. Bu dosyada bulunan `open url: URL` metodu, başka bir uygulama veya sistem bileşeni tarafından gönderilen URL’yi yakalayıp işlememizi sağlar.
</p>

 <p>
Hatırlayalım, bir metnin bağlantı olabilmesi için “scheme://host” yapısına uyması gerektiğini belirtmiştik. Şimdi bu yapının bir örneğini inceleyelim. Örneğin, `com.myApp://content?contentID=“1881”` şeklinde bir URL tanımlayalım.
</p>

 <p>
Bu URL’deki parametreleri elde etmek ve bunları kendi yönlendirme yapımıza göre işlemek için aşağıdaki gibi bir kod yapısına ihtiyacımız bulunmaktadır.
</p>

 <p width="100%">
 <img src="/img/2.jpg" class="content-image" width="100%"></img>
Bu kod yapısında,
</p>
 <ul class="org-ul"> <li>`url.scheme` = “com.myApp”</li>
 <li>`url.host` = “content”</li>
 <li>`parameters` = [“contentID” : “1881”]</li>
</ul> <p>
olacaktır.
</p>
</div>

 <h4> <a id="url-scheme-sonuç" class="anchor" href="#url-scheme-sonuç">¶</a>URL Scheme: Sonuç</h4> <div class="outline-text-4" id="text-orgbb02019">
 <p>
URL Scheme, tanımlanması ve uygulanması oldukça kolay bir deep link yöntemidir. Ancak, bu yöntemin en büyük dezavantajı, uygulamanın cihazda yüklü olmaması durumunda çalışmamasıdır. Bu durumda, kullanıcı boş bir web sayfasıyla karşılaşacaktır.
</p>

 <p>
İşte tam bu noktada Universal Link ve App Links yöntemleri devreye giriyor. Bu yöntemler, URL Scheme’in karşılaştığı bu sorunu çözerek kullanıcı deneyimini daha da iyileştirebilir. Şimdi biraz daha derinlere inelim ve Universal Link ve App Links yöntemlerini inceleyelim…
</p>
</div>

 <h4> <a id="universal-linkapp-links-nedir" class="anchor" href="#universal-linkapp-links-nedir">¶</a>Universal Link/App Links: Nedir?</h4> <div class="outline-text-4" id="text-org730a0c8">
 <p>
Universal Link ve App Links, URL Scheme’in dezavantajlarını azaltmak için iOS 9/Android 6.0 ve sonraki sürümlerde kullanılabilen bir deep link yöntemidir.
</p>

 <p>
Bu yöntem, URL Scheme’in dezavantajlarını giderirken, kurulumun daha karmaşık olmasını beraberinde getirir.
</p>

 <p>
Kurulum adımlarını ve örneklerimi iOS özelinde veriyor olacağım fakat konsepti anlamamız yeterli olacaktır. Çünkü Android’de de olaylar birbirine çok benzer.
</p>

 <p>
Özellikle, Universal Link’lerin en genel anlamıyla, bir web sayfası URL’sini iOS uygulamanızla ilişkilendirmenizi sağlar. Böylece o URL’yi açtığınızda iOS, mobil uygulamanızı tanır.
</p>

 <p>
Ama burada bir sorun var mıdır? Örneğin, “myApp” adlı uygulamanızı Instagram’ın URL’si ile ilişkilendirip, iPhone’dan Instagram’a giren herkesin sizin uygulamanıza yönlendirilmesini sağlayabilir misiniz? Tam bu sorunu çözmek için iOS, URL’lerin arkasına bir JSON dosyası eklemenizi ve bunu “/apple-app-site-association” yolunda yer almasını ister. Böylece kullanıcılar “ <a href="https://www.instagram.com/egehannkalaycii">https://www.instagram.com/egehannkalaycii</a>” gibi bir linke tıkladığında, iOS öncelikle “ <a href="https://www.instagram.com/apple-app-site-association">https://www.instagram.com/apple-app-site-association</a>” linkindeki JSON dosyasına bakar ve bu URL’in hangi uygulamayla ilişkili olduğuna bakar.
</p>
</div>

 <h4> <a id="json-dosyası-yapısı" class="anchor" href="#json-dosyası-yapısı">¶</a>JSON Dosyası Yapısı</h4> <div class="outline-text-4" id="text-org297e4f1">
 <p>
JSON dosyası dedik. Peki bu JSON dosyasının yapısında neler var?
Bu JSON dosyasının yapısı genellikle aşağıdaki gibidir:
 <img src="/img/3.jpg" class="content-image" width="100%"></img></p>
 <ul class="org-ul"> <li>applinks: Bu JSON’ın Universal Link olduğunu belirtir.</li>
 <li>apps: Apple dokümanına göre bu değer boş bırakılmalıdır.</li>
 <li>details: Uygulama listesi ve yolları içerir.</li>
 <li>appID: TeamID + BundleID değerlerinden oluşur.</li>
 <li>paths: Uygulamada gidilebilecek yolların tanımıdır.
 <ul class="org-ul"> <li>`Path’leri tanımlarken bazı detaylar bulunur. Bunlar:
 <ul class="org-ul"> <li>“/wwdc/news/”-> Standart path tanımı.</li>
 <li>“NOT /videos/wwdc/2010/”-> Başında  <b> <b> <b> <b>NOT</b></b></b></b> olanlar path’e dahil olmaz.</li>
 <li>“*” veya “/wwdc/2010/*“-> WWDC’nin 2010 klasörü altındaki tüm yolları tanımlar.</li>
 <li>“/wwdc/201?/”-> ? olan yere herhangi bir karakter gelebilir.</li>
 <li>Bu bilgiler ışığında aşağıdaki gibi bir path tanımı yapmak mümkün.</li>
 <li>“/wwdc/videos/201?/*”</li>
</ul></li>
</ul></li>
</ul></div>

 <h4> <a id="universal-linkapp-links-nasıl-tanımlanır" class="anchor" href="#universal-linkapp-links-nasıl-tanımlanır">¶</a>Universal Link/App Links: Nasıl Tanımlanır?</h4> <div class="outline-text-4" id="text-orgb4421ec">
 <p>
Universal Link veya App Links yeteneğini kullanmak için öncelikle “ <a href="https://developer.apple.com/account/resources/identifiers/list">https://developer.apple.com/account/resources/identifiers/list</a>” adresine gidip, uygulamanızı seçmeniz gerekiyor. Daha sonra “Capabilities” sekmesi altından, “Associated Domains” özelliğini aktif hale getiriyorsunuz.
</p>

 <p>
Xcode’da, sol menüden projenizi seçtikten sonra sırasıyla: Target -> Signing & Capabilities -> Associated Domains sekmesine geliriz. Associated Domain ekleriz. Burada dikkat etmemiz gereken nokta, URL’nizin “applinks: domainName.com” şeklinde tanımlanmasıdır.
</p>

 <p>
Bu adımların ardından, Universal Link yeteneğiniz aktif hale gelmiş olacaktır. Bu yeteneği test etmek için, telefonunuzdan Safari’ye gidip uygulamanızın web sitesine giderseniz, iOS otomatik olarak bir öneri sunacaktır.
</p>


 <div id="org6ae5ce0" class="figure">
 <p> <img src="/img/4.jpg" class="content-image" width="100%"></img></p>
</div>
</div>

 <h4> <a id="uygulama-i̇çi-yönlendirme" class="anchor" href="#uygulama-i̇çi-yönlendirme">¶</a>Uygulama İçi Yönlendirme</h4> <div class="outline-text-4" id="text-orgbd0a2f4">
 <p>
Universal Link yeteneğini ekledikten sonra, uygulamanızın belirli bir sayfasına yönlendirebilmek için URL’yi karşılayacak bir metot belirlememiz gerekiyor. Bu metot, genellikle AppDelegate dosyasında bulunur.
</p>

 <p>
URL Scheme’de linklerimizi “open url: URL” metodunda handle ediyorduk, ancak Universal Link yönlendirmelerini “continue userActivity: NSUserActivity” metodunda handle ediyoruz.
</p>

 <p width="80%">
 <img src="/img/5.jpg" class="content-image" width="100%"></img>
Örneğin, “www.myApp.com/app/profile” gibi bir linke tıkladığınızda bu metot handle edecektir.
</p>

 <p>
Bu kod yapısında,
</p>
 <ul class="org-ul"> <li>`url` = “www.myApp.com/app/profile?user=xKralTR”</li>
 <li>`view` = “profile”</li>
 <li>`parameters` = [“user” = “xKralTR”]</li>
</ul> <p>
olacaktır.
</p>

 <p>
Bu bilgilerin ışığında, uygulamanızın belirli bir sayfasına yönlendirebilme yeteneğine sahip olmuş olursunuz. Bu, uygulamanızın kullanıcı deneyimini önemli ölçüde geliştirebilir ve kullanıcıların uygulamanız içerisinde daha kolay bir şekilde gezinmelerini sağlar.
</p>

 <p>
Son olarak, tüm bu bilgileri özetleyen bir diyagramı incelemek, konsepti daha iyi anlamanızı sağlayabilir. Aşağıya bununla ilgili bir diyagram bırakıyorum. Yazımı okuduğunuz için teşekkürler, bir sonraki yazılarda görüşmek üzere.
</p>


 <div id="org5d9407f" class="figure">
 <p> <img src="/img/6.jpg" class="content-image" width="100%"></img></p>
</div>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-orgdcb838d">
 <ol class="org-ol"> <li> <a href="https://medium.com/@ydemirkoparan/swift-ile-deep-linking-nas%C4%B1l-yap%C4%B1l%C4%B1r-e815fee93b97">Swift ile DeepLinking nasıl yapılır?</a></li>
 <li> <a href="https://medium.com/wolox/ios-deep-linking-url-scheme-vs-universal-links-50abd3802f97">iOS Deep Linking Scheme vs Universal Links</a></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/ios_deep_link/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/ios_deep_link/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Navigation Desenleri</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-orgd2e5ce6">
 <p>
Selamlar,  <code>navigation</code> mobil uygulamalarda kullanıcının ekranlar arasında nasıl dolaşması gerektiğine dair haritayı sağlamaktadır.
Bu haritanın farklı yaklaşımları mevcut, görsel olarak Frank Rausch tarafından yazılan bu bloğu incelemenizi öneririm.
</p>

 <p>
 <a href="https://frankrausch.com/ios-navigation">https://frankrausch.com/ios-navigation</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/navigation_desenleri/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/navigation_desenleri/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Netfox ile iOS uygulamalarda network izlemek</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://www.linkedin.com/in/ugurcan-durak/">Uğurcan Durak</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org5abb8ee">

 <div id="org49415cb" class="figure">
 <p> <img src="/img/NetFoxImage.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span> <img src="/img/overview1_5_3.gif" class="content-image" width="100%"></img></p>
</div>

 <p>
Merhabalar, bu yazıda mobil cihazda network isteklerini detaylı şekilde görüntülemek için kullanılan faydalı olduğunu düşündüğüm  <b> <a href="https://github.com/kasketis/netfox">Netfox</a></b> kütüphanesinden bahsedicem.
</p>

 <p>
Çok detaya girmeden genel hatlarıyla nedir? nasıl kullanılır? gibi başlıklarla değineceğim. Hadi başlayalım :)
</p>
</div>

 <h3> <a id="netfox-nedir" class="anchor" href="#netfox-nedir">¶</a>Netfox Nedir?</h3> <div class="outline-text-3" id="text-org993b8b6">
 <p>
 <b> <a href="https://github.com/kasketis/netfox">Netfox</a></b> kütüphanesi, tüm network işlemlerini mobil cihaz üzerinden detaylı bir şekilde görüntüleyebileceğimiz  <code>open source</code> bir kütüphanedir.
</p>

 <p>
Netfox’u uygulama içerisinde istediğimiz bir anda başlatıp anlık olarak uygulamamızın yapmış olduğu tüm istekleri listeleyebilir ve detaylı bir şekilde  <code>body</code>,  <code>header</code>,  <code>response</code> gibi tüm network etkileşimlerini inceleyebiliriz.
</p>

 <p>
Bu tarz kütüphanelerin en güzel yanı, mobil cihazımız bilgisayara bağlı olmadan da istediğimiz bir anda network log’larına bakabilmektir.
Bu özellik testçiler için oldukça faydalıdır. Çünkü herhangi bir hata anında doğrudan developer’a bildirmek yerine log’ları inceleyip hata hakkında fikir sahibi olabilirler.
</p>
</div>

 <h3> <a id="netfox-nasıl-kullanılır" class="anchor" href="#netfox-nasıl-kullanılır">¶</a>Netfox Nasıl Kullanılır?</h3> <div class="outline-text-3" id="text-org8d0c240">
 <p>
 <code>Netfox</code>’un kullanımı ve projeye entegre edilmesi oldukça basittir.
</p>

 <p>
Varsayılan davranışı  <b> <b>shake</b></b> olarak belirlenmiş olsada custom bir şekilde istediğimiz bir butona ya da bir view event’ine atayarak Netfox’u başlatabiliriz. Öncelikle projeye nasıl eklenir ona bakalım.
</p>
</div>

 <h3> <a id="netfoxrsquoun-projeye-eklenmesi" class="anchor" href="#netfoxrsquoun-projeye-eklenmesi">¶</a>Netfox’un Projeye Eklenmesi</h3> <div class="outline-text-3" id="text-org9eafeac">
 <ol class="org-ol"> <li>Netfox kütüphanesini  <b> <b>SPM</b></b>,  <b> <b>CocoaPods</b></b> ve  <b> <b>Carthage</b></b> olmak üzere üç ayrı yöntem ile projemize ekleyebiliriz. Bu yöntemlerden herhangi biriyle eklediğinizi varsayarak bir sonraki adıma geçiyorum.</li>

 <li>Kütüphaneyi projeye ekledik şimdi ise  <code>initiliaze</code> edeceğiz. Bunun için AppDelegate class’ına gidip aşağıdaki gibi gerekli kodları ekliyoruz.</li>
</ol> <p>
Netfox Import:
</p>
 <div class="highlight"> <pre> <span></span>   <span class="cp">#if</span>  <span class="cp">DEBUG</span>
   <span class="kd">import</span>  <span class="nc">netfox</span>
   <span class="cp">#endif</span>
</pre></div>

 <p>
Burada   <b>#if DEBUG</b> ve  <b>#endif</b> kodlarını ekleyerek kodun sadece debug moddayken import olmasını sağlıyoruz. Daha sonra uygulama ilk başlatıldığında hazır hale gelmesini istediğim için aşağıdaki gibi başlatıcı fonksiyonun içerisine kodlarımızı ekliyoruz.
</p>

 <p>
Netfox başlatma:
</p>
 <div class="highlight"> <pre> <span></span>   <span class="kd">func</span>  <span class="nf">application</span> <span class="p">(</span>
     <span class="kc">_</span>  <span class="n">application</span> <span class="p">:</span>  <span class="bp">UIApplication</span> <span class="p">,</span>
     <span class="n">didFinishLaunchingWithOptions</span>  <span class="n">launchOptions</span> <span class="p">:</span>  <span class="p">[</span> <span class="bp">UIApplication</span> <span class="p">.</span> <span class="n">LaunchOptionsKey</span> <span class="p">:</span>  <span class="nb">Any</span> <span class="p">]?</span>
   <span class="p">)</span>  <span class="p">-></span>  <span class="nb">Bool</span>  <span class="p">{</span>
       <span class="cp">#if</span>  <span class="cp">DEBUG</span>
       <span class="n">NFX</span> <span class="p">.</span> <span class="n">sharedInstance</span> <span class="p">().</span> <span class="n">start</span> <span class="p">()</span>
       <span class="n">NFX</span> <span class="p">.</span> <span class="n">sharedInstance</span> <span class="p">().</span> <span class="n">setGesture</span> <span class="p">(.</span> <span class="n">shake</span> <span class="p">)</span>
       <span class="cp">#endif</span>
   <span class="p">}</span>
</pre></div>

 <p>
Burada  <b> <b>start()</b></b> methodunu çağırarak Netfox’ı initiliaze ediyoruz ardından  <b> <b>setGesture()</b></b> ile Netfox’ın nasıl açılacağını belirliyoruz.
</p>

 <p>
Varsayılan davranışı shake olduğundan özellikle belirtmenize gerek yok örnek olması açısından ekledim. Siz dilerseniz  <b> <b>custom</b></b> parametresini geçip daha sonra dilediğiniz yerde  <b> <b>show()</b></b> methodu ile açılmasını sağlayabilirsiniz.
</p>
</div>

 <h3> <a id="netfox-özetle" class="anchor" href="#netfox-özetle">¶</a>Netfox Özetle</h3> <div class="outline-text-3" id="text-org1dda4c4">
 <p>
Evet hepsi bu kadar :) Şimdi dilediğiniz gibi cihazı sallayarak ya da atamış olduğunuz bir buton ile Netfox’ı başlatabilir ve log’ları inceleyebilirsiniz.
</p>

 <p>
Daha detaylı incelemek isteyenler için aşağıya link bırakıyorum. Umarım faydalı olur zaman ayırdığınız için teşekkürler.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org7a40d8b">
 <ol class="org-ol"> <li> <a href="https://github.com/kasketis/netfox">Netfox Github Kütüphanesi</a></li>
 <li> <img src="/img/overview1_5_3.gif" class="content-image" width="100%"></img></li>
</ol></div>
</div>]]></description>
  <link>https://mobilen.art/news/netfox_ile_ios_uygulamalarda_network/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/netfox_ile_ios_uygulamalarda_network/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>WWDC 2023 geldi!</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/suat-karakusoglu">Suat Karakuşoğlu</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org34f01c4">
 <p>
 <a href="https://developer.apple.com/wwdc23/">WWDC 2023</a> sunum takvimi hazır.
 <a href="https://www.apple.com/newsroom/2023/05/apples-worldwide-developers-conference-to-kick-off-june-5-2023/">Apple WWDC 2023 konuları</a> da belirlendi.
</p>

 <p>
Keynote sunumu Türkiye saati ile 5 Haziranda  <span class="timestamp-wrapper"> <span class="timestamp">[2023-06-05 Mon 20:00] </span></span> başlayacak.
 <a href="https://www.youtube.com/watch?v=GYkq9Rgoj8E&ab_channel=Apple">Buradaki link</a> üzerinden alarm kurup, açıp izleyebilirsiniz.
</p>

 <p>
iOS 17 ile beraber Apple duyurduğu  <a href="https://www.apple.com/newsroom/2023/05/apple-previews-live-speech-personal-voice-and-more-new-accessibility-features/">erişilebilirlik</a> yeteneklerini daha geliştirdiklerini görüyoruz.
</p>

 <dl class="org-dl"> <dt>One More Thing!</dt> <dd>VR gözlüğü konusundaki atılımların meyvesi bu toplantıda görücüye çıkabilir.</dd>
</dl></div>
</div>]]></description>
  <link>https://mobilen.art/news/wwdc_2023_geldi/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/wwdc_2023_geldi/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
<item>
  <title>Xcode Breakpoints ile Otomatizasyon</title>
  <description><![CDATA[<div id="content"> <p>
 <a href="https://tr.linkedin.com/in/alper-cem-%C3%B6zt%C3%BCrk-a625671a8">Alper Cem Öztürk</a> yazdı.
</p>

 <h2> <a id="i̇çerik" class="anchor" href="#i̇çerik">¶</a>İçerik</h2> <div class="outline-text-2" id="text-org61ad5ed">
 <p>
Uygulamanızı her test ettiğinizde oturum açma bilgilerinizi manuel olarak girmekten sıkıldıysanız ve geliştirme sırasında zaman kazanmak istiyorsanız;  <code>xcode breakpoints</code> ihtiyacınız olan çözüm olabilir.
</p>
</div>

 <h3> <a id="breakpoints-nedir" class="anchor" href="#breakpoints-nedir">¶</a>Breakpoints Nedir?</h3> <div class="outline-text-3" id="text-org106b6a5">
 <p>
 <code>Breakpoint</code>, bir programın çalışması sırasında belirli bir kod satırında duraklamasını sağlayan ve geliştiricilere programın çalışmasını izleme ve  <code>debug</code> imkanı veren bir araçtır. Bu, değişkenlerin değerlerini incelemenize, kodda satır satır ilerlemenize ve başka işlemler yapmanıza olanak tanır.
</p>
</div>

 <h3> <a id="breakpoints-nasıl-oluşturulur" class="anchor" href="#breakpoints-nasıl-oluşturulur">¶</a>Breakpoints Nasıl Oluşturulur?</h3> <div class="outline-text-3" id="text-orgf26e958">
 <p>
Bir “breakpoint” ayarlamak için, duraklatmak istediğiniz kod satırı numarasının yazılı olduğu alana tıklamanız yeterlidir. “Breakpoint”’i belirtmek için sistem ayarlarında seçili olan “accent color” renginde bir işaretçi görünecektir. Her ne kadar “line numbers” ayarı varsayılan olarak açık gelse de eğer açıkta kullanmıyosanız, ilgili satırın hemen yanına tıklayabilirsiniz veya text editing ayarlarından açabilirsiniz.
</p>

 <p>
Bir “breakpoint” belirledikten sonra kodunuzu çalıştırabilirsiniz. “Debugger” “breakpoint”’te duraklayacaktır. Daha sonra kodunuzu ve değişkenlerinizi incelemek için “debugger”’ın özelliklerini kullanabilirsiniz.
</p>
</div>

 <h3> <a id="breakpointrsquolerin-farklı-kullanım-senaryoları" class="anchor" href="#breakpointrsquolerin-farklı-kullanım-senaryoları">¶</a>Breakpoint’lerin Farklı Kullanım Senaryoları</h3> <div class="outline-text-3" id="text-orgcff370e">
 <p>
Geliştiriciler, “oturum açma” aşamalarını test etmek ve “debug” yapmak için zaman ve emek harcamalarını gerektiren birçok senaryo ile karşılaşabilirler.  <code>Breakpoints</code> ve  <code>Watchpoints</code>, bu amaç için oldukça kullanışlıdır. Bu kullanım senaryolarından birkaçına beraber bakalım.
</p>

 <p>
Mobil bir uygulamada birden fazla kullanıcı rolü olduğunu düşünelim. Her bir rol için farklı bir oturum açma işlemi gerekebilir. Örneğin, yönetici rolü için ayrı bir oturum açma işlemi, kullanıcı rolü için ayrı bir oturum açma işlemi vb. Bu durumda, oturum açma işlemlerini otomatikleştirmek amacıyla, her bir rol için ayrı bir “breakpoint” kullanabilirsiniz.
</p>

 <p>
Sadece belirli koşullar altında oturum açmayı otomatikleştirmek istiyorsanız, koşullu “breakpoint”’leri kullanabilirsiniz. Örneğin, yalnızca belirli bir kullanıcının oturum açmaya çalıştığı durumlarda oturum açmayı otomatikleştirmek isteyebilirsiniz. Bu durumda, istenen kullanıcı adı ile eşleştiğinde tetiklenen bir koşullu “breakpoint” ayarlamak işinizi görecektir.
</p>

 <p>
Watchpoint’ler, oturum açma işlemi sırasında değişkenlerin değerlerini izlemek için kullanılır. “Debug” işlemi sırasında bir değişkene watchpoint eklenmesiyle, değişkenin değeri değiştiğinde programın çalışması durdurulur. Bu, oturum açma işlemi sırasında belirli değişkenlerin değerlerini izlemek istediğiniz durumlarda faydalı olabilir. Örneğin, bir parola değişkeninin doğru bir şekilde “encrypt” edilip edilmediğini kontrol etmek isteyebilirsiniz. Bu değişken üzerinde bir watchpoint ayarlayarak, doğru bir şekilde “encrypt” edildiğinden emin olabilir ve potansiyel güvenlik sorunlarını önleyebilirsiniz.
</p>
</div>

 <h3> <a id="breakpoint-expressions" class="anchor" href="#breakpoint-expressions">¶</a>Breakpoint Expressions</h3> <div class="outline-text-3" id="text-org45fdebd">
 <p>
“Breakpoint expressions”, “debug” yapmanın güçlü bir yoludur. Yalnızca programın yürütülmesini durdurup değişkenlerin değerini izlemenin yanı sıra belirli aksiyonlar alabilmenizi sağlar. Tam olarak bu yazının başlığında belirtildiği gibi, oturum açma işlemlerini otomatik hale getirmek buna örnek olarak verilebilir.
</p>

 <p>
Şimdi “breakpoint” expressions’ların nasıl çalıştığına göz atmak için, hep beraber  <a href="https://www.danijelavrzan.com/posts/2023/04/login-xcode-breakpoint">Login XCode Breakpoints</a> blog yazısını inceleyelim.
</p>

 <p>
Öncelikle bu yazının başından beri konuştuğumuz oturum açma işlemlerini temsil edecek bir SwiftUI arayüzü tasarlayalım.
</p>

 <p>
Blog yazısında da bahsedildiği gibi “fullscreen modal” olarak sunulan iki “textfield” ile örnek bir login ekranı oluşturalım. Uygulama `launchLogin()` ile başladığında, “textfield”’lar doğru bilgileri içeriyorsa “modal screen” kapatılsın ve ContentView, başarılı login mesajıyla beraber görüntülensin.
</p>

 <div class="highlight"> <pre> <span></span>   <span class="kd">struct</span>  <span class="nc">LoginView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="p">@</span> <span class="n">State</span>  <span class="kd">private</span>  <span class="kd">var</span>  <span class="nv">username</span> <span class="p">:</span>  <span class="nb">String</span>  <span class="p">=</span>  <span class="s">""</span>
       <span class="p">@</span> <span class="n">State</span>  <span class="kd">private</span>  <span class="kd">var</span>  <span class="nv">password</span> <span class="p">:</span>  <span class="nb">String</span>  <span class="p">=</span>  <span class="s">""</span>
       <span class="p">@</span> <span class="n">Environment</span> <span class="p">(</span> <span class="err">\</span> <span class="p">.</span> <span class="n">dismiss</span> <span class="p">)</span>  <span class="kd">var</span>  <span class="nv">dismiss</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">VStack</span> <span class="p">(</span> <span class="n">alignment</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">center</span> <span class="p">,</span>  <span class="n">spacing</span> <span class="p">:</span>  <span class="mi">20</span> <span class="p">)</span>  <span class="p">{</span>
               <span class="n">HStack</span>  <span class="p">{</span>
                   <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"person"</span> <span class="p">)</span>
                   <span class="n">TextField</span> <span class="p">(</span> <span class="s">"Enter username"</span> <span class="p">,</span>  <span class="n">text</span> <span class="p">:</span>  <span class="err">$</span> <span class="n">username</span> <span class="p">)</span>
               <span class="p">}</span>
               <span class="n">HStack</span>  <span class="p">{</span>
                   <span class="n">Image</span> <span class="p">(</span> <span class="n">systemName</span> <span class="p">:</span>  <span class="s">"key"</span> <span class="p">)</span>
                   <span class="n">TextField</span> <span class="p">(</span> <span class="s">"Enter password"</span> <span class="p">,</span>  <span class="n">text</span> <span class="p">:</span>  <span class="err">$</span> <span class="n">password</span> <span class="p">)</span>
               <span class="p">}</span>
               <span class="n">Button</span> <span class="p">(</span> <span class="s">"LOG IN"</span> <span class="p">)</span>  <span class="p">{</span>
                   <span class="c1">// BREAKPOINT HERE</span>
                   <span class="n">initiateLogin</span> <span class="p">()</span>
               <span class="p">}</span>
                 <span class="p">.</span> <span class="n">buttonStyle</span> <span class="p">(.</span> <span class="n">borderedProminent</span> <span class="p">)</span>
           <span class="p">}</span>
             <span class="p">.</span> <span class="n">padding</span> <span class="p">()</span>
             <span class="p">.</span> <span class="n">textFieldStyle</span> <span class="p">(.</span> <span class="n">roundedBorder</span> <span class="p">)</span>
       <span class="p">}</span>

       <span class="c1">// Login Function</span>
       <span class="kd">func</span>  <span class="nf">initiateLogin</span> <span class="p">()</span>  <span class="p">{</span>
           <span class="k">if</span>  <span class="n">username</span>  <span class="p">==</span>  <span class="s">"mobilen"</span>  <span class="o">&&</span>  <span class="n">password</span>  <span class="p">==</span>  <span class="s">"dadada"</span>  <span class="p">{</span>
               <span class="c1">// Short pause - dismiss is too fast</span>
               <span class="n">DispatchQueue</span> <span class="p">.</span> <span class="n">main</span> <span class="p">.</span> <span class="n">asyncAfter</span> <span class="p">(</span> <span class="n">deadline</span> <span class="p">:</span>  <span class="p">.</span> <span class="n">now</span> <span class="p">()</span>  <span class="o">+</span>  <span class="mf">1.0</span> <span class="p">)</span>  <span class="p">{</span>
                   <span class="n">dismiss</span> <span class="p">()</span>
               <span class="p">}</span>
           <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <div class="highlight"> <pre> <span></span>   <span class="kd">import</span>  <span class="nc">SwiftUI</span>

   <span class="kd">struct</span>  <span class="nc">ContentView</span> <span class="p">:</span>  <span class="n">View</span>  <span class="p">{</span>
       <span class="p">@</span> <span class="n">State</span>  <span class="kd">private</span>  <span class="kd">var</span>  <span class="nv">isPresented</span>  <span class="p">=</span>  <span class="kc">true</span>

       <span class="kd">var</span>  <span class="nv">body</span> <span class="p">:</span>  <span class="n">some</span>  <span class="n">View</span>  <span class="p">{</span>
           <span class="n">VStack</span>  <span class="p">{</span>
               <span class="n">Text</span> <span class="p">(</span> <span class="s">"Hello! You've successfully logged in."</span> <span class="p">)</span>
           <span class="p">}</span>
             <span class="p">.</span> <span class="n">onAppear</span>  <span class="p">{</span>
                 <span class="n">isPresented</span>  <span class="p">=</span>  <span class="kc">true</span>
             <span class="p">}</span>
             <span class="p">.</span> <span class="n">fullScreenCover</span> <span class="p">(</span> <span class="n">isPresented</span> <span class="p">:</span>  <span class="err">$</span> <span class="n">isPresented</span> <span class="p">)</span>  <span class="p">{</span>
                 <span class="n">LoginView</span> <span class="p">()</span>
             <span class="p">}</span>
       <span class="p">}</span>
   <span class="p">}</span>
</pre></div>

 <p>
Oturum açma işlemini otomatik yapabilmek için öncelikle LoginView sayfasında ki buton’un “action”’ına bir “breakpoint” koymalıyız. Böylelikle program, çalışma sırasında kullanıcının buton aksiyonu ile beraber duraklayacaktır.
Bizim istediğimiz ise, programın buton aksiyonu ile duraklamasından sonra oturum açma bilgilerimizle beraber tekrar yürütülmesi. Bunun için oluşturduğumuz “breakpoint”’e sağ tıklayarak “Edit breakpoint” seçeneğine tıklayalım.
</p>


 <div id="orgda643c8" class="figure">
 <p> <img src="/img/edit-breakpoint-window.jpg" class="content-image" width="100%"></img></p>
 <p> <span class="figure-number">Figure 1: </span>Xcode edit breakpoint window</p>
</div>

 <p>
Açılan pencerede “breakpoint”’e isim verebilir, belli koşullar altında çalışmasını ayarlayabilir veya program durduktan sonra yapılacak bir aksiyon tanımlayabiliriz. Biz buton aksiyonu sonrasında “textfield”’ları geçerli bilgiler ile doldurup, programın çalışmasına devam etmesini sağlamalıyız.
</p>

 <p>
Bunu yapmak için aşağıdaki “Add Action” butonuna tıklayalım. “Action” tipinin “default” olarak “debugger command” geldiğini göreceğiz. Sonrasında ise hemen altındaki alana ise tanımlayacağımız aksiyonu `expr` komutuyla belirtelim.
</p>

 <p>
`expr` komutu, “expression” kelimesinin kısaltmasıdır ve “Breakpoint Actions” bölümünde kullanılan bir komuttur. `expr` komutuyla belirlediğiniz bir değişkenin değerini değiştirebilir veya bir fonksiyonu çağırabilirsiniz. Örneğin, `expr foo = 42` ile “foo” değişkeninin değerini 42 olarak değiştirebilirsiniz.
</p>

 <p>
Burada ilk action’da,  <code>_username.wrappedValue</code> değişkeninin değerini “mobilen” ile değiştirmek için expr _username.wrappedValue = “mobilen” komutunu kullanıyoruz.
</p>

 <p>
İkinci action’da ise,  <code>_password.wrappedValue</code> değişkenin değerini “dadada” ile değiştirmek için expr _password.wrappedValue = “dadada” komutunu kullanıyoruz.
</p>

 <p>
Ayrıca “Action” tipi olarak “Log Message” seçeneğini de kullanılabilir ve belirlediğiniz değişkenin değerini “Console” panelinde görüntüleyebilirsiniz.
Yine “Action” tipi olarak “Sound” seçeneğini kullanabilir ve belirli bir işlem gerçekleştiğinde ses çalabilirsiniz.
</p>

 <p>
Son olarak en altta bulunan  <code>Automatically continue after evaluating actions</code> seçeneğini işaretleyelim. Bu  <code>textfield</code>’ları geçerli bilgiler ile doldurduktan sonra, programın çalışmasına devam etmesini belirlediğimiz kısımdır. Bu yüzden “checkbox”’ı işaretlemeyi atlamamalıyız.
</p>

 <p>
Tüm adımları gerçekleştirdikten sonra yapmanız gereken tek şey, kodunuzu çalıştırmak ve login butonuna tıklamak. Buton aksiyonu ile beraber “textfield”’ların geçerli bilgiler ile doldurulduğunu ve modal screen’in kapatıldığını görebilirsiniz.
</p>

 <p>
Bu yazıda, “breakpoint”’leri ve kullanım senaryolarını ele aldık. Ardından  <a href="https://www.danijelavrzan.com/posts/2023/04/login-xcode-breakpoint">Login XCode Breakpoints</a> yazısındaki örneklerle uygulamalarımızdaki herhangi bir alanı nasıl otomatikleştirebileceğimizi öğrendik.
</p>

 <p>
“Breakpoints”’leri kullanmak geliştirme sırasında zaman kazanmanıza yardımcı olabilir ve uygulamanızı her test ettiğinizde oturum açma bilgilerinizi manuel yazmak zorunda kalmadan zaman kazanabilirsiniz.
</p>
</div>

 <h3> <a id="kaynakça" class="anchor" href="#kaynakça">¶</a>Kaynakça</h3> <div class="outline-text-3" id="text-org6599a49">
 <p>
 <a href="https://www.danijelavrzan.com/posts/2023/04/login-xcode-breakpoint">Login XCode Breakpoints</a>
</p>
</div>
</div>]]></description>
  <link>https://mobilen.art/news/xcode_breakpoints_ile_otomatizasyon/index.html</link>
  <guid isPermaLink="false">https://mobilen.art/news/xcode_breakpoints_ile_otomatizasyon/index.html</guid>
  <pubDate>Thu, 11 May 2023 08:00:00 +0300</pubDate>
</item>
</channel>
</rss>
